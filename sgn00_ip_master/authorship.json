[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":29,"author":{"gitId":"-"},"content":"}"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":33,"author":{"gitId":"-"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":42,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"-"},"content":"}"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"    mainClassName \u003d \"duke.Launcher\""},{"lineNumber":47,"author":{"gitId":"-"},"content":"}"},{"lineNumber":48,"author":{"gitId":"-"},"content":""},{"lineNumber":49,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":50,"author":{"gitId":"-"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":51,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":52,"author":{"gitId":"-"},"content":"}"},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":55,"author":{"gitId":"-"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":56,"author":{"gitId":"-"},"content":"}"},{"lineNumber":57,"author":{"gitId":"-"},"content":""},{"lineNumber":58,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":59,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":"    enableAssertions \u003d true"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":45,"sgn00":16}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"### Feature 1 - Add Task"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"Add a task.  "},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"The task can be: todo, event, deadline"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"### Feature 2 - Mark Task as Done"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"### Feature 3 - Delete Task"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"### Feature 4 - Find task "},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"Find a task by a given keyword."},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"### Feature 5 - List tasks"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"### `todo` - Adds a todo task"},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"Adds a todo task to the list of tasks."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"`todo assignment`"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":25,"author":{"gitId":"-"},"content":""},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"`Got it. I\u0027ve added this task:`\\"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"`[T][X] assignment`\\"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"` Now you have 3 tasks in the list`"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"### `event` - Adds an event task"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"Adds an event task to the list of tasks. Date specified must be in \u003cb\u003eYYYY-MM-DD\u003c/b\u003e format."},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"`event lesson /at 2020-09-15`"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"Expected outcome:"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"`Got it. I\u0027ve added this task:`\\"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"`[E][X] lesson (at: Sep 15 2020)`\\"},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"` Now you have 3 tasks in the list`"},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"### `deadline` - Adds a deadline task"},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"Adds a deadline task to the list of tasks. Date specified must be in \u003cb\u003eYYYY-MM-DD\u003c/b\u003e format."},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"`deadline project /by 2020-09-16`"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"Expected outcome:"},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"`Got it. I\u0027ve added this task:`\\"},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"`[D][✗] project (at: Sep 16 2020)`\\"},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"` Now you have 3 tasks in the list`"},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":58,"author":{"gitId":"sgn00"},"content":"### `list` - Lists all tasks"},{"lineNumber":59,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":"Lists all tasks. Each task is given an index starting from 1."},{"lineNumber":61,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":62,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":63,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":64,"author":{"gitId":"sgn00"},"content":"`list`"},{"lineNumber":65,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":66,"author":{"gitId":"sgn00"},"content":"Expected outcome:"},{"lineNumber":67,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":68,"author":{"gitId":"sgn00"},"content":"`Here are the tasks in your list:`\\"},{"lineNumber":69,"author":{"gitId":"sgn00"},"content":"`1. [T][✗] assignment`\\"},{"lineNumber":70,"author":{"gitId":"sgn00"},"content":"`2. [E][✗] lesson (at: Sep 15 2020) `\\"},{"lineNumber":71,"author":{"gitId":"sgn00"},"content":"`3. [D][✗] project (at: Sep 16 2020)`"},{"lineNumber":72,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":73,"author":{"gitId":"sgn00"},"content":"### `done` - Mark task as done"},{"lineNumber":74,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":75,"author":{"gitId":"sgn00"},"content":"Mark a task specified by the index as done. Index is obtained through `list`."},{"lineNumber":76,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":77,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":78,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":79,"author":{"gitId":"sgn00"},"content":"`done 1`"},{"lineNumber":80,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":81,"author":{"gitId":"sgn00"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":83,"author":{"gitId":"sgn00"},"content":"`Nice I\u0027ve marked this task as done:`\\"},{"lineNumber":84,"author":{"gitId":"sgn00"},"content":"`1. [T][✓] assignment`"},{"lineNumber":85,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":86,"author":{"gitId":"sgn00"},"content":"### `delete` - Delete a task"},{"lineNumber":87,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":88,"author":{"gitId":"sgn00"},"content":"Deletes a task specified by the index. Index is obtained through `list`."},{"lineNumber":89,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":90,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":91,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":92,"author":{"gitId":"sgn00"},"content":"`delete 1`"},{"lineNumber":93,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":94,"author":{"gitId":"sgn00"},"content":"Expected outcome:"},{"lineNumber":95,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":96,"author":{"gitId":"sgn00"},"content":"`Noted. I\u0027ve removed this task:`\\"},{"lineNumber":97,"author":{"gitId":"sgn00"},"content":"`[T][✓] assignment`\\"},{"lineNumber":98,"author":{"gitId":"sgn00"},"content":"`Now you have 2 tasks in the list`"},{"lineNumber":99,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":100,"author":{"gitId":"sgn00"},"content":"### `find` - Find a task"},{"lineNumber":101,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":102,"author":{"gitId":"sgn00"},"content":"Finds a task specified by the given keyword. The search is case insensitive."},{"lineNumber":103,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":104,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":105,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":106,"author":{"gitId":"sgn00"},"content":"`find project`"},{"lineNumber":107,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":108,"author":{"gitId":"sgn00"},"content":"Expected outcome:"},{"lineNumber":109,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":110,"author":{"gitId":"sgn00"},"content":"`Here are the matching tasks in your list:`\\"},{"lineNumber":111,"author":{"gitId":"sgn00"},"content":"`2. [D][✗] project (by: Sep 16 2020)`"},{"lineNumber":112,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":113,"author":{"gitId":"sgn00"},"content":"### `help` - Displays help page for commands"},{"lineNumber":114,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":115,"author":{"gitId":"sgn00"},"content":"Displays help page for an individual command or all commands."},{"lineNumber":116,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":117,"author":{"gitId":"sgn00"},"content":"Example of usage:"},{"lineNumber":118,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":119,"author":{"gitId":"sgn00"},"content":"`help todo`\\"},{"lineNumber":120,"author":{"gitId":"sgn00"},"content":"`help`"},{"lineNumber":121,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":122,"author":{"gitId":"sgn00"},"content":"Excepted outcome for `help todo`:\\"},{"lineNumber":123,"author":{"gitId":"sgn00"},"content":"`todo command`\\"},{"lineNumber":124,"author":{"gitId":"sgn00"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`Create a todo task.`\\"},{"lineNumber":125,"author":{"gitId":"sgn00"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`Format: todo \u003ctask name\u003e`\\"},{"lineNumber":126,"author":{"gitId":"sgn00"},"content":"\u0026nbsp;\u0026nbsp;\u0026nbsp;\u0026nbsp;`Eg. todo homework1`"},{"lineNumber":127,"author":{"gitId":"sgn00"},"content":""}],"authorContributionMap":{"-":14,"sgn00":113}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.command.Command;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.exception.DukeException;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.util.Parser;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import duke.util.Storage;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":" * Represents the Duke program."},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":13,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    private TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"    private Storage storage;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    private Ui ui;"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    public Duke(String filePath) {"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"        ui \u003d new Ui();"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        storage \u003d new Storage(filePath);"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        tasks \u003d storage.load();"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"    public static void main(String[] args) {"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        Duke duke \u003d new Duke(\"./data/duke.txt\");"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"        duke.run();"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"    public String getResponse(String input) {"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"            String response \u003d c.execute(tasks, ui);"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"            storage.save(tasks);"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"            return response;"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"        } catch (DukeException e) {"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"            return ui.print(e.getMessage());"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"    public String printHello() {"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"        return ui.printHello();"},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"     * Starts execution of the Duke program."},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"    public void run() {"},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"        printHello();"},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"        tasks \u003d storage.load();"},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"        boolean isExit \u003d false;"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"        while (!isExit) {"},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"            try {"},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"                String input \u003d ui.readInput();"},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"                Command c \u003d Parser.parse(input);"},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"                c.execute(tasks, ui);"},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":"                storage.save(tasks);"},{"lineNumber":58,"author":{"gitId":"sgn00"},"content":"            } catch (DukeException e) {"},{"lineNumber":59,"author":{"gitId":"sgn00"},"content":"                ui.print(e.getMessage());"},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":"            }"},{"lineNumber":61,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":3,"sgn00":60}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.gui.Main;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"public class Launcher {"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    public static void main(String[] args) {"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":10}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" * Represents a command to add a task."},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"public class AddCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    private Task task;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    public AddCommand(Task task) {"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.task \u003d task;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"     * Adds a Task to the TaskList."},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"     * @param taskList TaskList which the Task is added to."},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"     * @param ui Ui which helps prints output."},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"        taskList.addTask(task);"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        return ui.print(String.format(\"Got it. I\u0027ve added this task:\\n%s\\n Now you have %d tasks in the list\","},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"                task.toString(), taskList.getNumberOfTasks()));"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":28}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":" * Represents a command to stop the Duke program."},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"public class ByeCommand extends Command {"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"    @Override"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    public boolean isExit() {"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"        return true;"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"     * Prints goodbye message."},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"     * @param taskList TaskList which the Task is added to."},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"     * @param ui Ui which helps prints output."},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        return ui.print(\"Bye. Hope to see you again soon!\");"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":24}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"public abstract class Command {"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"    public abstract String execute(TaskList tasks, Ui ui);"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"    public boolean isExit() {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"        return false;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":13}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" * Represents a command to delete a task."},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    private int taskNumber;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"     * Removes a Task from the TaskList."},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"     * @param taskList TaskList which the Task is added to."},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"     * @param ui Ui which helps prints output."},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"        Task task \u003d taskList.deleteTask(taskNumber);"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        return ui.print(String.format(\"Noted. I\u0027ve removed this task:\\n%s\\nNow you have %d tasks in the list\","},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"                task.toString(), taskList.getNumberOfTasks()));"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":28}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" * Represents a command to mark a task as done."},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"public class DoneCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    private int taskNumber;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    public DoneCommand(int taskNumber) {"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"     * Marks a Task in the TaskList as done."},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"     * @param taskList TaskList which the Task is added to."},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"     * @param ui Ui which helps prints output."},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"        Task task \u003d taskList.completeTask(taskNumber);"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        return ui.print(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString());"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":27}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    private String matchString;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    public FindCommand(String matchString) {"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.matchString \u003d matchString;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"        List\u003cTask\u003e store \u003d taskList.getList();"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        String lowercaseString \u003d matchString.toLowerCase();"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        StringBuilder outputMessage \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"        store.stream().filter(task -\u003e task.toString().toLowerCase()"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"                .contains(lowercaseString)).forEach(task -\u003e {"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"                    matchingTasks.add(task);"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"                    outputMessage.append(String.format(\"%d. %s\", store.indexOf(task) + 1, task));"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"                });"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"        if (matchingTasks.isEmpty()) {"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"            return ui.print(String.format(\"You have no tasks matching \u0027%s\u0027\", matchString));"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"        } else {"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"            return ui.print(outputMessage.toString());"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":34}},{"path":"src/main/java/duke/command/HelpCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.util.Parser;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"public class HelpCommand extends Command {"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"    private static final String ALL \u003d \"all\";"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"    private String command;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"    public HelpCommand(String command) {"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"        this.command \u003d command.toLowerCase();"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"    public HelpCommand() {"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"        this.command \u003d ALL;"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    public String generateTodoMessage() {"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        return \"todo command\\n\""},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"                + \"    Create a todo task.\\n\""},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"                + \"    Format: todo \u003ctask name\u003e\\n\""},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. todo homework1\\n\";"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    public String generateEventMessage() {"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"        return \"event command\\n\""},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"                + \"    Create an event task.\\n\""},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"                + \"    Format: event \u003ctask name\u003e /at \u003cdate\u003e\\n\""},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. event meeting1 /at 2020-04-16\\n\""},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"                + \"    \u003cdate\u003e MUST be in YYYY-MM-DD format\\n\";"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"    public String generateDeadlineMessage() {"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"        return \"deadline command\\n\""},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"                + \"    Create a deadline task.\\n\""},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"                + \"    Format: deadline \u003ctask name\u003e /by \u003cdate\u003e\\n\""},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. deadline meeting1 /by 2020-04-16\\n\""},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"                + \"    \u003cdate\u003e MUST be in YYYY-MM-DD format\\n\";"},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"    public String generateByeMessage() {"},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"        return \"bye command\\n\""},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"                + \"    Stops this programme.\\n\";"},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"    public String generateDeleteMessage() {"},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"        return \"delete command\\n\""},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"                + \"    Deletes the task specified\\n\""},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"                + \"    Format: delete \u003ctask number\u003e\\n\""},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. delete 3\\n\""},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"                + \"    \u003ctask number\u003e is obtained by listing tasks\\n\";"},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"    public String generateDoneMessage() {"},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"        return \"done command\\n\""},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":"                + \"    Marks the task specified as done\\n\""},{"lineNumber":58,"author":{"gitId":"sgn00"},"content":"                + \"    Format: done \u003ctask number\u003e\\n\""},{"lineNumber":59,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. done 3\\n\""},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":"                + \"    \u003ctask number\u003e is obtained by listing tasks\\n\";"},{"lineNumber":61,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":63,"author":{"gitId":"sgn00"},"content":"    public String generateListMessage() {"},{"lineNumber":64,"author":{"gitId":"sgn00"},"content":"        return \"list command\\n\""},{"lineNumber":65,"author":{"gitId":"sgn00"},"content":"                + \"    Lists all tasks out in order of creation\\n\""},{"lineNumber":66,"author":{"gitId":"sgn00"},"content":"                + \"    Format: list\\n\""},{"lineNumber":67,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. list\\n\";"},{"lineNumber":68,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":70,"author":{"gitId":"sgn00"},"content":"    public String generateHelpMessage() {"},{"lineNumber":71,"author":{"gitId":"sgn00"},"content":"        return \"help command\\n\""},{"lineNumber":72,"author":{"gitId":"sgn00"},"content":"                + \"    Prints guide for commands.\\n\""},{"lineNumber":73,"author":{"gitId":"sgn00"},"content":"                + \"    Format: help \u003ccommand\u003e , help\\n\""},{"lineNumber":74,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. help, help todo\\n\";"},{"lineNumber":75,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":76,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":77,"author":{"gitId":"sgn00"},"content":"    public String generateFindMessage() {"},{"lineNumber":78,"author":{"gitId":"sgn00"},"content":"        return \"find command\\n\""},{"lineNumber":79,"author":{"gitId":"sgn00"},"content":"                + \"    Lists all tasks that match a given search term\\n\""},{"lineNumber":80,"author":{"gitId":"sgn00"},"content":"                + \"    Format: find \u003csearch term\u003e\\n\""},{"lineNumber":81,"author":{"gitId":"sgn00"},"content":"                + \"    Eg. find homework\\n\""},{"lineNumber":82,"author":{"gitId":"sgn00"},"content":"                + \"    This is a case insensitive search and does a\\n\""},{"lineNumber":83,"author":{"gitId":"sgn00"},"content":"                + \"    keyword search on all task names.\\n\";"},{"lineNumber":84,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":85,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":86,"author":{"gitId":"sgn00"},"content":"    public String generateAllMessage() {"},{"lineNumber":87,"author":{"gitId":"sgn00"},"content":"        return generateByeMessage() + \"\\n\""},{"lineNumber":88,"author":{"gitId":"sgn00"},"content":"                + generateDeadlineMessage() + \"\\n\""},{"lineNumber":89,"author":{"gitId":"sgn00"},"content":"                + generateDeleteMessage() + \"\\n\""},{"lineNumber":90,"author":{"gitId":"sgn00"},"content":"                + generateDoneMessage() + \"\\n\""},{"lineNumber":91,"author":{"gitId":"sgn00"},"content":"                + generateEventMessage() + \"\\n\""},{"lineNumber":92,"author":{"gitId":"sgn00"},"content":"                + generateFindMessage() + \"\\n\""},{"lineNumber":93,"author":{"gitId":"sgn00"},"content":"                + generateHelpMessage() + \"\\n\""},{"lineNumber":94,"author":{"gitId":"sgn00"},"content":"                + generateListMessage() + \"\\n\""},{"lineNumber":95,"author":{"gitId":"sgn00"},"content":"                + generateTodoMessage();"},{"lineNumber":96,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":98,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":99,"author":{"gitId":"sgn00"},"content":"        switch (command) {"},{"lineNumber":100,"author":{"gitId":"sgn00"},"content":"        case Parser.BYE:"},{"lineNumber":101,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateByeMessage());"},{"lineNumber":102,"author":{"gitId":"sgn00"},"content":"        case Parser.DEADLINE:"},{"lineNumber":103,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateDeadlineMessage());"},{"lineNumber":104,"author":{"gitId":"sgn00"},"content":"        case Parser.DELETE:"},{"lineNumber":105,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateDeleteMessage());"},{"lineNumber":106,"author":{"gitId":"sgn00"},"content":"        case Parser.DONE:"},{"lineNumber":107,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateDoneMessage());"},{"lineNumber":108,"author":{"gitId":"sgn00"},"content":"        case Parser.EVENT:"},{"lineNumber":109,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateEventMessage());"},{"lineNumber":110,"author":{"gitId":"sgn00"},"content":"        case Parser.FIND:"},{"lineNumber":111,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateFindMessage());"},{"lineNumber":112,"author":{"gitId":"sgn00"},"content":"        case Parser.LIST:"},{"lineNumber":113,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateListMessage());"},{"lineNumber":114,"author":{"gitId":"sgn00"},"content":"        case Parser.TODO:"},{"lineNumber":115,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateTodoMessage());"},{"lineNumber":116,"author":{"gitId":"sgn00"},"content":"        case Parser.HELP:"},{"lineNumber":117,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateHelpMessage());"},{"lineNumber":118,"author":{"gitId":"sgn00"},"content":"        default:"},{"lineNumber":119,"author":{"gitId":"sgn00"},"content":"            return ui.print(generateAllMessage());"},{"lineNumber":120,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":122,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":122}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import duke.util.TaskList;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import duke.util.Ui;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":" * Represents a command to list all tasks."},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"     * Prints all the Tasks in the TaskList."},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"     * @param taskList TaskList which the Task is added to."},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"     * @param ui Ui which helps prints output."},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    public String execute(TaskList taskList, Ui ui) {"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        StringBuilder sb \u003d new StringBuilder();"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        sb.append(ui.print(\"Here are the tasks in your list:\\n\"));"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        List\u003cTask\u003e store \u003d taskList.getList();"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"        store.forEach(task -\u003e sb.append(ui.print(String.format(\"%d. %s\\n\", store.indexOf(task) + 1, task))));"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"        return sb.toString();"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":26}},{"path":"src/main/java/duke/exception/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"public class DukeException extends Exception {"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"    public DukeException(String message) {"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"        super(message);"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":8}},{"path":"src/main/java/duke/exception/InvalidCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"public class InvalidCommandException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"    public InvalidCommandException() {"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"        super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":8}},{"path":"src/main/java/duke/exception/InvalidDateFormatException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"public class InvalidDateFormatException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"    public InvalidDateFormatException() {"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"        super(\"\\u2639 OOPS!!! Your date format is wrong! Make sure it is in yyyy-mm-dd format, eg. 2019-10-15\");"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":8}},{"path":"src/main/java/duke/exception/InvalidDeadlineException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"public class InvalidDeadlineException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"    public InvalidDeadlineException() {"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"        super(\"\\u2639 OOPS!!! Your deadline command format is wrong!\");"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":7}},{"path":"src/main/java/duke/exception/InvalidDescriptionException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"public class InvalidDescriptionException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"    public InvalidDescriptionException() {"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"        super(\"\\u2639 OOPS!!! The description for a task command cannot be empty!\");"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":8}},{"path":"src/main/java/duke/exception/InvalidEventException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.exception;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"public class InvalidEventException extends DukeException {"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"    public InvalidEventException() {"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"        super(\"\\u2639 OOPS!!! Your event command format is wrong!\");"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":8}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    private static final String DUKE \u003d \"duke\";"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"    private static final String HUMAN \u003d \"human\";"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"    private DialogBox(String text, Image img, String type) {"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"        dialog.setText(text);"},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"        if (type \u003d\u003d DUKE) {"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"            dialog.setStyle(\"-fx-border-color: #ffffed ;\\n\""},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-border-width: 1;\\n\""},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-border-style: solid;\\n\""},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-padding: 10 10 10 10;\\n\""},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-background-color: #ffffed ;\\n\""},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-background-radius: 5;\\n\""},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-border-radius: 5;\\n\""},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-text-fill: black\");"},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"        if (text.contains(\"OOPS\")) {"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"            dialog.setStyle(\"-fx-border-color: #ffffed ;\\n\""},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-border-width: 1;\\n\""},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-border-style: solid;\\n\""},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-padding: 10 10 10 10;\\n\""},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-background-color: #ffffed ;\\n\""},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-background-radius: 5;\\n\""},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-border-radius: 5;\\n\""},{"lineNumber":58,"author":{"gitId":"sgn00"},"content":"                    + \"-fx-text-fill: red\");"},{"lineNumber":59,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":"        displayPicture.setImage(img);"},{"lineNumber":61,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":63,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":64,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"sgn00"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":66,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"sgn00"},"content":"    private void flip() {"},{"lineNumber":68,"author":{"gitId":"sgn00"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":69,"author":{"gitId":"sgn00"},"content":"        Collections.reverse(tmp);"},{"lineNumber":70,"author":{"gitId":"sgn00"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":71,"author":{"gitId":"sgn00"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":72,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":74,"author":{"gitId":"sgn00"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":75,"author":{"gitId":"sgn00"},"content":"        return new DialogBox(text, img, HUMAN);"},{"lineNumber":76,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":78,"author":{"gitId":"sgn00"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":79,"author":{"gitId":"sgn00"},"content":"        var db \u003d new DialogBox(text, img, DUKE);"},{"lineNumber":80,"author":{"gitId":"sgn00"},"content":"        db.flip();"},{"lineNumber":81,"author":{"gitId":"sgn00"},"content":"        return db;"},{"lineNumber":82,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":83,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":83}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"    private Duke duke \u003d new Duke(\"./data/duke.txt\");"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"            stage.setResizable(false);"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"        } catch (IOException e) {"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"            e.printStackTrace();"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":34}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import javafx.fxml.FXML;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import javafx.scene.control.Button;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(duke.printHello(), dukeImage));"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"        userInput.clear();"},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":55}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":" * Represents a deadline task."},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"    public Deadline(String name, LocalDate date) {"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        String date \u003d formatter.format(this.date);"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        return String.format(\"[D]%s (by: %s)\", super.toString(), date);"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":24}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":" * Represents an event task."},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"public class Event extends Task {"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"    private LocalDate date;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"    public Event(String name, LocalDate date) {"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"        super(name);"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.date \u003d date;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    public String toString() {"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        String date \u003d formatter.format(this.date);"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        return String.format(\"[E]%s (at: %s)\", super.toString(), date);"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":24}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.io.Serializable;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"public class Task implements Serializable {"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"    private String name;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"    private boolean isDone;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"    public Task(String name) {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"        this.name \u003d name;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    public String toString() {"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"        if (isDone) {"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"            return String.format(\"[\\u2713] %s\", name);"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"        } else {"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"            return String.format(\"[\\u2718] %s\", name);"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"    public void setDone() {"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        this.isDone \u003d true;"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":27}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":" * Represents a todo task."},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"    public Todo(String name) {"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"        super(name);"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    @Override"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"    public String toString() {"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"        return String.format(\"[T]%s\", super.toString());"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":16}},{"path":"src/main/java/duke/util/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import duke.command.AddCommand;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"import duke.command.ByeCommand;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"import duke.command.Command;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"import duke.command.DoneCommand;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"import duke.command.FindCommand;"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"import duke.command.HelpCommand;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"import duke.command.ListCommand;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidDateFormatException;"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidDeadlineException;"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidDescriptionException;"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidEventException;"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"import duke.task.Deadline;"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"import duke.task.Event;"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"import duke.task.Todo;"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":" * Helps parse user input."},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"public class Parser {"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"    public static final String BYE \u003d \"bye\";"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"    public static final String LIST \u003d \"list\";"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"    public static final String TODO \u003d \"todo\";"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"    public static final String DEADLINE \u003d \"deadline\";"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"    public static final String EVENT \u003d \"event\";"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"    public static final String DONE \u003d \"done\";"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"    public static final String DELETE \u003d \"delete\";"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"    public static final String FIND \u003d \"find\";"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"    public static final String HELP \u003d \"help\";"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"    private static final List\u003cString\u003e commands \u003d Arrays.asList(BYE, LIST, TODO,"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"                                                    DEADLINE, EVENT, DONE, DELETE, FIND, HELP);"},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"     * Parses an input string and returns a Command based on the input."},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"     *"},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"     * @param input User input that is provided."},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"     * @return Command."},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidDescriptionException If description format for new task is wrong."},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidCommandException     If no such command exists."},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidEventException       If event command format is wrong."},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidDeadlineException    If deadline command format is wrong."},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidDateFormatException  If date is not given in correct format."},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"    public static Command parse(String input) throws InvalidDescriptionException, InvalidCommandException,"},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"            InvalidEventException, InvalidDeadlineException, InvalidDateFormatException {"},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"        String[] separatedInput \u003d input.split(\" \", 2);"},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"        String command \u003d separatedInput[0];"},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"        int num;"},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"        switch (command) {"},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":"        case BYE:"},{"lineNumber":58,"author":{"gitId":"sgn00"},"content":"            return new ByeCommand();"},{"lineNumber":59,"author":{"gitId":"sgn00"},"content":"        case LIST:"},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":"            return new ListCommand();"},{"lineNumber":61,"author":{"gitId":"sgn00"},"content":"        case TODO:"},{"lineNumber":62,"author":{"gitId":"sgn00"},"content":"        case DEADLINE:"},{"lineNumber":63,"author":{"gitId":"sgn00"},"content":"        case EVENT:"},{"lineNumber":64,"author":{"gitId":"sgn00"},"content":"            if (separatedInput.length \u003d\u003d 1) {"},{"lineNumber":65,"author":{"gitId":"sgn00"},"content":"                throw new InvalidDescriptionException();"},{"lineNumber":66,"author":{"gitId":"sgn00"},"content":"            }"},{"lineNumber":67,"author":{"gitId":"sgn00"},"content":"            return parseTask(command, separatedInput[1].trim());"},{"lineNumber":68,"author":{"gitId":"sgn00"},"content":"        case DONE:"},{"lineNumber":69,"author":{"gitId":"sgn00"},"content":"            num \u003d Integer.parseInt(separatedInput[1]);"},{"lineNumber":70,"author":{"gitId":"sgn00"},"content":"            return new DoneCommand(num);"},{"lineNumber":71,"author":{"gitId":"sgn00"},"content":"        case DELETE:"},{"lineNumber":72,"author":{"gitId":"sgn00"},"content":"            num \u003d Integer.parseInt(separatedInput[1]);"},{"lineNumber":73,"author":{"gitId":"sgn00"},"content":"            return new DeleteCommand(num);"},{"lineNumber":74,"author":{"gitId":"sgn00"},"content":"        case FIND:"},{"lineNumber":75,"author":{"gitId":"sgn00"},"content":"            String matchString \u003d separatedInput[1].trim();"},{"lineNumber":76,"author":{"gitId":"sgn00"},"content":"            return new FindCommand(matchString);"},{"lineNumber":77,"author":{"gitId":"sgn00"},"content":"        case HELP:"},{"lineNumber":78,"author":{"gitId":"sgn00"},"content":"            if (separatedInput.length \u003d\u003d 1) {"},{"lineNumber":79,"author":{"gitId":"sgn00"},"content":"                return new HelpCommand();"},{"lineNumber":80,"author":{"gitId":"sgn00"},"content":"            } else {"},{"lineNumber":81,"author":{"gitId":"sgn00"},"content":"                String targetCommand \u003d separatedInput[1].trim().toLowerCase();"},{"lineNumber":82,"author":{"gitId":"sgn00"},"content":"                if (commands.contains(targetCommand)) {"},{"lineNumber":83,"author":{"gitId":"sgn00"},"content":"                    return new HelpCommand(targetCommand);"},{"lineNumber":84,"author":{"gitId":"sgn00"},"content":"                } else {"},{"lineNumber":85,"author":{"gitId":"sgn00"},"content":"                    throw new InvalidCommandException();"},{"lineNumber":86,"author":{"gitId":"sgn00"},"content":"                }"},{"lineNumber":87,"author":{"gitId":"sgn00"},"content":"            }"},{"lineNumber":88,"author":{"gitId":"sgn00"},"content":"        default:"},{"lineNumber":89,"author":{"gitId":"sgn00"},"content":"            throw new InvalidCommandException();"},{"lineNumber":90,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":93,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":94,"author":{"gitId":"sgn00"},"content":"     * Helps parse input related to adding tasks."},{"lineNumber":95,"author":{"gitId":"sgn00"},"content":"     *"},{"lineNumber":96,"author":{"gitId":"sgn00"},"content":"     * @param command     The command string that was input."},{"lineNumber":97,"author":{"gitId":"sgn00"},"content":"     * @param description The remaining part of the command string."},{"lineNumber":98,"author":{"gitId":"sgn00"},"content":"     * @return AddCommand."},{"lineNumber":99,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidEventException      If event command format is wrong."},{"lineNumber":100,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidDeadlineException   If deadline command format is wrong."},{"lineNumber":101,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidCommandException    If no such command exists."},{"lineNumber":102,"author":{"gitId":"sgn00"},"content":"     * @throws InvalidDateFormatException If date is not given in correct format."},{"lineNumber":103,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":104,"author":{"gitId":"sgn00"},"content":"    private static Command parseTask(String command, String description)"},{"lineNumber":105,"author":{"gitId":"sgn00"},"content":"            throws InvalidEventException, InvalidDeadlineException,"},{"lineNumber":106,"author":{"gitId":"sgn00"},"content":"            InvalidCommandException, InvalidDateFormatException {"},{"lineNumber":107,"author":{"gitId":"sgn00"},"content":"        String[] separatedDescription;"},{"lineNumber":108,"author":{"gitId":"sgn00"},"content":"        LocalDate date;"},{"lineNumber":109,"author":{"gitId":"sgn00"},"content":"        try {"},{"lineNumber":110,"author":{"gitId":"sgn00"},"content":"            switch (command) {"},{"lineNumber":111,"author":{"gitId":"sgn00"},"content":"            case TODO:"},{"lineNumber":112,"author":{"gitId":"sgn00"},"content":"                return new AddCommand(new Todo(description));"},{"lineNumber":113,"author":{"gitId":"sgn00"},"content":"            case DEADLINE:"},{"lineNumber":114,"author":{"gitId":"sgn00"},"content":"                separatedDescription \u003d description.split(\" /by \", 2);"},{"lineNumber":115,"author":{"gitId":"sgn00"},"content":"                if (separatedDescription.length \u003d\u003d 1) {"},{"lineNumber":116,"author":{"gitId":"sgn00"},"content":"                    throw new InvalidDeadlineException();"},{"lineNumber":117,"author":{"gitId":"sgn00"},"content":"                }"},{"lineNumber":118,"author":{"gitId":"sgn00"},"content":"                date \u003d LocalDate.parse(separatedDescription[1]);"},{"lineNumber":119,"author":{"gitId":"sgn00"},"content":"                return new AddCommand(new Deadline(separatedDescription[0], date));"},{"lineNumber":120,"author":{"gitId":"sgn00"},"content":"            case EVENT:"},{"lineNumber":121,"author":{"gitId":"sgn00"},"content":"                separatedDescription \u003d description.split(\" /at \", 2);"},{"lineNumber":122,"author":{"gitId":"sgn00"},"content":"                if (separatedDescription.length \u003d\u003d 1) {"},{"lineNumber":123,"author":{"gitId":"sgn00"},"content":"                    throw new InvalidEventException();"},{"lineNumber":124,"author":{"gitId":"sgn00"},"content":"                }"},{"lineNumber":125,"author":{"gitId":"sgn00"},"content":"                date \u003d LocalDate.parse(separatedDescription[1]);"},{"lineNumber":126,"author":{"gitId":"sgn00"},"content":"                return new AddCommand(new Event(separatedDescription[0], date));"},{"lineNumber":127,"author":{"gitId":"sgn00"},"content":"            default:"},{"lineNumber":128,"author":{"gitId":"sgn00"},"content":"                throw new InvalidCommandException();"},{"lineNumber":129,"author":{"gitId":"sgn00"},"content":"            }"},{"lineNumber":130,"author":{"gitId":"sgn00"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":131,"author":{"gitId":"sgn00"},"content":"            throw new InvalidDateFormatException();"},{"lineNumber":132,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":134}},{"path":"src/main/java/duke/util/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import java.io.FileInputStream;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import java.io.FileOutputStream;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import java.io.ObjectInputStream;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import java.io.ObjectOutputStream;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import java.util.ArrayList;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"import java.util.List;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":" * Responsible for local disk file operations."},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"public class Storage {"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    private String filePath;"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"    public Storage(String filePath) {"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"     * Loads a list of tasks from disk."},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"     * @return TaskList with loaded list."},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    @SuppressWarnings(\"unchecked\")"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"    public TaskList load() {"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"        List\u003cTask\u003e lst;"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"            ObjectInputStream ois \u003d new ObjectInputStream(new FileInputStream(filePath));"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"            lst \u003d (List\u003cTask\u003e) ois.readObject();"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"            ois.close();"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"        } catch (Exception e) {"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"            lst \u003d new ArrayList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"        return new TaskList(lst);"},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"     * Saves a list of tasks to disk."},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"     * @param lst The TaskList to save to disk."},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"    public void save(TaskList lst) {"},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"        try {"},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"            new File(filePath).getParentFile().mkdirs();"},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"            ObjectOutputStream oos \u003d new ObjectOutputStream(new FileOutputStream(filePath));"},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"            oos.writeObject(lst.getList());"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"            oos.flush();"},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":"            oos.close();"},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"        } catch (Exception e) {"},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":57}},{"path":"src/main/java/duke/util/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.util.List;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":" * Represents the list of tasks."},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"public class TaskList {"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    private List\u003cTask\u003e store;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    public TaskList(List\u003cTask\u003e lst) {"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        this.store \u003d lst;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    public List\u003cTask\u003e getList() {"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"        return store;"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"     * Returns number of tasks in the list of tasks."},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"     * @return Number of tasks."},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    public int getNumberOfTasks() {"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"        return store.size();"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"     * Marks a task in the list of tasks as done."},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"     * @param num The task number of the Task."},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"     * @return Task which was marked as done."},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"    public Task completeTask(int num) {"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"        assert (num \u003e 0 \u0026\u0026 num \u003c\u003d store.size());"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"        store.get(num - 1).setDone();"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"        return store.get(num - 1);"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"     * Deletes a task from the list of tasks."},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"     * @param num The task number of the Task."},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"     * @return Task which was deleted."},{"lineNumber":45,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"sgn00"},"content":"    public Task deleteTask(int num) {"},{"lineNumber":47,"author":{"gitId":"sgn00"},"content":"        assert (num \u003e 0 \u0026\u0026 num \u003c\u003d store.size());"},{"lineNumber":48,"author":{"gitId":"sgn00"},"content":"        Task task \u003d store.get(num - 1);"},{"lineNumber":49,"author":{"gitId":"sgn00"},"content":"        store.remove(task);"},{"lineNumber":50,"author":{"gitId":"sgn00"},"content":"        return task;"},{"lineNumber":51,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":53,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":54,"author":{"gitId":"sgn00"},"content":"     * Adds a Task to the list of tasks."},{"lineNumber":55,"author":{"gitId":"sgn00"},"content":"     * @param task The Task to be added."},{"lineNumber":56,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"sgn00"},"content":"    public void addTask(Task task) {"},{"lineNumber":58,"author":{"gitId":"sgn00"},"content":"        store.add(task);"},{"lineNumber":59,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":61,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":61}},{"path":"src/main/java/duke/util/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":" * Deals with user interaction (input and output)."},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":" */"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"    private Scanner scanner;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"    public Ui() {"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"        scanner \u003d new Scanner(System.in);"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"     * Prints the greeting message."},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    public String printHello() {"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        String logo \u003d \" ____        _        \\n\""},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"                + \"|  _ \\\\ _   _| | _____ \\n\""},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"                + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"                + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        return print(\"Hello from\\n\" + logo + \"Hello! I\u0027m Duke\\nWhat can I do for you?\");"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"     * Helps print any message to standard out."},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"     * @param message Message to be printed."},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"    public String print(String message) {"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"        System.out.println(message);"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"        return message;"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"     * Obtains a line of input from user and trims whitespace."},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"     * @return Input as a string."},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"    public String readInput() {"},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"        return scanner.nextLine().trim();"},{"lineNumber":43,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":44}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\""},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"               style\u003d\" -fx-border-color: #add8e6 ;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"                    -fx-border-width: 1;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"                    -fx-border-style: solid;"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"                    -fx-padding: 10 10 10 10;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"                    -fx-background-color: #add8e6 ;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"                    -fx-background-radius: 15;"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"                    -fx-border-radius: 15;"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"                    -fx-text-fill: black;\""},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"                textFill\u003d\"WHITE\"\u003e"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"                \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"12.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"            \u003cpadding\u003e"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"            \u003c/padding\u003e"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"        \u003c/Label\u003e"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"    \u003c/children\u003e"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"    \u003cpadding\u003e"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"    \u003c/padding\u003e"},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"sgn00":32}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"        \u003cScrollPane style\u003d\"-fx-background-image: url(\u0027/images/star.jpg\u0027);"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"        -fx-background-size: 150% 150%;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"        -fx-background-position: bottom center;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"        -fx-background: transparent;\" fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"            \u003ccontent\u003e"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"            \u003c/content\u003e"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"    \u003c/children\u003e"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"sgn00":22}},{"path":"src/test/java/duke/util/ParserTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import static org.junit.jupiter.api.Assertions.assertThrows;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"import static org.junit.jupiter.api.Assertions.assertTrue;"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import duke.command.AddCommand;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":"import duke.command.Command;"},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidCommandException;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidDateFormatException;"},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidDeadlineException;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidDescriptionException;"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"import duke.exception.InvalidEventException;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"public class ParserTest {"},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":"    @Test"},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    public void parse_deadlineTask_correctCommand() throws InvalidDescriptionException, InvalidCommandException,"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"            InvalidEventException, InvalidDeadlineException, InvalidDateFormatException {"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        Command command \u003d Parser.parse(\"deadline dsaasd /by 2016-03-23\");"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        assertTrue(command instanceof AddCommand);"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"    @Test"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"    public void parse_invalidDateFormat_exceptionThrown() {"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"        assertThrows(InvalidDateFormatException.class, ()-\u003e {"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"            Parser.parse(\"event dasda /at 2034-23232-12\");"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"        });"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":31}},{"path":"src/test/java/duke/util/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"package duke.util;"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"import static org.junit.jupiter.api.Assertions.assertIterableEquals;"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"sgn00"},"content":"import java.util.ArrayList;"},{"lineNumber":7,"author":{"gitId":"sgn00"},"content":"import java.util.Arrays;"},{"lineNumber":8,"author":{"gitId":"sgn00"},"content":"import java.util.List;"},{"lineNumber":9,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":10,"author":{"gitId":"sgn00"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":11,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":12,"author":{"gitId":"sgn00"},"content":"import duke.task.Deadline;"},{"lineNumber":13,"author":{"gitId":"sgn00"},"content":"import duke.task.Event;"},{"lineNumber":14,"author":{"gitId":"sgn00"},"content":"import duke.task.Task;"},{"lineNumber":15,"author":{"gitId":"sgn00"},"content":"import duke.task.Todo;"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":17,"author":{"gitId":"sgn00"},"content":"public class TaskListTest {"},{"lineNumber":18,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":19,"author":{"gitId":"sgn00"},"content":"    @Test"},{"lineNumber":20,"author":{"gitId":"sgn00"},"content":"    public void addTask_validInput_storedCorrectly() {"},{"lineNumber":21,"author":{"gitId":"sgn00"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"},{"lineNumber":22,"author":{"gitId":"sgn00"},"content":"        Todo todo \u003d new Todo(\"test1\");"},{"lineNumber":23,"author":{"gitId":"sgn00"},"content":"        Deadline deadline \u003d new Deadline(\"test2\", LocalDate.now());"},{"lineNumber":24,"author":{"gitId":"sgn00"},"content":"        Event event \u003d new Event(\"test3\", LocalDate.now());"},{"lineNumber":25,"author":{"gitId":"sgn00"},"content":"        tasks.addTask(todo);"},{"lineNumber":26,"author":{"gitId":"sgn00"},"content":"        tasks.addTask(deadline);"},{"lineNumber":27,"author":{"gitId":"sgn00"},"content":"        tasks.addTask(event);"},{"lineNumber":28,"author":{"gitId":"sgn00"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event));"},{"lineNumber":29,"author":{"gitId":"sgn00"},"content":"        assertIterableEquals(lst, tasks.getList());"},{"lineNumber":30,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"sgn00"},"content":""},{"lineNumber":32,"author":{"gitId":"sgn00"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"sgn00"},"content":"    public void deleteTask_validInput_successfulDelete() {"},{"lineNumber":34,"author":{"gitId":"sgn00"},"content":"        Todo todo \u003d new Todo(\"test1\");"},{"lineNumber":35,"author":{"gitId":"sgn00"},"content":"        Deadline deadline \u003d new Deadline(\"test2\", LocalDate.now());"},{"lineNumber":36,"author":{"gitId":"sgn00"},"content":"        Event event \u003d new Event(\"test3\", LocalDate.now());"},{"lineNumber":37,"author":{"gitId":"sgn00"},"content":"        TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e(Arrays.asList(todo, deadline, event)));"},{"lineNumber":38,"author":{"gitId":"sgn00"},"content":"        tasks.deleteTask(1);"},{"lineNumber":39,"author":{"gitId":"sgn00"},"content":"        List\u003cTask\u003e lst \u003d new ArrayList\u003c\u003e(Arrays.asList(deadline, event));"},{"lineNumber":40,"author":{"gitId":"sgn00"},"content":"        assertIterableEquals(lst, tasks.getList());"},{"lineNumber":41,"author":{"gitId":"sgn00"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"sgn00"},"content":"}"}],"authorContributionMap":{"sgn00":42}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"sgn00"},"content":"todo borrow book"},{"lineNumber":2,"author":{"gitId":"sgn00"},"content":"list"},{"lineNumber":3,"author":{"gitId":"sgn00"},"content":"deadline return book /by Sunday"},{"lineNumber":4,"author":{"gitId":"sgn00"},"content":"event project meeting /at Mon 2-4pm"},{"lineNumber":5,"author":{"gitId":"sgn00"},"content":"bye"}],"authorContributionMap":{"sgn00":5}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"sgn00"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"-"},"content":"java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":37,"sgn00":1}}]
