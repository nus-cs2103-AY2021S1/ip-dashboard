[
  {
    "path": "data/data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "0"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 1
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.by);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 18
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private UI ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ui \u003d new UI();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String directory \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Path filePath \u003d Paths.get(directory, \"data\", \"data.txt\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            ui.displayError(e);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void execute() throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ui.greetings();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        boolean isHalted \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        while (!isHalted) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            String command \u003d ui.readCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            Parser parser \u003d new Parser(command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            String commandType \u003d parser.getCommandType();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            switch (commandType) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"bye\": {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    isHalted \u003d true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"list\": {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); ++i) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        ui.displayFormat(\"%d. %s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"done\": {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int index \u003d parser.getIndex();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(tasks.get(index).toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"delete\": {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int index \u003d parser.getIndex();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(tasks.get(index).toString());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.removeTask(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayFormat(\"Now you have %d tasks in the list.\\n\", tasks.size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                case \"add\": {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    Task newTask \u003d parser.getTask();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    tasks.addTask(newTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayMessage(newTask.toString());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    ui.displayFormat(\"Now you have %d tasks in the list\\n\", tasks.size());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                default: {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new Exception(\"Unexpected error\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "            }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            storage.saveData(tasks.getTasks());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            ui.displayError(e);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ui.bye();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        new Duke().execute();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 5,
      "nguyendqminh": 82
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.at);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 18
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private String commandType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Parser(String command) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.commandType \u003d \"undefined\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"bye\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"list\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.index \u003d Integer.parseInt(command.substring(5)) - 1;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.length() \u003c 7) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! Task index not found.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"delete\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.index \u003d Integer.parseInt(command.substring(7)) - 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                Task newTask \u003d null;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (command.length() \u003c 5) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String description \u003d command.substring(5);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    newTask \u003d new Todo(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (command.length() \u003c 9) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String rest \u003d command.substring(9);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int by_position \u003d rest.indexOf(\"/by \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (by_position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Deadline time specification not found.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String description \u003d rest.substring(0, by_position - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String by \u003d rest.substring(by_position + 4);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    newTask \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (command.length() \u003c 6) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String rest \u003d command.substring(6);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    int at_position \u003d rest.indexOf(\"/at \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    if (at_position \u003d\u003d -1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                        throw new DukeException(\":( OOPS!!! Event time specification not found.\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String description \u003d rest.substring(0, at_position - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    String at \u003d rest.substring(at_position + 4);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    newTask \u003d new Event(description, at);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                if (newTask \u003d\u003d null) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                    throw new DukeException(\":( OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.commandType \u003d \"add\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                this.task \u003d newTask;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        } catch(DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public int getIndex() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.index;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task getTask() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.task;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String getCommandType() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.commandType;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 81
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private final Path filePath;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private void openFile() throws Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        if (!Files.exists(this.filePath)) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            Files.createDirectories(this.filePath.getParent());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            Files.createFile(this.filePath);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Storage(Path filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() throws Exception {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        openFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        BufferedReader reader \u003d Files.newBufferedReader(this.filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        int taskCount \u003d Integer.parseInt(reader.readLine());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        for(int i \u003d 0; i \u003c taskCount; ++i) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            tasks.add(TaskParser.parseTask(reader));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        reader.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e tasks) throws Exception {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        openFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        BufferedWriter writer \u003d Files.newBufferedWriter(this.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        writer.write(String.valueOf(tasks.size()));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        writer.newLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        for(Task task : tasks) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            writer.write(task.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            writer.newLine();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 45
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return isDone ? \"O\" : \"X\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[%s] %s\", this.getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 33
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.tasks \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void removeTask(int position) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        tasks.remove(position);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Task get(int position) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return this.tasks.get(position);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 33
    }
  },
  {
    "path": "src/main/java/TaskParser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class TaskParser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public static Task parseTask(BufferedReader sc) throws Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String input \u003d sc.readLine();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String taskType \u003d input.substring(0, 3);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String status \u003d input.substring(3, 6);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String rest \u003d input.substring(7);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        boolean isDone \u003d (status.equals(\"[O]\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        Task result;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            case \"[T]\": {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                result \u003d new Todo(rest, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            case \"[D]\": {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                int position \u003d rest.indexOf(\"(by: \");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String description \u003d rest.substring(0, position - 1);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String by \u003d rest.substring(position + 4, rest.length() - 1);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                result \u003d new Deadline(description, isDone, by);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            case \"[E]\": {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                int position \u003d rest.indexOf(\"(at: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String description \u003d rest.substring(0, position - 1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                String at \u003d rest.substring(position + 4, rest.length() - 1);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                result \u003d new Deadline(description, isDone, at);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            default: {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                throw new DukeException(\"Error while loading data.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 38
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 14
    }
  },
  {
    "path": "src/main/java/UI.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "public class UI {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    private final Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public UI() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void displayFormat(String format, Object... args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.printf(format, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void displayMessage(String message) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void displayError(Exception e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void greetings() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        displayMessage(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        displayMessage(\"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "        displayMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 39
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "todo cs2103 project 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nguyendqminh": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nguyendqminh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "nguyendqminh": 1
    }
  }
]
