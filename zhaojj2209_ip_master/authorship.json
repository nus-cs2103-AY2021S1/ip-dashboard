[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    mainClassName \u003d \"Duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 15,
      "-": 45
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 11
    }
  },
  {
    "path": "src/main/java/duke/ActionType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public enum ActionType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    MARK_DONE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    ADD_TODO,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    ADD_DEADLINE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    ADD_EVENT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 9
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Duke main class"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        storage \u003d new Storage(\"src/main/data.txt\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        tasks \u003d new TaskList(storage.getTasks());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            output \u003d c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                output \u003d (e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 33,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Special exception class for Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * DukeException constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param s Exception error message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public DukeException(String s){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return super.getMessage() + \"\\n Please retry!\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 20
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                DialogBox.getDukeDialog(d.getWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        );"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 54
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.command.MarkDoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Parses user input and returns the correct command to execute"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param input User input"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return Correct command for Duke to execute"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        if (input.equalsIgnoreCase(\"bye\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.equalsIgnoreCase(\"list\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"done\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(5)) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new MarkDoneCommand(taskIndex);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"find\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String search \u003d input.substring(5);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                return new FindCommand(search);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equalsIgnoreCase(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            int taskIndex \u003d Integer.parseInt(input.substring(7)) - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.length() \u003e\u003d 4 \u0026\u0026 input.substring(0, 4).equalsIgnoreCase(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_TODO);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equalsIgnoreCase(\"event\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_EVENT);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equalsIgnoreCase(\"deadline\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return new AddCommand(input, ActionType.ADD_DEADLINE);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            throw new DukeException(\"I have no idea what that means ¯\\\\_(ツ)_/¯\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 43
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Storage class to manage loading and saving of tasks in text file"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private File data;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Storage constructor"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param filePath Filepath of .txt file to save tasks in"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            data \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            data.createNewFile();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Loads saved tasks into list for use"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return ArrayList containing all saved tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            Scanner dataScanner \u003d new Scanner(data);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            while (dataScanner.hasNext()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String next \u003d dataScanner.nextLine();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                char taskType \u003d next.charAt(1);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                boolean isDone \u003d next.charAt(4) \u003d\u003d \u0027\\u2713\u0027;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String description \u003d next.substring(7);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                if (taskType \u003d\u003d \u0027T\u0027) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    list.add(new ToDo(description, isDone));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027D\u0027) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    String[] split \u003d description.split(\"[(]by: \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    String deadlineDesc \u003d split[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    LocalDate deadline \u003d LocalDate.parse(split[1].substring(0, split[1].length() - 1), formatter);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    list.add(new Deadline(deadlineDesc, deadline, isDone));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                } else if (taskType \u003d\u003d \u0027E\u0027) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    String[] split \u003d description.split(\"[(]at: \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    String eventDesc \u003d split[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    LocalDate eventTime \u003d LocalDate.parse(split[1].substring(0, split[1].length() - 1), formatter);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    list.add(new Event(eventDesc, eventTime, isDone));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                    throw new DukeException(\"File reading error _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Writes tasks into file"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks to be saved"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void updateFile(TaskList tasks) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d tasks.getList();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            for (Task task: list) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                fw.write(taskString + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 90
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Ui class to deal with user interaction"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Prints welcome message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"Hello, I\u0027m Duke \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"I can help you keep track of all your tasks!\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"How to add tasks to the list: \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"ToDo - type \u0027todo\u0027 followed by description \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"Deadline - type \u0027deadline\u0027 followed by description, \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"then \u0027/by\u0027, then due date (yyyy-MM-dd) \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"Event - type \u0027event\u0027 followed by description,\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"then \u0027/at\u0027, then timing (yyyy-MM-dd) \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"Type \u0027done\u0027 followed by the task number and I\u0027ll mark it as done \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"Type \u0027list\u0027 to see the list of tasks \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"Type \u0027find\u0027 followed by keyword to search for tasks \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                + \"Type \u0027bye\u0027 to exit \\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Returns string containing list of existing tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return String of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        String tasksString \u003d \"\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            tasksString +\u003d \"List is empty \\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            tasksString +\u003d \"Items in list: \\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                tasksString +\u003d ((i + 1) + \". \" + tasks.get(i).toString() + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return tasksString;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Returns appropriate message for task depending on action type"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param task Task to be printed"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param action Action type; determines format of text that is printed"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return String containing task info"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String printTask(Task task, ActionType action) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        String taskString;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        switch(action){"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        case MARK_DONE:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            taskString \u003d \"Task marked complete: \\n\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            taskString \u003d \"Task deleted: \\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            taskString \u003d \"Added: \\n\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        taskString +\u003d task.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return taskString;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String search(TaskList tasks, String input) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        String result \u003d \"Matching tasks: \\n\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            String taskString \u003d task.toString();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            if (taskString.contains(input)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                result +\u003d (count + \". \" + taskString + \"\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Prints total number of tasks"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return String with total number of tasks"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String printTotalTasks(TaskList tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"Total tasks: \" + tasks.size();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Prints goodbye message"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String goodbye() {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"See you again soon (hopefully)! :\u003e\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 100
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.ActionType;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Command for adding tasks into list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final ActionType actionType;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * AddCommand constructor"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param input User input (without type of task written in front)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param actionType Dictates type of task to be added"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public AddCommand(String input, ActionType actionType) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.actionType \u003d actionType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Creates new task and adds it into list, then returns string containing task info"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return String containing task info"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        switch(actionType) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        case ADD_TODO:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                throw new DukeException(\"Task cannot be empty _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                newTask \u003d new ToDo(input.substring(5), false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        case ADD_EVENT:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                throw new DukeException(\"Event cannot be empty _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String[] split \u003d input.substring(6).split(\" /at \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String eventDesc \u003d split[0];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                LocalDate eventTime \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                newTask \u003d new Event(eventDesc, eventTime, false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        case ADD_DEADLINE:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                throw new DukeException(\"Deadline cannot be empty _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String[] split \u003d input.substring(9).split(\" /by \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                String deadlineDesc \u003d split[0];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                LocalDate deadline \u003d LocalDate.parse(split[1]);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                newTask \u003d new Deadline(deadlineDesc, deadline, false);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        tasks.addTask(newTask);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return ui.printTask(newTask, actionType) + \"\\n\" + ui.printTotalTasks(tasks);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 78
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Abstract class for all commands"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Executes command and returns output string"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return String to be output by Duke in the dialogue box"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.ActionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Command for deleting tasks"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * DeleteCommand constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param taskIndex Index of class to be deleted"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Deletes task from list and returns its info"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return Info on deleted task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        if (taskIndex \u003e\u003d tasks.getList().size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            throw new DukeException(\"Task does not exist _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            Task deletedTask \u003d tasks.delete(taskIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            storage.updateFile(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            return ui.printTask(deletedTask, ActionType.DELETE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 44
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Command to quit Duke"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Exits program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return ui.goodbye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 27
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final String input;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public FindCommand(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.input \u003d input;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return ui.search(tasks, input);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 19
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Command to print list of tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Returns string containing list of tasks"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return List of tasks in string format"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return ui.printList(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 27
    }
  },
  {
    "path": "src/main/java/duke/command/MarkDoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.ActionType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * Command to mark a task as done"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class MarkDoneCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * MarkDoneCommand constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param taskIndex Index of task to be completed"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public MarkDoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Marks task as done, then returns its info"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param tasks List of tasks"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param ui User interface to print task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param storage File storage object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @return Info on completed task"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @throws DukeException if exception encountered"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        if (taskIndex \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            throw new DukeException(\"Task does not exist _(´ཀ`」 ∠)_\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        Task completedTask \u003d tasks.markDone(taskIndex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        storage.updateFile(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return ui.printTask(completedTask, ActionType.MARK_DONE);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 44
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Deadline constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param description Description string without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param deadline Deadline LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param isDone Completion status of deadline"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Deadline(String description, LocalDate deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"[D][\" + super.getStatusIcon() + \"] \" + super.description + \" (by: \" + this.deadline.format(formatter) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 26
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final LocalDate eventTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Event constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param description Description string without date"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param eventTime Time of event LocalDate object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param isDone Completion status of event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Event(String description, LocalDate eventTime, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"[E][\" + super.getStatusIcon() + \"] \" + super.description + \" (at: \" + this.eventTime.format(formatter) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 26
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Task constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param description Description string"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param isDone Completion status of task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return (this.isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 25
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " * List class to store tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Marks task as done, then returns it"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param index Index of task to be completed"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Task markDone(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        Task doneTask \u003d list.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return doneTask;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * Deletes task, then returns it"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param index Index of task to be deleted"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public Task delete(int index) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        Task deletedTask \u003d list.get(index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return deletedTask;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 55
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * ToDo constructor"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     *"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param description Description string"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     * @param isDone Completion status of todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        return \"[T][\" + super.getStatusIcon() + \"] \" + super.description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 18
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" styleClass\u003d\"dialogue-label\" stylesheets\u003d\"@dialogBox.css\"/\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void testTodoString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        assertEquals(\"[T][✘] borrow book\", new ToDo(\"borrow book\", false).toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void testDeadlineString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        assertEquals(\"[D][✘] return book (by: Aug 25 2020)\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                new Deadline(\"return book\", LocalDate.parse(\"2020-08-25\"), false).toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    public void testEventString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "        assertEquals(\"[E][✘] project meeting (at: Aug 26 2020)\","
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "                new Event(\"project meeting\", LocalDate.parse(\"2020-08-26\"), false).toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 29
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "deadline return book /by 2020-08-25"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "event project meeting /at 2020-08-26"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "if [ ! -d \"../bin\" ]; then"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "  mkdir ../bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]; then"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "  rm ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java; then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "  echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003cinput.txt \u003eACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhaojj2209"
        },
        "content": "if [ $? -eq 0 ]; then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "  echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "  exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "  echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "  exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhaojj2209": 4,
      "-": 30
    }
  }
]
