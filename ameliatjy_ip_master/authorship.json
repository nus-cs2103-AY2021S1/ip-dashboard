[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    Deadline(String taskName, boolean isCompleted, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + date + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public static ArrayList\u003cTask\u003e userInputs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public static void viewTasks() throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        if (userInputs.size() \u003d\u003d 0) { // user has not added any task"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            throw new DukeException(\"Nothing has been added to the list yet!\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            for (int i \u003d 0; i \u003c userInputs.size(); i++) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                String output \u003d (i + 1) + \". \" + userInputs.get(i).toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                System.out.println(output);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public static void markDone(String inputMsg) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        int taskNumber \u003d Integer.valueOf(inputMsg.split(\" \")[1]); // gets the done task number"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        if (userInputs.size() \u003c taskNumber || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            throw new DukeException(\"There is no such task number!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            Task currTask \u003d userInputs.get(taskNumber - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            if (currTask.getStatus()) { // task has already marked done before"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                throw new DukeException(\"Task has already been completed earlier on!\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                currTask.markAsComplete();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + currTask.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public static void deleteFromList(String inputMsg) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        int taskNumber \u003d Integer.valueOf(inputMsg.split(\" \")[1]); // gets the deleted task number"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        if (userInputs.size() \u003c taskNumber || taskNumber \u003c\u003d 0) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            throw new DukeException(\"There is no such task number!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            Task currTask \u003d userInputs.get(taskNumber - 1);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            userInputs.remove(taskNumber - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String output \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    + currTask.toString()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    + \"\\nNow you have \" + userInputs.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            System.out.println(output);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public static void addToList(String inputMsg, String actionType) throws DukeException {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        int numOfWords \u003d inputMsg.split(\" \").length;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        if (actionType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            if (numOfWords \u003c\u003d 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                throw new DukeException(\"Description of task cannot be empty!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String taskName \u003d inputMsg.substring(5);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            newTask \u003d new Todo(taskName, false);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else if (actionType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            if (numOfWords \u003c\u003d 1) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                throw new DukeException(\"Description of task cannot be empty!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String taskName \u003d inputMsg.split(\"/\")[0].substring(9);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String deadline \u003d inputMsg.split(\"/\")[1].substring(3);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            newTask \u003d new Deadline(taskName, false, deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else if (actionType.equals(\"event\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            if (numOfWords \u003c\u003d 1) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                throw new DukeException(\"Description of task cannot be empty!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String taskName \u003d inputMsg.split(\"/\")[0].substring(6);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String deadline \u003d inputMsg.split(\"/\")[1].substring(3);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            newTask \u003d new Event(taskName, false, deadline);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else { // when user keys in unregistered action"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            throw new DukeException(\"Specified action is not recognised.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        userInputs.add(newTask);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        String outputMsg \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                + newTask.toString()"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                + \"\\nYou have \" + userInputs.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        System.out.println(outputMsg);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        String welcomeMsg \u003d \"Hello! I\u0027m Duke, some call me a parrot.\\n\""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                + \"What can I do for you?\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        System.out.println(welcomeMsg);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String inputMsg \u003d sc.nextLine();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            String actionType \u003d inputMsg.split(\" \")[0]; // user specified action, to identify type of action"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            if (inputMsg.equals(\"bye\")) { // ends the bot"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            } else if (inputMsg.equals(\"list\")) { // sees all tasks"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    viewTasks();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            } else if (actionType.equals(\"done\")) { // mark task as done"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    markDone(inputMsg);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            } else if (actionType.equals(\"delete\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    deleteFromList(inputMsg);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            } else { // add task to list"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    addToList(inputMsg, actionType);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                } catch (Exception e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 117,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    Event(String taskName, boolean isCompleted, String date) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + date + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    Task(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public String getTaskName() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        return this.taskName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        return this.isCompleted;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public void markAsComplete() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        this.isCompleted \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        String task \u003d \"[\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        if (isCompleted) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            task +\u003d \"\\u2713\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "            task +\u003d \"\\u274C\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        task +\u003d \"] \" + taskName;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 33
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    Todo(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        super(taskName, isCompleted);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "deadline finish CS2103T iP /by today"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "event block event /at 8pm every Tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "list read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ameliatjy"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ameliatjy": 1,
      "-": 20
    }
  }
]
