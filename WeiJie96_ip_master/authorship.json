[
  {
    "path": "Installing_Java.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "# Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/Duke.java` file, right-click it, and choose `Run Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 26
    }
  },
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Duke is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "2. Download the latest `duke.jar` from [here](https://github.com/WeiJie96/ip/releases)."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "3. Copy the file to the folder you want to use as the _home folder_."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.\u003cbr\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   ![Ui](docs/images/Start.png)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "5. Type the command in the command box and press Enter / Return on your keyboard to execute it. Alternatively, you may "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "press the Enter button on the GUI. e.g. typing **`todo Defeat Gengar`** and pressing Enter will add a task "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "named `Defeat Gengar` to your task list.\u003cbr\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`list`** : Lists all tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`todo`**`Defeat Gengar` : Adds a task named `Defeat Gengar` to your task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`delete`**`3` : Deletes the 3rd task shown in the current list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`bye`** : Exits the app."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "6. Refer to the [Features](#features) below for details of each command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**:information_source: Notes about the command format:**\u003cbr\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "  e.g. in `todo NAME`, `NAME` is a parameter which can be used as `todo Defeat Gengar`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Adding a task: `todo / event / deadline`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Adds a task to the address book."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Adding a todo: `todo NAME`"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Adding an event: `event NAME /at DATE`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Adding a deadline: `deadline NAME /by DATE`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `todo Defeat Gengar`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `event Attend Sobble\u0027s birthday /at 2020-12-12`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `deadline Save Mudkip /by 2020-09-09`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Listing all tasks : `list`"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Shows a list of all tasks in the task list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Locating tasks by name: `find`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Find tasks where names and / or dates contain any of the given keywords."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The search is case-sensitive. e.g `Save` will not match `save`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* A space-separated search is considered as one keyword e.g. `Save Mudkip` would match `Save Mudkip` only, "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "and not `Save Treecko`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Both the name and date can be searched."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Partial words can be matched e.g. `Mud` will match `Mudkip`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `find Sav` returns `Save Mudkip /by 2020-09-09` and `Save Treecko`"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `find 2020` returns `Save Mudkip /by 2020-09-09` and `Attend Sobble\u0027s birthday /at 2020-12-12`\u003cbr\u003e"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Sorting the task list : `sort`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Sorts the task list by task name."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `sort SORT_ORDER`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Sorts the entire task list by task name using the specified `SORT_ORDER`."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `SORT_ORDER` **must be one of `asc` or `desc`**."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `asc` sorts the task list in ascending order, while `desc` sorts the task list in descending order."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `sort asc` sorts the task list in ascending order."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Marks the specified task from the task list as done."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Marks the task at the specified `INDEX` as done."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index refers to the index number shown in the entire task list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index **must be a positive integer not more than the size of the task list** e.g. 1, 2, 3, ..."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `done 2` marks the 2nd task in the task list as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Deleting a task : `delete`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Deletes the task at the specified `INDEX`."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index **must be a positive integer not more than the size of the task list** e.g. 1, 2, 3, ..."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `delete 2` deletes the 2nd task in the task list."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Exiting the program : `bye`"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Task list data are saved in the hard disk automatically after any command that changes the data. There is no need to "
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "save manually."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Action | Format, Examples"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Add deadline** | `deadline NAME /by DATE` \u003cbr\u003e e.g., `deadline Save Mudkip /by 2020-09-09`"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Add event** | `event NAME /at DATE` \u003cbr\u003e e.g., `event Attend Sobble\u0027s birthday /at 2020-12-12`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Add todo** | `todo NAME` \u003cbr\u003e e.g., `todo Defeat Gengar`"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Delete** | `delete INDEX` \u003cbr\u003e e.g., `delete 3`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Done** | `done INDEX` \u003cbr\u003e e.g., `done 2`"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Exit** | `bye`"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Find** | `find KEYWORD`\u003cbr\u003e e.g., `find Save`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**List** | `list`"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Sort** | `sort SORT_ORDER` \u003cbr\u003e e.g., `sort asc`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Pokemon Fandom for providing the following images:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    * [Piplup background](https://pokemon.fandom.com/wiki/Piplup?file\u003d393Piplup_Pok%C3%A9mon_Super_Mystery_Dungeon.png)"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    * [Piplup display picture](https://pokemon.fandom.com/wiki/Piplup?file\u003d393Piplup.png)"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    * [Oshawott display picture](https://pokemon.fandom.com/wiki/Oshawott?file\u003d501Oshawott.png)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Oracle documentation for providing [CSS code](https://docs.oracle.com/javafx/2/get_started/css.htm)"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* SoC AB-3 team for providing reference for the [User Guide](https://se-education.org/addressbook-level3/UserGuide.html)"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 154
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 45,
      "WeiJie96": 17
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "T | 0 | Defeat Gengar"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "D | 1 | Save Mudkip | 2020-09-09"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "E | 0 | Attend Sobble\u0027s birthday | 2020-12-12"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "D | 0 | Save Squirtle | 2021-01-01"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 4
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "---"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "layout: page"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "title: User Guide"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "---"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Duke is a **desktop app for managing tasks, optimized for use via a Command Line Interface** (CLI) while still having "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Table of Contents"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "{:toc}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "1. Ensure you have Java `11` or above installed in your Computer."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "2. Download the latest `duke.jar` from [here](https://github.com/WeiJie96/ip/releases)."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "3. Copy the file to the folder you want to use as the _home folder_."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds.\u003cbr\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   ![Ui](images/Start.png)"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "5. Type the command in the command box and press Enter / Return on your keyboard to execute it. Alternatively, you may "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "press the Enter button on the GUI. e.g. typing **`todo Defeat Gengar`** and pressing Enter will add a task "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "named `Defeat Gengar` to your task list.\u003cbr\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   Some example commands you can try:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`list`** : Lists all tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`todo`**`Defeat Gengar` : Adds a task named `Defeat Gengar` to your task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`delete`**`3` : Deletes the 3rd task shown in the current list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "   * **`bye`** : Exits the app."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "6. Refer to the [Features](#features) below for details of each command."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003cdiv markdown\u003d\"block\" class\u003d\"alert alert-info\"\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**:information_source: Notes about the command format:**\u003cbr\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Words in `UPPER_CASE` are the parameters to be supplied by the user.\u003cbr\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "  e.g. in `todo NAME`, `NAME` is a parameter which can be used as `todo Defeat Gengar`."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c/div\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Adding a task: `todo / event / deadline`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Adds a task to the address book."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Adding a todo: `todo NAME`"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Adding an event: `event NAME /at DATE`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Adding a deadline: `deadline NAME /by DATE`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `todo Defeat Gengar`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `event Attend Sobble\u0027s birthday /at 2020-12-12`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `deadline Save Mudkip /by 2020-09-09`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Listing all tasks : `list`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Shows a list of all tasks in the task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Locating tasks by name: `find`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Find tasks where names and / or dates contain any of the given keywords."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The search is case-sensitive. e.g `Save` will not match `save`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* A space-separated search is considered as one keyword e.g. `Save Mudkip` would match `Save Mudkip` only, "
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "and not `Save Treecko`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Both the name and date can be searched."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Partial words can be matched e.g. `Mud` will match `Mudkip`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `find Sav` returns `Save Mudkip /by 2020-09-09` and `Save Treecko`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `find 2020` returns `Save Mudkip /by 2020-09-09` and `Attend Sobble\u0027s birthday /at 2020-12-12`\u003cbr\u003e"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Sorting the task list : `sort`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Sorts the task list by task name."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `sort SORT_ORDER`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Sorts the entire task list by task name using the specified `SORT_ORDER`."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `SORT_ORDER` **must be one of `asc` or `desc`**."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `asc` sorts the task list in ascending order, while `desc` sorts the task list in descending order."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `sort asc` sorts the task list in ascending order."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Marking a task as done: `done`"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Marks the specified task from the task list as done."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Marks the task at the specified `INDEX` as done."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index refers to the index number shown in the entire task list."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index **must be a positive integer not more than the size of the task list** e.g. 1, 2, 3, ..."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `done 2` marks the 2nd task in the task list as done."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Deleting a task : `delete`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Deletes the specified task from the task list."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Deletes the task at the specified `INDEX`."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index refers to the index number shown in the displayed task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* The index **must be a positive integer not more than the size of the task list** e.g. 1, 2, 3, ..."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* `delete 2` deletes the 2nd task in the task list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Exiting the program : `bye`"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Task list data are saved in the hard disk automatically after any command that changes the data. There is no need to "
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "save manually."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "Action | Format, Examples"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------|------------------"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Add deadline** | `deadline NAME /by DATE` \u003cbr\u003e e.g., `deadline Save Mudkip /by 2020-09-09`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Add event** | `event NAME /at DATE` \u003cbr\u003e e.g., `event Attend Sobble\u0027s birthday /at 2020-12-12`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Add todo** | `todo NAME` \u003cbr\u003e e.g., `todo Defeat Gengar`"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Delete** | `delete INDEX` \u003cbr\u003e e.g., `delete 3`"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Done** | `done INDEX` \u003cbr\u003e e.g., `done 2`"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Exit** | `bye`"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Find** | `find KEYWORD`\u003cbr\u003e e.g., `find Save`"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**List** | `list`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "**Sort** | `sort SORT_ORDER` \u003cbr\u003e e.g., `sort asc`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "--------------------------------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "## Acknowledgements"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Pokemon Fandom for providing the following images:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    * [Piplup background](https://pokemon.fandom.com/wiki/Piplup?file\u003d393Piplup_Pok%C3%A9mon_Super_Mystery_Dungeon.png)"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    * [Piplup display picture](https://pokemon.fandom.com/wiki/Piplup?file\u003d393Piplup.png)"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    * [Oshawott display picture](https://pokemon.fandom.com/wiki/Oshawott?file\u003d501Oshawott.png)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* Oracle documentation for providing [CSS code](https://docs.oracle.com/javafx/2/get_started/css.htm)"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "* SoC AB-3 team for providing reference for the [User Guide](https://se-education.org/addressbook-level3/UserGuide.html)"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 147,
      "-": 19
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ":init"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e master"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ":end"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "-": 103,
      "WeiJie96": 4
    }
  },
  {
    "path": "src/main/java/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of adding tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class AddCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Name of command e.g. Deadline. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private CommandName commandName;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Description of task. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Date in string format. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs a add command."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param commandName Name of command to add."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    AddCommand(CommandName commandName, String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs a add command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param commandName Name of command to add."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param date Date of deadline or event."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    AddCommand(CommandName commandName, String description, String date) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.commandName \u003d commandName;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes adding tasks."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When date time in wrong format, or description not given,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String[] taskAndTaskListInfo \u003d tasks.addTask(commandName, description, date);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String taskString \u003d taskAndTaskListInfo[0];"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String lenString \u003d taskAndTaskListInfo[1];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showAddTaskMessage(taskString, lenString);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 70
    }
  },
  {
    "path": "src/main/java/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls main logic of all user commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes command."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When date time in wrong format, or description not given, or I/O error."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Whether or not to exit program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 23
    }
  },
  {
    "path": "src/main/java/duke/CommandName.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Enumeration of all valid commands by user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "enum CommandName {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    LIST, DONE, TODO, DEADLINE, EVENT, DELETE, BYE, FIND, SORT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 8
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class used for deadline tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** String used to store deadline. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected LocalDate deadlineDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs deadline."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param deadlineDate Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Deadline(String description, LocalDate deadlineDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param deadlineDate Deadline."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Deadline(String description, LocalDate deadlineDate, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.deadlineDate \u003d deadlineDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns string format for file storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String toStringForStorage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"D | \" + super.toStringForStorage() + \" | \" + deadlineDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String formattedDate \u003d this.deadlineDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 54
    }
  },
  {
    "path": "src/main/java/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of deleting tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Index to delete task. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs a delete command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param index Index of task to delete."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes deleting of tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When I/O error occurs."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String[] taskAndTaskListInfo \u003d tasks.deleteTask(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String taskString \u003d taskAndTaskListInfo[0];"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String lenString \u003d taskAndTaskListInfo[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showDeleteTaskMessage(taskString , lenString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 51
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ObservableList\u003cNode\u003e observableList \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Collections.reverse(observableList);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        getChildren().setAll(observableList);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Creates Dialog box for user."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param text Text input."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param img Image input."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return New Dialog box."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Creates Dialog box for duke."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param text Text input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param img Image input."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return New Dialog box."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        var dialogBox \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 76
    }
  },
  {
    "path": "src/main/java/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of completing tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Index of task to be done. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs done command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param index Index of task to do."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DoneCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes completing tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When I/O error occurs."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String taskString \u003d tasks.doTask(index);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.getTasks();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage.save(taskList);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showDoTaskMessage(taskString);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 48
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Main class that drives the application."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Deals with input output of files. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Task list. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Deals with user input output. */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs the main driver."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param filePath File path to load history, and to save history."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Duke(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets welcome message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Welcome message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String getWelcome() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showWelcome();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Generates a response to user input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Response to user input."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String getResponse(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return ui.showError(e);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets exit status of application."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Boolean of exit status."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit(String input) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return c.isExit();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 65,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class for duke-specific exceptions."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs duke-specific exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param s String input of exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 15
    }
  },
  {
    "path": "src/main/java/duke/ErrorMessage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Stores all error messages to output to user."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class ErrorMessage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Takes in a type of error, and outputs the corresponding error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param errorType The type of error."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    static String getErrorMessage(ErrorType errorType) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case FILE_IO:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! An I/O file error has occurred. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case FILE_NOT_FOUND:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! File cannot be found. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case WRONG_TASK_TYPE_IN_STORAGE:"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Invalid task type in storage file, please type D/E/T. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case WRONG_DATE_FORMAT:"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Pass in a date in yyyy-mm-dd. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case INVALID_ORDER:"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Please enter either asc or desc. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case INVALID_COMMAND:"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! I\u0027m sorry, but I don\u0027t know what that means. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DONE_MISSING_INDEX:"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Please add index to be done. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case SORT_MISSING_ORDER:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Please add the sorting order. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DELETE_MISSING_INDEX:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Please add the index to be deleted. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case FIND_MISSING_KEYWORD:"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! Please add what you want to find. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert false : \"Should not reach here, this should be called by other \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                    + \"classes only with the enumerations above\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Takes in a type of error, and outputs the corresponding error message. Overloaded usage to handle variable tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param errorType The type of error."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskType Type of task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Error message."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    static String getErrorMessage(ErrorType errorType, String taskType) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch (errorType) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DEADLINE_AND_EVENT_MISSING_DATE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! The date of a/n \" + taskType + \" cannot be empty. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case TASK_MISSING_DESCRIPTION:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"PIII!!! The description of a/n \" + taskType + \" cannot be empty. \\uD83D\\uDC80\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert false : \"Should not reach here, this should be called by other \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                    + \"classes only with the enumerations above\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 62
    }
  },
  {
    "path": "src/main/java/duke/ErrorType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Enumeration of all error types."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public enum ErrorType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    WRONG_TASK_TYPE_IN_STORAGE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    WRONG_DATE_FORMAT,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    FILE_NOT_FOUND,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    FILE_IO,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DONE_MISSING_INDEX,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DELETE_MISSING_INDEX,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    FIND_MISSING_KEYWORD,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    SORT_MISSING_ORDER,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    TASK_MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    DEADLINE_AND_EVENT_MISSING_DATE,"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    INVALID_COMMAND,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    INVALID_ORDER"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 19
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class representing events."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store event time. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected LocalDate eventDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param eventDate Event time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Event(String description, LocalDate eventDate) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Event description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param eventDate Event time."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Event(String description, LocalDate eventDate, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns string format for file storage."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String toStringForStorage() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"E | \" + super.toStringForStorage() + \" | \" + eventDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String formattedDate \u003d this.eventDate.format(DateTimeFormatter.ofLocalizedDate(FormatStyle.MEDIUM));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + formattedDate + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 54
    }
  },
  {
    "path": "src/main/java/duke/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of exiting program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class ExitCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes exit."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should exit program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 29
    }
  },
  {
    "path": "src/main/java/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class FindCommand extends Command {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Contains user\u0027s search string. */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String searchString;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs find command."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param searchString String to find."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    FindCommand(String searchString) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.searchString \u003d searchString;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes finding of task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cString\u003e foundTaskListString \u003d tasks.findTasks(searchString);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showFindTaskMessage(foundTaskListString);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should exit program."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 41
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * A launcher class to launch the application."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 12
    }
  },
  {
    "path": "src/main/java/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of listing tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes list tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cString\u003e taskListString \u003d tasks.listTasks();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showListTaskMessage(taskListString);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 32
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Driver of application. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Duke duke \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            scene.getStylesheets().add(\"/view/stylesheet.css\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            stage.setTitle(\"Pok\\u00E9mon Mystery Dungeon\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDukeAndDisplayWelcome(duke);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 34
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    // @FXML marks a private or protected member and makes it accessible to FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private boolean isExit \u003d false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Oshawott.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Piplup.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Sets duke object and displays welcome."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param d Main driver of application."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void setDukeAndDisplayWelcome(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String response \u003d duke.getWelcome();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void initialize() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        handleExit(isExit);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        handleUserText();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleExit(boolean isExit) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // After user says \"bye\", and gives another input e.g. \"some_text\", the application will exit."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        if (isExit) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            // get a handle to the stage"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Stage stage \u003d (Stage) scrollPane.getScene().getWindow();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            stage.close();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleUserText() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        isExit \u003d duke.isExit(input);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        );"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 84
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class used for parsing input from user command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Parses input, and calls corresponding functions."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param input String input from user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Corresponding Command with respect to input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException  When date is in wrong format, or task lacks description."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String[] partsOfCommand \u003d splitCommandAndFormatAction(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String action \u003d partsOfCommand[0];"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        CommandName commandName \u003d checkCommandNameEnum(action);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return handleCommand(commandName, partsOfCommand);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static String[] splitCommandAndFormatAction(String input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String[] partsOfCommand \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String action \u003d partsOfCommand[0].toUpperCase();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        if (partsOfCommand.length \u003e 1) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert partsOfCommand.length \u003d\u003d 2 : \"Length of parts of command should be 2\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String secondPartOfCommand \u003d partsOfCommand[1];"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new String[] {action, secondPartOfCommand};"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new String[] {action};"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleCommand(CommandName commandName, String[] partsOfCommand) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch(commandName) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case LIST:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DONE:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleDone(partsOfCommand);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            // Fallthrough"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleTask(partsOfCommand, commandName);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DELETE:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleDelete(partsOfCommand);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case FIND:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleFind(partsOfCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case SORT:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleSort(partsOfCommand);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case BYE:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert false : \"There should only be a fixed number of commands, should not reach here\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static String tryGetSecondElement(String[] inputs, String errorMessage) throws DukeException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return inputs[1];"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleDone(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.DONE_MISSING_INDEX);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String indexString \u003d tryGetSecondElement(inputs, errorMessage);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return new DoneCommand(index);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleDelete(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.DELETE_MISSING_INDEX);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String indexString \u003d tryGetSecondElement(inputs, errorMessage);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index \u003d Integer.parseInt(indexString);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return new DeleteCommand(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleFind(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.FIND_MISSING_KEYWORD);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String findString \u003d tryGetSecondElement(inputs, errorMessage);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return new FindCommand(findString);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleSort(String[] inputs) throws DukeException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.SORT_MISSING_ORDER);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String sortOrderOption \u003d tryGetSecondElement(inputs, errorMessage);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        SortOrderOption sortOrderOptionEnum \u003d checkSortOrderOptionEnum(sortOrderOption.toUpperCase());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return new SortCommand(sortOrderOptionEnum);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleTask(String[] inputs, CommandName commandName) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String errorMessage \u003d ErrorMessage.getErrorMessage("
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                ErrorType.TASK_MISSING_DESCRIPTION,"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                commandName.toString().toLowerCase());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String taskInfo \u003d tryGetSecondElement(inputs, errorMessage);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch (commandName) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new AddCommand(commandName, taskInfo);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleDeadlineAndEvent(taskInfo, \" /by \", commandName);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return handleDeadlineAndEvent(taskInfo, \" /at \", commandName);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert false : \"There should only be 3 types of tasks, should not reach here\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new AddCommand(commandName, \"\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static Command handleDeadlineAndEvent("
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String taskInfo, String toSplitBy, CommandName commandName) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String [] taskInfoParts \u003d taskInfo.split(toSplitBy, 2);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String description \u003d taskInfoParts[0];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String errorMessage \u003d ErrorMessage.getErrorMessage("
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                ErrorType.DEADLINE_AND_EVENT_MISSING_DATE,"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                commandName.toString().toLowerCase());"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String date \u003d tryGetSecondElement(taskInfoParts, errorMessage);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return new AddCommand(commandName, description, date);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static CommandName checkCommandNameEnum(String action) throws DukeException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return CommandName.valueOf(action);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.INVALID_COMMAND);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private static SortOrderOption checkSortOrderOptionEnum(String orderOption) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return SortOrderOption.valueOf(orderOption);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IllegalArgumentException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.INVALID_ORDER);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 145
    }
  },
  {
    "path": "src/main/java/duke/SortCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Controls logic of sorting tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class SortCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Contains user\u0027s sort order option, e.g.  asc, desc. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private SortOrderOption sortOrderOptionEnum;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs sort command, which handles logic of sorting tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param sortOrderOptionEnum Option to order ascending or descending."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    SortCommand(SortOrderOption sortOrderOptionEnum) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.sortOrderOptionEnum \u003d sortOrderOptionEnum;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Executes task sorting."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks Stores task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param ui Handles user interaction."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param storage Handles input output to hard disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cString\u003e sortedTaskListString \u003d tasks.sortTasks(sortOrderOptionEnum);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return ui.showListTaskMessage(sortedTaskListString);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Checks if should exit program."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Should not exit program."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 44
    }
  },
  {
    "path": "src/main/java/duke/SortOrderOption.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Enumeration of all sort ordering options."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "public enum SortOrderOption {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ASC, DESC"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 8
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Deals with loading and saving tasks from file."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store file path for I/O. */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs file storage."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param filePath Filepath of input and output file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Loads existing file."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return A list of list of strings, outer list for many lines in file;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * inner list is one line in file, split by delimiter"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException When IO error occurs."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ArrayList\u003cArrayList\u003cString\u003e\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        if (file.exists()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return readTasksFromFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return createFile(file);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ArrayList\u003cArrayList\u003cString\u003e\u003e createFile(File file) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.FILE_IO);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ArrayList\u003cArrayList\u003cString\u003e\u003e readTasksFromFile() throws DukeException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // File structure"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // D | isDoneInt | description | by"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // E | isDoneInt | description | at"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        // T | isDoneInt | description"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cArrayList\u003cString\u003e\u003e formattedOutputs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String[] lineParts \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                ArrayList\u003cString\u003e linePartArray \u003d new ArrayList\u003c\u003e(Arrays.asList(lineParts));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                formattedOutputs.add(linePartArray);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return formattedOutputs;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (java.io.FileNotFoundException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.FILE_NOT_FOUND);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Saves tasks to file."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param tasks List of task objects."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException Throws exception when a file error e.g. writing occurs."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void save(ArrayList\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String output \u003d tasksToStorageStringOutput(tasks);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        appendToFile(output);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String tasksToStorageStringOutput(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            output.append(task.toStringForStorage()).append(System.lineSeparator());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void appendToFile(String textToAppend) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filePath); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fw.write(textToAppend);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.FILE_IO);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 109
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class representing generic tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store task description. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** Variable to store if the task is completed. */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Task description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets status icon, depending on whether task is done."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return String representing status icon."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets task description."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Task description."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String getDescription() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets task done status."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Task done status."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void setDone(boolean isDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns string format for file storage."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String toStringForStorage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int intDone \u003d isDone ? 1 : 0;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return intDone + \" | \" + this.getDescription();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 76
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.Comparator;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Contains task list, and has operations like list and delete."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class TaskList {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /** List of tasks. */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs list of tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs list of tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskStrings List of tasks in string format."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException  When date is in wrong format, or when task is not named as D/E/T."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    TaskList(ArrayList\u003cArrayList\u003cString\u003e\u003e taskStrings) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (ArrayList\u003cString\u003e taskString : taskStrings) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String description \u003d taskString.get(2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            int isDoneInt \u003d Integer.parseInt(taskString.get(1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            boolean isDone \u003d isDoneInt \u003e 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String taskNameString \u003d taskString.get(0);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            TaskNameInStorage taskNameInStorage \u003d TaskNameInStorage.valueOf(taskNameString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            switch (taskNameInStorage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case D:"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String dateString \u003d taskString.get(3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                handleDeadline(description, dateString, isDone);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case E:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                dateString \u003d taskString.get(3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                handleEvent(description, dateString, isDone);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            case T:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                handleTodo(description, isDone);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.WRONG_TASK_TYPE_IN_STORAGE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Gets list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return List of tasks."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Handles adding of tasks."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param commandName Name of task command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Description of task."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param date Date of task."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Output for ui for adding tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @throws DukeException Throws exception when date is in wrong format."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String[] addTask(CommandName commandName, String description, String date) throws DukeException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch (commandName) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d handleTodo(description);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d handleDeadline(description, date);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d handleEvent(description, date);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert false : \"There should only be 3 types of tasks, should not reach here\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            task \u003d new Task(\"\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return getTaskInfoAndTaskListInfoForUi(task);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private String[] getTaskInfoAndTaskListInfoForUi(Task task) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int len \u003d taskList.size();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String[] taskAndTaskListInfo \u003d new String[2];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskAndTaskListInfo[0] \u003d task.toString();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskAndTaskListInfo[1] \u003d String.valueOf(len);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return taskAndTaskListInfo;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Task handleTodo(String todoTask) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task todo \u003d new Todo(todoTask);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return todo;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleTodo(String todoTask, boolean isDone) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task todo \u003d new Todo(todoTask, isDone);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private LocalDate checkParseDate(String dateString) throws DukeException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            return LocalDate.parse(dateString);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            String errorMessage \u003d ErrorMessage.getErrorMessage(ErrorType.WRONG_DATE_FORMAT);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            throw new DukeException(errorMessage);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Task handleDeadline(String deadlineTask, String deadlineBy) throws DukeException {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        LocalDate deadlineByLocalDate \u003d checkParseDate(deadlineBy);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task deadline \u003d new Deadline(deadlineTask, deadlineByLocalDate);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleDeadline(String deadlineTask, String deadlineBy, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        LocalDate deadlineByLocalDate \u003d checkParseDate(deadlineBy);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task deadline \u003d new Deadline(deadlineTask, deadlineByLocalDate, isDone);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private Task handleEvent(String eventTask, String eventAt) throws DukeException {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        LocalDate eventAtLocalDate \u003d checkParseDate(eventAt);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task event \u003d new Event(eventTask, eventAtLocalDate);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return event;"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void handleEvent(String eventTask, String eventAt, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        LocalDate eventAtLocalDate \u003d checkParseDate(eventAt);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task event \u003d new Event(eventTask, eventAtLocalDate, isDone);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Handles listing of tasks."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Output for ui for listing tasks."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ArrayList\u003cString\u003e listTasks() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cString\u003e taskListString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskListString.add(task.toString());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return taskListString;"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Handles doing of tasks."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param index Index of task to do."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Output for ui for doing tasks."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String doTask(int index) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        task.setDone(true);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return task.toString();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Handles deleting of tasks."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param index Index of task to delete."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Output for ui for deleting tasks."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String[] deleteTask(int index) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        Task task \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return getTaskInfoAndTaskListInfoForUi(task);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Handles finding of tasks."
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param search String to search for."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Output for ui for finding tasks."
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ArrayList\u003cString\u003e findTasks(String search) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cString\u003e foundTaskListString \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            if (task.toString().contains(search)) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                foundTaskListString.add(task.toString());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return foundTaskListString;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Handles sorting of tasks."
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param sortOrderOptionEnum Option to order ascending or descending."
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Output for ui for sorting tasks."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    ArrayList\u003cString\u003e sortTasks(SortOrderOption sortOrderOptionEnum) {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        sortTasksInPlace(sortOrderOptionEnum);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        ArrayList\u003cString\u003e taskListString \u003d listTasks();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return taskListString;"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    private void sortTasksInPlace(SortOrderOption sortOrderOptionEnum) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        switch (sortOrderOptionEnum) {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case ASC:"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskList.sort(Comparator.comparing(Task::getDescription));"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        case DESC:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            taskList.sort(Collections.reverseOrder(Comparator.comparing(Task::getDescription)));"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assert false : \"There should only be 2 sort options, should not reach here.\";"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 231
    }
  },
  {
    "path": "src/main/java/duke/TaskNameInStorage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Enumeration of all valid task names, used for storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "enum TaskNameInStorage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    D, E, T"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 8
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Class representing tasks to be done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs a to do."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Description for to do."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Todo(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs a to do."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param description Description for to do."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param isDone Describes if task is completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Returns string format for file storage."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return String description."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String toStringForStorage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"T | \" + super.toStringForStorage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 42
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " * Deals with user interaction."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Constructs User interface ."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays error message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param e Duke Exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showError(DukeException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays welcome message."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Welcome message."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showWelcome() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String welcomeMessage \u003d \"Hello! I\u0027m Piplup \\uD83C\\uDFB5\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \"What should we explore today?\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return welcomeMessage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays exit message."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Exit message."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showExit() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String exitMessage \u003d \"Bye. Hope to see you again soon! \\uD83D\\uDC27\\u2665\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return exitMessage;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays add task message."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskString Task in string format."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param lenString Length of task list in string format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Add task message."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showAddTaskMessage(String taskString, String lenString) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String addedTaskOutputMessage \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + taskString + \"\\nNow you have \" + lenString"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return addedTaskOutputMessage;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays list task message."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskListString Task list in string format."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return List task message."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showListTaskMessage(ArrayList\u003cString\u003e taskListString) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        StringBuilder listTaskMessage \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (String taskString : taskListString) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            listTaskMessage.append(index).append(\".\").append(taskString).append(\"\\n\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return listTaskMessage.toString();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays do task message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskString Task in string format."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Do task message."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showDoTaskMessage(String taskString) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String doneOutputMessage \u003d \"Nice! I\u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + taskString;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return doneOutputMessage;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays delete task message."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param taskString Deleted task in string format."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param lenString Length of task list in string format."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Delete task message."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showDeleteTaskMessage(String taskString, String lenString) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        String deletionOutputMessage \u003d \"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + taskString + \"\\nNow you have \" + lenString"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                + \" tasks in the list.\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return deletionOutputMessage;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * Displays find task message."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @param foundTaskListString Task list found, in string format."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     * @return Find task message."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    String showFindTaskMessage(ArrayList\u003cString\u003e foundTaskListString) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        StringBuilder findTaskMessage \u003d new StringBuilder(\"Here are the matching tasks in your list:\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        for (String taskString : foundTaskListString) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            findTaskMessage.append(index).append(\".\").append(taskString).append(\"\\n\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        return findTaskMessage.toString();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 118
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003c!--  layoutX and layoutY probably is position of top left hand corner --\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 20
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void parse_noDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Parser.parse(\"event\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assertEquals(\"PIII!!! The description of a/n event cannot be empty. \\uD83D\\uDC80\", e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void parse_wrongCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            Parser.parse(\"random\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assertEquals(\"PIII!!! I\u0027m sorry, but I don\u0027t know what that means. \\uD83D\\uDC80\", e.getMessage());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 29
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    void handleDeadline_wrongDateFormat_exceptionThrown() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            CommandName deadline \u003d CommandName.DEADLINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            tasks.addTask(deadline, \"desc\", \"2020/10/10\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "            assertEquals(\"PIII!!! Pass in a date in yyyy-mm-dd. \\uD83D\\uDC80\", e.getMessage());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "todo"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "WeiJie96"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "WeiJie96": 10
    }
  }
]
