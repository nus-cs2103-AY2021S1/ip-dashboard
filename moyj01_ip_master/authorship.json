[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation \u0027junit:junit:4.12\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation \u0027org.junit.jupiter:junit-jupiter:5.4.2\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    String javaFxVersion \u003d \u002711.0.2\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 19,
      "-": 42
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 60
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.UserCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Duke program."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param filePath file path of the file to be loaded."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        tasks \u003d storage.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getResponse(String userinput) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            UserCommand command \u003d Parser.parse(userinput);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String s \u003d command.execute(tasks, ui);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (DukeException exception) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return exception.getMessage();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "moyj01": 52
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Duke duke \u003d new Duke(\"./taskdata.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Human.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Bot.jpg\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public MainWindow() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Initialises the program\u0027s GUI."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String greeting \u003d \"Hello from\\n\" + \"Duke Melvin\" + \"\\n\" + \"What can I do for you?\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        );"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 65
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that ends the program."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ByeCommand extends UserCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ByeCommand(String userInput) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return ui.sayGoodBye();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 27
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that adds a deadline task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DeadlineCommand extends UserCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DeadlineCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] deadlineArr \u003d userInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String by \u003d deadlineArr[1].substring(deadlineArr[1].indexOf(\"by\") + 3);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String deadlineString \u003d deadlineArr[0].substring(9);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDeadlineDate \u003d TimeFormatter.localDate(by);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Deadline deadline \u003d new Deadline(deadlineString, localDeadlineDate);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        taskList.addTask(deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return ui.printResponse(\"Got it. I\u0027ve added this task:\") + \"\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + ui.printResponse(deadline.toString()) + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 41
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidDeleteCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that deletes a task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DeleteCommand extends UserCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DeleteCommand(String userInput) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] deleteCommandArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (deleteCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDeleteCommandException();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            int itemToBeDeleted \u003d Integer.parseInt(deleteCommandArray[1]);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (itemToBeDeleted \u003e taskList.listSize() || itemToBeDeleted \u003c\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                throw new InvalidDeleteCommandException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                Task item \u003d taskList.getTask(itemToBeDeleted - 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                taskList.deleteTask(itemToBeDeleted - 1);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printResponse(\"Noted. I\u0027ve removed this task:\") + \"\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        + ui.printResponse(item.toString()) + \"\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                        + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidDoneCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that mark a task as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DoneCommand extends UserCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DoneCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] doneCommandArray \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (doneCommandArray.length \u003c 2) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            int itemToBeMarkedAsDone \u003d Integer.parseInt(doneCommandArray[1]);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (itemToBeMarkedAsDone \u003e taskList.listSize() || itemToBeMarkedAsDone \u003c\u003d 0) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                throw new InvalidDoneCommandException();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                taskList.getTask(itemToBeMarkedAsDone - 1).markAsDone();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 40
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that creates an event task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EventCommand extends UserCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EventCommand(String userInput) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String[] eventArr \u003d userInput.split(\"/\", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String at \u003d eventArr[1].substring(eventArr[1].indexOf(\"at\") + 3);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String eventString \u003d eventArr[0].substring(6);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localEventDate \u003d TimeFormatter.localDate(at);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        Event event \u003d new Event(eventString, localEventDate);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        taskList.addTask(event);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return ui.printResponse(\"Got it. I\u0027ve added this task:\") + \"\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + ui.printResponse(event.toString()) + \"\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.EmptyFindException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represent a command that search for tasks based on user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class FindCommand extends UserCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public FindCommand(String userInput) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (userInput.trim().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new EmptyFindException();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String search \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            List\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.listSize(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                Task task \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                if (task.getDescription().contains(search)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    temp.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            if (temp.isEmpty()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printResponse(\"No results found.\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                TaskList tempList \u003d new TaskList(temp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return ui.printList(tempList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 49
    }
  },
  {
    "path": "src/main/java/duke/command/InvalidCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.InvalidCommandException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that is an invalid command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidCommand extends UserCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidCommand(String userInput) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        throw new InvalidCommandException();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 29
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a command that shows the task in the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ListCommand extends UserCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ListCommand(String userInput) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return ui.printList(taskList);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 28
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.EmptyToDoException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ToDoCommand extends UserCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ToDoCommand(String userInput) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(userInput);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String execute(TaskList taskList, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        if (userInput.trim().length() \u003c\u003d 4) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            throw new EmptyToDoException();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            String todoString \u003d userInput.substring(5);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ToDo todo \u003d new ToDo(todoString);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            taskList.addTask(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return ui.printResponse(\"Got it. I\u0027ve added this task:\") + \"\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    + ui.printResponse(todo.toString()) + \"\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                    + ui.printListCount(taskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 32
    }
  },
  {
    "path": "src/main/java/duke/command/UserCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents the parent class of all commands."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public abstract class UserCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected String userInput;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * boolean to check if user wishes to exit the program"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected Boolean isExit \u003d false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public UserCommand(String userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.userInput \u003d userInput;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList task list containing all the tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param ui       ui that prints output."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui) throws DukeException;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return isExit boolean"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 42
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyFindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EmptyFindException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EmptyFindException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"Please input a search term\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/EmptyToDoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class EmptyToDoException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public EmptyToDoException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDeleteCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDeleteCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDeleteCommandException() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! Please mark a valid item for deletion\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 8
    }
  },
  {
    "path": "src/main/java/duke/exceptions/InvalidDoneCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class InvalidDoneCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public InvalidDoneCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(\"\\u2639 OOPS!!! Please mark a valid item as done\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.InvalidCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ToDoCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.UserCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Parses user\u0027s input."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param userInput user\u0027s input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static UserCommand parse(String userInput) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String firstArg \u003d userInput.split(\" \")[0];"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        switch (userInput) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new ByeCommand(userInput);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new ListCommand(userInput);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            switch (firstArg) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new DoneCommand(userInput);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new DeleteCommand(userInput);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new ToDoCommand(userInput);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new DeadlineCommand(userInput);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new EventCommand(userInput);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new FindCommand(userInput);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                return new InvalidCommand(userInput);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 49
    }
  },
  {
    "path": "src/main/java/duke/storage/ArrayListToTextConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Convert arraylist to txt file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ArrayListToTextConverter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param tasks    list containing the tasks to be converted to a txt file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param filePath path to store the file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static void convertTaskListToText(TaskList tasks, String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            writeStream.writeObject(tasks);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Load saved file from disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return list containing the previously saved tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskList load() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return TextToTaskListConverter.readFile(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Save file to disk."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param tasks containing the tasks in the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        ArrayListToTextConverter.convertTaskListToText(tasks, filePath);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 34
    }
  },
  {
    "path": "src/main/java/duke/storage/TextToTaskListConverter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Converts txt file to an arraylist."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TextToTaskListConverter {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param filePath location of the file."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return list containing the previously saved tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static TaskList readFile(String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            FileInputStream readData \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            TaskList taskList \u003d (TaskList) readStream.readObject();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            readStream.close();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            System.out.println(\"File not found.Creating new save file\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            return new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a task that specifies a deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Represents the date of the deadline task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description description of the deadline task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param by          date of the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[D]\" + getStatusIcon() + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + TimeFormatter.prettyDate(by) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 31
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.timeformatter.TimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represent a task that specifies a time of occurrence."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Event\u0027s occurrence."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description description of the event."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param at          date of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[E]\" + getStatusIcon() + super.toString() + \"(at: \""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + TimeFormatter.prettyDate(at) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "moyj01": 32
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param description description of the task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Getter method to retrieve the status of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return status of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return (isDone ? \"[\\u2713] \" : \"[\\u2718] \"); //return tick or X symbols"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Mark a task as completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \" + \"\\n\" + \"[\\u2713]\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + this.description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 43
    }
  },
  {
    "path": "src/main/java/duke/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents the list of tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TaskList implements Serializable {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return this.tasks.get(index);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.tasks.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public int listSize() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 37
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Represents a task that needs to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"[T]\" + getStatusIcon() + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 16
    }
  },
  {
    "path": "src/main/java/duke/timeformatter/TimeFormatter.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.timeformatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Convert the user\u0027s input for time to be parse by LocalDate."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class TimeFormatter {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Convert string input to LocalDate"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param by user\u0027s string input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return LocalDate corresponding to the string input."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static LocalDate localDate(String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String date \u003d by.trim().replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param localDate"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return string in day of week, month, day and year format."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public static String prettyDate(LocalDate localDate) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return localDate.getDayOfWeek() + \",\" + localDate.getMonth().name().substring(0, 3)"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                + \" \" + localDate.getDayOfMonth() + \" \" + localDate.getYear();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 30
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": " * Deals with interactions with the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Scanner to take in user\u0027s input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    private Scanner in;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Goodbye message to the user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String sayGoodBye() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints all the items within the list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList list containing all the tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String printList(TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String s \u003d \"\\n\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        for (int x \u003d 0; x \u003c taskList.listSize(); x++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            s \u003d s + (int) (x + 1) + \":\" + taskList.getTask(x).toString() + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints the size of the list."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param taskList list containing all the tasks."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String printListCount(TaskList taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return \"Now you have \" + taskList.listSize() + \" tasks in the list\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @return string containing the user\u0027s input."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return in.nextLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * Prints the response to user\u0027s command."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     * @param response string to be output."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "moyj01"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public String printResponse(String response) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 66
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "moyj01": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "moyj01": 19
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import duke.command.UserCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void parseByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        UserCommand command \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(command instanceof ByeCommand);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void parseListCommand() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        UserCommand command \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(command instanceof ListCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 28
    }
  },
  {
    "path": "src/test/java/duke/timeformatter/TimeFormatterTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "package duke.timeformatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "moyj01"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "moyj01"
        },
        "content": "class TimeFormatterTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void convertDate() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String by \u003d \"2019/10/10\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String date \u003d by.trim().replaceAll(\"/\", \"-\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(localDate.equals(LocalDate.parse(\"2019-10-10\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    public void convertToPrettyDate() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        LocalDate localDate \u003d LocalDate.parse(\"2019-10-10\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String testString \u003d TimeFormatter.prettyDate(localDate);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        String expectedOutput \u003d \"THURSDAY,OCT 10 2019\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "moyj01"
        },
        "content": "        assertTrue(testString.equals(expectedOutput));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "moyj01"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "moyj01"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "moyj01": 26
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "moyj01"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "moyj01"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "moyj01"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "moyj01"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "moyj01": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "moyj01"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "moyj01"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "moyj01": 2,
      "-": 20
    }
  }
]
