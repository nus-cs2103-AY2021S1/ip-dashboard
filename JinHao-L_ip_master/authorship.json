[
  {
    "path": "src/main/java/Alice.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public class Alice {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private static final String PROMPT \u003d \" \u003e \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private static final String DIVIDER \u003d \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public Alice() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public boolean canContinue(String input) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        String[] arr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            Command cmd \u003d Command.getCommandType(arr[0]);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            if (cmd \u003d\u003d Command.BYE) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                System.out.println(sayGoodbye());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            if (arr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                System.out.print(frameOutput(processCommand(cmd, \"\")) + PROMPT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            System.out.print(frameOutput(processCommand(cmd, arr[1])) + PROMPT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } catch (AliceException ex) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            System.out.print(frameOutput(ex.getMessage()) + PROMPT);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String processCommand(Command cmd, String params) throws AliceException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (cmd \u003d\u003d Command.LIST \u0026\u0026 params.isBlank()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Display task list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return getTaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.HELP) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Get help"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return Command.getCommandList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.DONE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Mark as done"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return markTaskAsDone(params);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.DELETE) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Delete"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return deleteTask(params);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.TODO) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Add to-do"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return addTodo(params);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.DEADLINE) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Add deadline"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return addDeadline(params);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.EVENT) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Add event"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return addEvent(params);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (cmd \u003d\u003d Command.EMPTY) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Empty command"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"Please give me something to do. T_T\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Invalid command"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"That command is not in my dictionary!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String markTaskAsDone(String s_index) throws AliceException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            int index \u003d Integer.parseInt(s_index) - 1;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return \"Great work! I\u0027ve marked this task as done:\\n    \" + tasks.get(index);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"That is not a valid number.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"That task number is not in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String deleteTask(String s_index) throws AliceException {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            int index \u003d Integer.parseInt(s_index) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            Task removed \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return \"Roger. I\u0027ve removed this task from your list:\\n    \""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                    + removed"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                    + \"\\nNow you have \" + tasks.size() + \" task in your list\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"That is not a valid number.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"That task number is not in the list.\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String addTodo(String details) throws AliceException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (!details.isBlank()) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return addTask(new Todo(details));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"The todo description cannot be left empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String addDeadline(String details) throws AliceException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        String[] desc_date \u003d details.split(\" /by \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (desc_date.length \u003d\u003d 2 \u0026\u0026 !desc_date[1].isBlank()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return addTask(new Deadline(desc_date[0], desc_date[1]));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (details.isBlank()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Empty description"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"The deadline description cannot be left empty.\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (details.endsWith(\"/by\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Empty date"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"You cannot create an deadline without the date.\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // No /by marker"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"I can\u0027t find the date. Did you forget to add \u0027/by\u0027?\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String addEvent(String details) throws AliceException {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        String[] desc_date \u003d details.split(\" /at \", 2);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (desc_date.length \u003d\u003d 2 \u0026\u0026 !desc_date[1].isBlank()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return addTask(new Event(desc_date[0], desc_date[1]));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (details.isBlank()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Empty event description"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"The event description cannot be left empty.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else if (details.endsWith(\"/at\")) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // Empty start-end time"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"You cannot create an event without the start and end time.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            // No /at marker"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            throw new AliceException(\"I can\u0027t find the start/end time. Did you forget to add \u0027/at\u0027?\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String addTask(Task t) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return \"Roger. I\u0027ve added the task to your list:\\n    \" + t"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                + \"\\nNow you have \" + tasks.size() + \" task in your list\";"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String frameOutput(String s) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return DIVIDER + s + \"\\n\" + DIVIDER;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String getTaskList() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return \"You have no tasks at the moment.\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        StringBuilder s \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            s.append(i + 1).append(\". \").append(tasks.get(i));"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            if (i \u003c tasks.size() - 1) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                s.append(\"\\n\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return s.toString();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        String logo \u003d \" _____  _     _____ _____  _____\\n\" +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"/  _  \\\\| |   |_   _/  __ \\\\|  ___|\\n\" +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"| |_| || |     | | | /  \\\\/| |__\\n\" +"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"|  _  || |     | | | |    |  __|\\n\" +"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"| | | || |_____| |_| \\\\__/\\\\| |___\\n\" +"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"\\\\_| |_/\\\\_____/\\\\___/ \\\\____/\\\\____/\\n\";"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return logo +"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"\\nHello! I\u0027m Alice\\n\" +"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                \"How can I help you today?\\n\" +"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                DIVIDER + PROMPT;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String sayGoodbye() {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return frameOutput(\"Goodbye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        Alice alice \u003d new Alice();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        System.out.print(alice.greet());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        boolean isExiting;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            isExiting \u003d !alice.canContinue(input);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            if (isExiting) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                return;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 189
    }
  },
  {
    "path": "src/main/java/AliceException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public class AliceException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    AliceException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        super(\"Oh no! \" + msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 5
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    LIST(new String[]{\"list\", \"ls\"}, \"Lists all tasks\", \"\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    DONE(new String[]{\"done\"}, \"Mark a task as done\",\"\u003ctask number\u003e\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    DELETE(new String[]{\"delete\"}, \"Delete a task\",\"\u003ctask number\u003e\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    TODO(new String[]{\"todo\"}, \"Create a todo task\",\"\u003cdesc\u003e\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    DEADLINE(new String[]{\"deadline\"}, \"Create a task with a deadline\",\"\u003cdesc\u003e /by \u003cdatetime\u003e\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    EVENT(new String[]{\"event\"}, \"Create an event\",\"\u003cdesc\u003e /at \u003cdatetime\u003e\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    HELP(new String[]{\"help\"}, \"Gets the list of commands\", \"\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    BYE(new String[]{\"bye\", \"exit\"}, \"Exits the program\", \"\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    EMPTY(new String[]{\"\"}, null, null);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final String[] names;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final String desc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final String useCase;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    Command(String[] names, String desc, String useCase) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.names \u003d names;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.useCase \u003d useCase;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public static Command getCommandType(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (input.isBlank()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return EMPTY;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        for (Command c : Command.values()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            for (String name : c.names) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                if (name.equals(input)) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                    return c;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public static String getCommandList() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        StringBuilder output \u003d new StringBuilder(\"These are the commands in my dictionary:\\n\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        for (Command c : Command.values()) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            if (c !\u003d EMPTY) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "                output.append(String.format(\"    %-35s%s\\n\", Arrays.toString(c.names) + \" \" + c.useCase, c.desc));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        output.setLength(output.length() - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 48
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return isDone ? \"✓\" : \"✘\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 31
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "blah"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "done one"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "deadline fake deadline /by"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "deadline hello"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "event"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "event fake event /at"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "event hello"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "ls"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "help"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "delete one"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "list"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 26
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "java -classpath ..\\bin Alice \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JinHao-L"
        },
        "content": "java -classpath ../bin Alice \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JinHao-L": 2,
      "-": 36
    }
  }
]
