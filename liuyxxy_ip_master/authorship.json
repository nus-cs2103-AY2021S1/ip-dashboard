[
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 1
    }
  },
  {
    "path": "src/main/java/seedu/duke/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents adding a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public AddCommand(String[] words) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/AddDeadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents adding a task with a deadline."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class AddDeadline extends AddCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public AddDeadline(String[] words) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Adds the task to the list of current tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws DateTimeException If the user inputs a wrong format of the date."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) throws DateTimeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String[] input \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        LocalDateTime day \u003d LocalDateTime.parse(input[1], FORMATTER);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        Deadline newDL \u003d new Deadline(input[0], day, false);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ls.add(newDL);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String thing \u003d \"Alright then, add more things to your ever-growing list of tasks:\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + newDL.getStatus().replaceAll(\"(?m)^\", \"\\t\")"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ui.printResult(thing);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 36
    }
  },
  {
    "path": "src/main/java/seedu/duke/AddEvent.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents adding an event task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class AddEvent extends AddCommand {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public AddEvent(String[] words) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Adds the task to the list of current tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws DateTimeException If the user inputs a wrong format of the date."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String[] input \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        LocalDateTime day \u003d LocalDateTime.parse(input[1], FORMATTER);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        Event newE \u003d new Event(input[0], day, false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ls.add(newE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String thing \u003d \"Alright then, add more things to your ever-growing list of tasks:\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + newE.getStatus().replaceAll(\"(?m)^\", \"\\t\")"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ui.printResult(thing);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/AddTodo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents adding a todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class AddTodo extends AddCommand {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public AddTodo(String[] words) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Adds the task to the list of current tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ToDo newTD \u003d new ToDo(words[1], false);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ls.add(newTD);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String thing \u003d \"Alright then, add more things to your ever-growing list of tasks:\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                newTD.getStatus().replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ui.printResult(thing);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 25
    }
  },
  {
    "path": "src/main/java/seedu/duke/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * A command that represents shutting down Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Checks if this command shuts down Duke."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return Boolean that represents if Duke should be shut down."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 19
    }
  },
  {
    "path": "src/main/java/seedu/duke/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents user commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected String[] words;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Command() {}"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Command(String[] words) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.words \u003d words;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) throws DukeException {}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 20
    }
  },
  {
    "path": "src/main/java/seedu/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents a task that has a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Deadline(String name, LocalDateTime time, boolean status) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns what the current task is and its status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[D]\" + super.getStatus() + \" (by: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Gets the deadline of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return DateTime object that represents the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String that represents the type of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * A command that deletes a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DeleteCommand(String[] words) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Deletes the task from the list of current tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws DukeNotSureException If the task being deleted does not exist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) throws DukeNotSureException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        int number \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        if (number \u003e ls.size()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            throw new DukeNotSureException(\"This task doesn\u0027t seem to exist? :s\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            Task oldTask \u003d ls.get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            ls.remove(number - 1);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String thing \u003d \"Running away from your responsibilities huh. Deleted:\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    \"\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    oldTask.getStatus().replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            ui.printResult(thing);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 32
    }
  },
  {
    "path": "src/main/java/seedu/duke/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents marking a task as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DoneCommand(String[] words) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Marks the given task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws DukeException If the given task does not exist."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        int number \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        if (number \u003e ls.size()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            throw new DukeNotSureException(\"This task doesn\u0027t seem to exist? :s\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            Task oldTask \u003d ls.get(number - 1);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            oldTask.checkTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            ui.printResult((\"Nice! I\u0027ve marked this task as done:\" + \"\\n\" + oldTask.getStatus()));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 28
    }
  },
  {
    "path": "src/main/java/seedu/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Runs the Duke program, where user types in commands to add, delete, and mark tasks as done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected TaskList tasklist;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.storage \u003d  new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            this.tasklist \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            this.ui.showLoadingError();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            this.tasklist \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Runs the actual program."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ui.start();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String line \u003d this.ui.getUserCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                this.ui.linePrinter();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                Command c \u003d new Parser().parse(line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                c.execute(this.tasklist, this.ui);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                this.ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                this.ui.showError(\"Can\u0027t read your date man. Put it like this ok? --\u003e 25 Mar 2020 1930\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (! isExit) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    this.ui.linePrinter();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String tasks \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            for (Task t : this.tasklist.getList()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String check \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (t.isComplete()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    check \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    check \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String toAdd \u003d t.getType() + \"*\" + check + \"*\" + t.toString();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String addition \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (t.getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    addition \u003d \"\\n\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    addition \u003d \"*\" + t.getTime().format(FORMATTER) + \"\\n\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                tasks \u003d tasks + toAdd + addition;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            this.storage.save(tasks);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            this.ui.showError(\"Whoops! Some kind of error :/ see here: \" + e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ui.bye();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 2,
      "liuyxxy": 85
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Exception that occurs at the done command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeDoneException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Exception for Duke program."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super((\"ERROR!! \" + message).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/DukeNotSureException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Exception that happens when there is an error in user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeNotSureException extends DukeException{"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeNotSureException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 10
    }
  },
  {
    "path": "src/main/java/seedu/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents an event task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Event(String name, LocalDateTime time, boolean status) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns what the current task is and its status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[E]\" + super.getStatus() + \" (at: \""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\")) + \")\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Gets the deadline of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return DateTime object that represents the deadline."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String that represents the type of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 44
    }
  },
  {
    "path": "src/main/java/seedu/duke/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents the command to find a task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public FindCommand(String[] words) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(words);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Find the tasks that match the given keyword."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String keyword \u003d words[1];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ArrayList\u003cTask\u003e matches \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        for (Task task : ls.getList()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            if (task.getName().contains(keyword)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                matches.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ui.printResult(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        for (Task task : matches) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            ui.printResult(((ls.indexOf(task) + 1) + \". \" + task.getStatus()));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 35
    }
  },
  {
    "path": "src/main/java/seedu/duke/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents the list command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Lists the current tasks in the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ls The current list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param ui The ui that takes of printing output."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void execute(TaskList ls, Ui ui) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ui.printResult(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        for (Task task : ls.getList()) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            ui.printResult(((ls.indexOf(task) + 1) + \". \" + task.getStatus()));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 24
    }
  },
  {
    "path": "src/main/java/seedu/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Takes care of parsing user commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the command that the user has inputted."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param input User command inputted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return Command the user wants"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws DukeException If the command is invalid"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String endCommand \u003d \"bye\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String listCommand \u003d \"list\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String doneCommand \u003d \"done\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String deleteCommand \u003d \"delete\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String toDoCommand \u003d \"todo\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String deadlineCommand \u003d \"deadline\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String eventCommand \u003d \"event\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String findCommand \u003d \"find\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        if (input.equals(listCommand)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } else if (input.equals(endCommand)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String[] words \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            if (words.length \u003c 2) { // some kind of error"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                throw new DukeNotSureException(\"Huh?? What are you trying to do??\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else if (words[0].equals(doneCommand)) { // the case where a task is done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                return new DoneCommand(words);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else if (words[0].equals(deleteCommand)) { // the case where a task is deleted"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                return new DeleteCommand(words);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else if (words[0].equals(findCommand)) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                return new FindCommand(words);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else { // the case where tasks are added"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (words[0].equals(toDoCommand)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    return new AddTodo(words);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else if (words[0].equals(deadlineCommand)) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    return new AddDeadline(words);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else if (words[0].equals(eventCommand)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    return new AddEvent(words);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    throw new DukeNotSureException(\"Man I don\u0027t know what you want? :s\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 51
    }
  },
  {
    "path": "src/main/java/seedu/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Represents a storage space for the program output."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static final String DEFAULT_STORAGE_FILEPATH \u003d \"duke.txt\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public final String path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.path \u003d DEFAULT_STORAGE_FILEPATH;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.path \u003d filepath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Loads the tasks from the textfile so that Duke can access the tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return List containing the tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws IOException When the path is incorrect"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        File f \u003d new File(this.path);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        f.createNewFile();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String[] arr \u003d line.split(\"\\\\*\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String task \u003d arr[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            if (task.equals(\"E\")) { // case where the task is an event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                boolean status \u003d arr[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String todo \u003d arr[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                LocalDateTime deadline \u003d LocalDateTime.parse(arr[3], FORMATTER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                ls.add(new Event(todo, deadline, status));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else if (task.equals(\"T\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                boolean status \u003d arr[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String todo \u003d arr[2];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                ls.add(new ToDo(todo, status));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                boolean status \u003d arr[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String todo \u003d arr[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                LocalDateTime deadline \u003d LocalDateTime.parse(arr[3], FORMATTER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                ls.add(new Deadline(todo, deadline, status));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Writes the tasks from the current running Duke and saves it in a text file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param textToAdd The string version of the task to be added"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @throws IOException When the path is incorrect"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void save(String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(this.path);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        fw.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 77
    }
  },
  {
    "path": "src/main/java/seedu/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents the tasks the user can add to their list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Task(String name, boolean status) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns what the current task is and its status."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String representing the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.isDone? (\"[\\u2713] \" + toString()) : (\"[\\u2718] \" + toString());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Checks if the current task has been marked as done."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void checkTask() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.isDone \u003d !this.isDone;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the current task name."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String representing the name of the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the type of the task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String representing the type of task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the deadline of the task, if any."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return DateTime object that is the deadline of the task, if any."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the state of the current task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return Boolean representing the current state of the task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Returns the name of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String representing the name of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 72
    }
  },
  {
    "path": "src/main/java/seedu/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents the list of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    ArrayList\u003cTask\u003e ls;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ls \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e ls) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ls \u003d ls;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ls.add(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.ls.remove(i);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.ls.size();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public int indexOf(Task t) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.ls.indexOf(t);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.ls.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.ls;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 43
    }
  },
  {
    "path": "src/main/java/seedu/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ToDo(String name, boolean status) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[T]\" + super.getStatus();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 22
    }
  },
  {
    "path": "src/main/java/seedu/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " * Class that represents the interface of Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Prints a line separator."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void linePrinter() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        System.out.println(\"\\n-------------------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Prints the starting introduction of Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        linePrinter();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        printResult(\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                \"What can I do for you?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        linePrinter();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Prints an error message when the text file does not load properly."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        System.out.println(\"Whoops! Some kind of error :/ see here: \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Prints a goodbye message when Duke is shut down."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void bye() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String byeText \u003d \"Running away huh??\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        printResult(byeText);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        linePrinter();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Gets the next line of the user input."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @return String that contains the next line of the user input."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.in.nextLine();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Prints out any errors."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param error String representing the error message."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void showError(String error) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        System.out.println(error);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * Prints out any results from the user commands."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     * @param lines String representing the output from Duke."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void printResult(String lines) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        System.out.println(lines.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 80
    }
  },
  {
    "path": "src/test/java/seedu/duke/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ByeCommandTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void isExit() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        assertEquals(true, new ByeCommand().isExit());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 11
    }
  },
  {
    "path": "src/test/java/seedu/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void parseTest_exceptionThrown() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            assertEquals(0, new Parser().parse(\"delete\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            assertEquals(\"ERROR!! Huh?? What are you trying to do??\".replaceAll(\"(?m)^\", \"\\t\"), e.getMessage());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 18
    }
  },
  {
    "path": "src/test/java/seedu/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "package seedu.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void loadTest() throws IOException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(), new Storage().load());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/Task.java  ../src/main/java/Event.java ../src/main/java/ToDo.java ../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "liuyxxy": 1
    }
  }
]
