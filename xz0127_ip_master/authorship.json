[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private ArrayList\u003cTask\u003e listOfTaskEntered;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.listOfTaskEntered \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //print welcome message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String emoji \u003d Emoji.CHICKEN.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String welcomeMessage \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Hello! I\u0027m ByteMe \" + emoji + emoji + emoji + \"\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    What can I do for you? (Don\u0027t bite me!)\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(welcomeMessage);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //respond to different user input"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void respond() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String instruction \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String msgForList \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    list \\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(msgForList);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (instruction.equals(\"blah\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String msgForBlah \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    blah \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(msgForBlah);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String msgForBye \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    Bye. Hope to see you again soon! \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(msgForBye);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //mark a task as done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void markAsDone(int num) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d listOfTaskEntered.size()) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            listOfTaskEntered.get(num - 1).markAsDone();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String msgForDone \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    Nice! I \u0027ve marked this task as done: \\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"       \" + listOfTaskEntered.get(num - 1).toString() + \"\\n\""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(msgForDone);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    \"OOPS!!! The task is not found. Please try again.\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //count number of tasks"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String countNum() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int num \u003d listOfTaskEntered.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"    Now you have \" + num + \" tasks in the list.\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //add new to-do to the list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addToDo(Todo newToDo) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.listOfTaskEntered.add(newToDo);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForToDo \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + newToDo.toString() + \"\\n\""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.countNum() + \"\\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForToDo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //add new deadline to the list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addDeadline(Deadline newDdl) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.listOfTaskEntered.add(newDdl);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForDdl \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + newDdl.toString() + \"\\n\""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.countNum() + \"\\n\""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForDdl);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //add new event to the list"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addEvent(Event newEvent) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.listOfTaskEntered.add(newEvent);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForEvent \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + newEvent.toString() + \"\\n\""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.countNum() + \"\\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForEvent);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //add new task to the list"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.listOfTaskEntered.add(newTask);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForTask \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Got it. I \u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"      \" + newTask.toString() + \"\\n\""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.countNum() + \"\\n\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForTask);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //check for invalid input"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void check() {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String invalidInput \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Instructions not found, please try again. \\n\""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.countNum() + \"\\n\""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(invalidInput);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //list all the tasks"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForList \u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        msgForList +\u003d \"    Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        for (int i \u003d 0; i \u003c listOfTaskEntered.size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            msgForList +\u003d \"    \" + (i + 1) + \". \""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + listOfTaskEntered.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        msgForList +\u003d \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForList);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //delete a task"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void delete(int num) throws DukeException {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d listOfTaskEntered.size()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String msgForDelete \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    Noted. I\u0027ve removed this task: \\n\""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"       \" + listOfTaskEntered.get(num - 1).toString() + \"\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            listOfTaskEntered.remove(num - 1);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            msgForDelete +\u003d this.countNum() + \"\\n\""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            System.out.println(msgForDelete);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException("
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    \"OOPS!!! The task is not found. Please try again.\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            );"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //send bye message"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForBye \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    Bye. Hope to see you again soon! \\n\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        System.out.println(msgForBye);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //handle to-do "
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void handleTodo(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (instruction.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027todo \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String toDoTitle \u003d instruction.substring(5);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        Todo newTodo \u003d new Todo(toDoTitle);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.addToDo(newTodo);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //handle deadline"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void handleDeadline(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int index \u003d instruction.indexOf(\"/by\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index \u003d\u003d 8) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027event \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        "
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String by \u003d instruction.substring(index + 3);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String description \u003d instruction.substring(9, index);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding description after \u0027deadline \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (by.isBlank()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the deadline cannot be empty. \\n\""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding deadline after \u0027/by \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            this.addDeadline(deadline);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but you have to indicate the deadline. \\n\""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding \u0027/by\u0027 after the description.\" + emoji ;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //handle event"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void handleEvent(String instruction) throws DukeException {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        int index \u003d instruction.indexOf(\"/at\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index \u003d\u003d 5) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding description after \u0027event \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        "
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        if (index !\u003d -1) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String time \u003d instruction.substring(index + 3);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String description \u003d instruction.substring(6, index);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            if (description.isBlank()) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the description cannot be empty. \\n\""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding description after \u0027event \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } else if (time.isBlank()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but the time cannot be empty. \\n\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                        + \"    You can do it by adding time after \u0027/at \u0027.\" + emoji ;"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            this.addEvent(event);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String emoji \u003d Emoji.SMILE.toString();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String exceptionMsg \u003d \"OOPS!!! I\u0027m sorry, but you have to indicate the time of the event. \\n\""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    + \"    You can do it by adding \u0027/at\u0027 after the description.\" + emoji ;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            throw new DukeException(exceptionMsg);"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //handle invalid input"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void invalidInput() throws DukeException {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //store user input and respond to different input"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.printWelcomeMessage();"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            String instruction \u003d sc.nextLine();"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            int len \u003d instruction.length();"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                if (instruction.equals(\"list\")) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.list();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (instruction.equals(\"bye\")) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.stop();"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 5 \u0026\u0026 instruction.substring(0, 5).equals(\"done \")) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    int num \u003d Integer.parseInt(instruction.substring(5));"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.markAsDone(num);"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 7 \u0026\u0026 instruction.substring(0, 7).equals(\"delete \")) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    int num \u003d Integer.parseInt(instruction.substring(7));"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.delete(num);"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 4 \u0026\u0026 instruction.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.handleTodo(instruction);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 8 \u0026\u0026 instruction.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.handleDeadline(instruction);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else if (len \u003e\u003d 5 \u0026\u0026 instruction.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.handleEvent(instruction);"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                    this.invalidInput();"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(new DukeException(\"OOPS!!! I\u0027 m sorry, but you have to enter an integer.\"));"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "xz0127"
        },
        "content": "            }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    //run bot"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        Duke myBot \u003d new Duke();"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        myBot.run();"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 286,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String emoji \u003d Emoji.ERROR.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        String msgForException \u003d \"    ____________________________________________________________\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    \" + emoji + this.getMessage() + \"\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + \"    ____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return msgForException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 14
    }
  },
  {
    "path": "src/main/java/Emoji.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public enum Emoji {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    CHICKEN(0x1F423),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    ERROR(0x1F616),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    SMILE(0x1F609);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private final int code;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    private Emoji(int emoji) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.code \u003d emoji;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return new String(Character.toChars(this.code));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 17
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Task(String taskDescription) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return this.taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xz0127"
        },
        "content": "                + this.getTaskDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 28
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xz0127": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xz0127"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xz0127"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xz0127"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xz0127"
        },
        "content": "todo gym"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xz0127"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xz0127"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xz0127"
        },
        "content": "event consultation /at Wed 11am"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xz0127"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xz0127"
        },
        "content": "event /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xz0127"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xz0127"
        },
        "content": "deadline /by"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xz0127"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xz0127"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xz0127"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xz0127": 16
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xz0127"
        },
        "content": "JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xz0127"
        },
        "content": "export JAVA_TOOL_OPTIONS"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xz0127"
        },
        "content": "# export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xz0127"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "xz0127": 5,
      "-": 38
    }
  }
]
