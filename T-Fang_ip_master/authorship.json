[{"path":"README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"# User Guide for Tachikoma"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"- [User Guide for Tachikoma](#user-guide-for-tachikoma)"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"  * [Features](#features)"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"    + [Add tasks](#add-tasks)"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"    + [List all tasks](#list-all-tasks)"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"    + [Mark as done](#mark-as-done)"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"    + [Delete tasks](#delete-tasks)"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"    + [Undo previous commands](#undo-previous-commands)"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    + [Save data permanently](#save-data-permanently)"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"  * [Usage](#usage)"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    + [`list` - List all tasks](#-list----list-all-tasks)"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"    + [`todo` - Add a Todo task](#-todo----add-a-todo-task)"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    + [`deadline` - Add a Deadline task](#-deadline----add-a-deadline-task)"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    + [`event` - Add a Event task](#-event----add-a-event-task)"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    + [`done` - Mark a task as Done](#-done----mark-a-task-as-done)"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    + [`delete` - Delete a task](#-delete----delete-a-task)"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    + [`find` - Find tasks using keywords](#-find----find-tasks-using-keywords)"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    + [`undo` - Undo previous operations](#-undo----undo-previous-operations)"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    + [`bye` - Quit the app](#-bye----quit-the-app)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    "},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"## Features "},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"### Add tasks"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"Tachikoma can add three types of tasks with their description to your task list:"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"* `Todo`: a general type of task without an associated date"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"* `Deadline`: tasks with duedates"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"* `Event`: tasks with dates specifying when the events take place."},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"### List all tasks"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"Tachikoma can show your task list, which contains the tasks you have added before."},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"### Mark as done"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"Tachikoma can mark a task as done, after which the task will be displayed with a checkmark in front of its description."},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"### Delete tasks"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"Tachikoma can delete a task from the task list if you feel that it is no longer necessary to have it on the list."},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"### Undo previous commands"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"In case you accidentally delete an important task, Tachikoma get you covered! You can use undo command to: "},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"* recover tasks that you have accidentally deleted"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"* uncheck the task that you have just marked as done"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"* remove the newly added task if you realized that the information of it is incorrect."},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"### Save data permanently"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"Tachikoma will automatically store the task list to a local txt file after each operations. Therefore, next time you open Tachikoma, all tasks that you have added previously will be reloaded from the disk."},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"## Usage"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"### `list` - List all tasks"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"Show all the tasks you have previously entered with their:"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"1. unique index"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"2. type (`Todo`, `Deadline`, `Event`)"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"3. status (checked or not), "},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"4. description"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"5. time (if the task is an deadline or event)"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"`list`"},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"Here are the tasks in your list:"},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":" 1. [D][✓] CS3230 Assignment (by: Sep 19 2020)"},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":" 2. [E][✘] tP meeting (at: Sep 18 2020)"},{"lineNumber":76,"author":{"gitId":"T-Fang"},"content":" 3. [T][✘] wash clothes"},{"lineNumber":77,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":78,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":79,"author":{"gitId":"T-Fang"},"content":"### `todo` - Add a Todo task"},{"lineNumber":80,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":81,"author":{"gitId":"T-Fang"},"content":"Add a new todo task with the given description to the task list."},{"lineNumber":82,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":83,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":84,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":85,"author":{"gitId":"T-Fang"},"content":"`todo [description]`"},{"lineNumber":86,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":87,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":88,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":89,"author":{"gitId":"T-Fang"},"content":"`todo wash clothes`"},{"lineNumber":90,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":91,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":92,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":93,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":94,"author":{"gitId":"T-Fang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":95,"author":{"gitId":"T-Fang"},"content":"    [T][✘] wash clothes"},{"lineNumber":96,"author":{"gitId":"T-Fang"},"content":"Now you have 4 tasks in the list."},{"lineNumber":97,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":98,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":99,"author":{"gitId":"T-Fang"},"content":"### `deadline` - Add a Deadline task"},{"lineNumber":100,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":101,"author":{"gitId":"T-Fang"},"content":"Add a new deadline task with the given description and duedate to the task list."},{"lineNumber":102,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":103,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":104,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":105,"author":{"gitId":"T-Fang"},"content":"`deadline [description] /by [YYYY-MM-dd]`"},{"lineNumber":106,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":107,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":108,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":109,"author":{"gitId":"T-Fang"},"content":"`deadline CS3230 Assignment /by 2020-09-19`"},{"lineNumber":110,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":111,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":113,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":114,"author":{"gitId":"T-Fang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":115,"author":{"gitId":"T-Fang"},"content":"    [D][✘] CS3230 Assignment (by: Sep 19 2020)"},{"lineNumber":116,"author":{"gitId":"T-Fang"},"content":"Now you have 4 tasks in the list."},{"lineNumber":117,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":118,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":119,"author":{"gitId":"T-Fang"},"content":"### `event` - Add a Event task"},{"lineNumber":120,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":121,"author":{"gitId":"T-Fang"},"content":"Add a new event task with the given description and date to the task list."},{"lineNumber":122,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":123,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":124,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":125,"author":{"gitId":"T-Fang"},"content":"`event [description] /at [YYYY-MM-dd]`"},{"lineNumber":126,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":127,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":128,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":129,"author":{"gitId":"T-Fang"},"content":"`event tP meeting /at 2020-09-18`"},{"lineNumber":130,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":131,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":132,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":133,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":134,"author":{"gitId":"T-Fang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":135,"author":{"gitId":"T-Fang"},"content":"    [E][✘] tP meeting (at: Sep 18 2020)"},{"lineNumber":136,"author":{"gitId":"T-Fang"},"content":"Now you have 4 tasks in the list."},{"lineNumber":137,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":138,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":139,"author":{"gitId":"T-Fang"},"content":"### `done` - Mark a task as Done"},{"lineNumber":140,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":141,"author":{"gitId":"T-Fang"},"content":"Mark the task with the given index as done."},{"lineNumber":142,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":143,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":144,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":145,"author":{"gitId":"T-Fang"},"content":"`done [index]`  (note that the `index` must lies between 1 and n (inclusive), where n is the total number of tasks)"},{"lineNumber":146,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":147,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":148,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":149,"author":{"gitId":"T-Fang"},"content":"`done 3`"},{"lineNumber":150,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":151,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":152,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":153,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":154,"author":{"gitId":"T-Fang"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":155,"author":{"gitId":"T-Fang"},"content":"    [T][✓] wash clothes"},{"lineNumber":156,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":157,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":158,"author":{"gitId":"T-Fang"},"content":"### `delete` - Delete a task"},{"lineNumber":159,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":160,"author":{"gitId":"T-Fang"},"content":"Remove the task with the given index from the task list"},{"lineNumber":161,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":162,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":163,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":164,"author":{"gitId":"T-Fang"},"content":"`delete [index]` (note that the `index` must lies between 1 and n (inclusive), where n is the total number of tasks)"},{"lineNumber":165,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":166,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":167,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":168,"author":{"gitId":"T-Fang"},"content":"`delete 3`"},{"lineNumber":169,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":170,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"-"},"content":"```"},{"lineNumber":173,"author":{"gitId":"T-Fang"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":174,"author":{"gitId":"T-Fang"},"content":"    [T][✓] wash clothes"},{"lineNumber":175,"author":{"gitId":"T-Fang"},"content":"Now you have 2 tasks in the list."},{"lineNumber":176,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":177,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":178,"author":{"gitId":"T-Fang"},"content":"### `find` - Find tasks using keywords"},{"lineNumber":179,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":180,"author":{"gitId":"T-Fang"},"content":"Find all tasks whose descriptions contains the given keywords"},{"lineNumber":181,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":182,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":183,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":184,"author":{"gitId":"T-Fang"},"content":"`find [keywords]`"},{"lineNumber":185,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":186,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":187,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":188,"author":{"gitId":"T-Fang"},"content":"`find meeting`"},{"lineNumber":189,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":190,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":191,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":192,"author":{"gitId":"-"},"content":"```"},{"lineNumber":193,"author":{"gitId":"T-Fang"},"content":"Here are the matching tasks in your list:"},{"lineNumber":194,"author":{"gitId":"T-Fang"},"content":" 1. [E][✘] tP meeting (at: Sep 18 2020)"},{"lineNumber":195,"author":{"gitId":"T-Fang"},"content":" 2. [T][✘] create zoom link for tP meeting"},{"lineNumber":196,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":197,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":198,"author":{"gitId":"T-Fang"},"content":"### `undo` - Undo previous operations"},{"lineNumber":199,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":200,"author":{"gitId":"T-Fang"},"content":"Undo previous commands, specifically:"},{"lineNumber":201,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":202,"author":{"gitId":"T-Fang"},"content":"* re-add tasks that you have just deleted"},{"lineNumber":203,"author":{"gitId":"T-Fang"},"content":"* uncheck the task that you have just marked as done"},{"lineNumber":204,"author":{"gitId":"T-Fang"},"content":"* remove the newly added task."},{"lineNumber":205,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":206,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":207,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":208,"author":{"gitId":"T-Fang"},"content":"`undo`"},{"lineNumber":209,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":210,"author":{"gitId":"T-Fang"},"content":"Expected outcome 1:"},{"lineNumber":211,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":212,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":213,"author":{"gitId":"T-Fang"},"content":"OK! I\u0027ve re-added the task you just deleted:"},{"lineNumber":214,"author":{"gitId":"T-Fang"},"content":"    [T][✓] create zoom link for tP meeting"},{"lineNumber":215,"author":{"gitId":"T-Fang"},"content":"Now you have 3 tasks in the list."},{"lineNumber":216,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":217,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":218,"author":{"gitId":"T-Fang"},"content":"Expected outcome 2:"},{"lineNumber":219,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":220,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":221,"author":{"gitId":"T-Fang"},"content":"OK! I\u0027ve unchecked the task:"},{"lineNumber":222,"author":{"gitId":"T-Fang"},"content":"    [T][✘] create zoom link for tP meeting"},{"lineNumber":223,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":224,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":225,"author":{"gitId":"T-Fang"},"content":"Expected outcome 3:"},{"lineNumber":226,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":227,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":228,"author":{"gitId":"T-Fang"},"content":"OK! I\u0027ve removed the task you just added now:"},{"lineNumber":229,"author":{"gitId":"T-Fang"},"content":"    [T][✘] create zoom link for tP meeting"},{"lineNumber":230,"author":{"gitId":"T-Fang"},"content":"Now you have 2 tasks in the list."},{"lineNumber":231,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":232,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":233,"author":{"gitId":"T-Fang"},"content":"### `bye` - Quit the app"},{"lineNumber":234,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":235,"author":{"gitId":"T-Fang"},"content":"Exit the app."},{"lineNumber":236,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":237,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":238,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":239,"author":{"gitId":"T-Fang"},"content":"`bye`"},{"lineNumber":240,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":241,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":242,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":243,"author":{"gitId":"T-Fang"},"content":"`Bye. Hope to see you again soon!`"},{"lineNumber":244,"author":{"gitId":"T-Fang"},"content":""}],"authorContributionMap":{"T-Fang":238,"-":6}},{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    String javaFxVersion \u003d \u002711.0.1\u0027"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"    mainClassName \u003d \"duke.Duke\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"    archiveBaseName \u003d \"Tachikoma\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"    toolVersion \u003d \u00278.32\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"T-Fang":18,"-":43}},{"path":"data/tasks.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"D | 1 | CS3230 Assignment | 2020-09-19"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":"E | 0 | tP meeting | 2020-09-18"}],"authorContributionMap":{"T-Fang":2}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"# User Guide for Tachikoma"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"- [User Guide for Tachikoma](#user-guide-for-tachikoma)"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"  * [Features](#features)"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"    + [Add tasks](#add-tasks)"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"    + [List all tasks](#list-all-tasks)"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"    + [Mark as done](#mark-as-done)"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"    + [Delete tasks](#delete-tasks)"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"    + [Undo previous commands](#undo-previous-commands)"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    + [Save data permanently](#save-data-permanently)"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"  * [Usage](#usage)"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    + [`list` - List all tasks](#-list----list-all-tasks)"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"    + [`todo` - Add a Todo task](#-todo----add-a-todo-task)"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    + [`deadline` - Add a Deadline task](#-deadline----add-a-deadline-task)"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    + [`event` - Add a Event task](#-event----add-a-event-task)"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    + [`done` - Mark a task as Done](#-done----mark-a-task-as-done)"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    + [`delete` - Delete a task](#-delete----delete-a-task)"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    + [`find` - Find tasks using keywords](#-find----find-tasks-using-keywords)"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    + [`undo` - Undo previous operations](#-undo----undo-previous-operations)"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    + [`bye` - Quit the app](#-bye----quit-the-app)"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    "},{"lineNumber":22,"author":{"gitId":"-"},"content":"## Features "},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"### Add tasks"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"Tachikoma can add three types of tasks with their description to your task list:"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"* `Todo`: a general type of task without an associated date"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"* `Deadline`: tasks with duedates"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"* `Event`: tasks with dates specifying when the events take place."},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"### List all tasks"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"Tachikoma can show your task list, which contains the tasks you have added before."},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"### Mark as done"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"Tachikoma can mark a task as done, after which the task will be displayed with a checkmark in front of its description."},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"### Delete tasks"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"Tachikoma can delete a task from the task list if you feel that it is no longer necessary to have it on the list."},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"### Undo previous commands"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"In case you accidentally delete an important task, Tachikoma get you covered! You can use undo command to: "},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"* recover tasks that you have accidentally deleted"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"* uncheck the task that you have just marked as done"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"* remove the newly added task if you realized that the information of it is incorrect."},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"### Save data permanently"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"Tachikoma will automatically store the task list to a local txt file after each operations. Therefore, next time you open Tachikoma, all tasks that you have added previously will be reloaded from the disk."},{"lineNumber":53,"author":{"gitId":"-"},"content":""},{"lineNumber":54,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":55,"author":{"gitId":"-"},"content":""},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"### `list` - List all tasks"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"Show all the tasks you have previously entered with their:"},{"lineNumber":59,"author":{"gitId":"-"},"content":""},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"1. unique index"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"2. type (`Todo`, `Deadline`, `Event`)"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"3. status (checked or not), "},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"4. description"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"5. time (if the task is an deadline or event)"},{"lineNumber":65,"author":{"gitId":"-"},"content":""},{"lineNumber":66,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":67,"author":{"gitId":"-"},"content":""},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"`list`"},{"lineNumber":69,"author":{"gitId":"-"},"content":""},{"lineNumber":70,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":71,"author":{"gitId":"-"},"content":""},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"Here are the tasks in your list:"},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":" 1. [D][✓] CS3230 Assignment (by: Sep 19 2020)"},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":" 2. [E][✘] tP meeting (at: Sep 18 2020)"},{"lineNumber":76,"author":{"gitId":"T-Fang"},"content":" 3. [T][✘] wash clothes"},{"lineNumber":77,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":78,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":79,"author":{"gitId":"T-Fang"},"content":"### `todo` - Add a Todo task"},{"lineNumber":80,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":81,"author":{"gitId":"T-Fang"},"content":"Add a new todo task with the given description to the task list."},{"lineNumber":82,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":83,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":84,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":85,"author":{"gitId":"T-Fang"},"content":"`todo [description]`"},{"lineNumber":86,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":87,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":88,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":89,"author":{"gitId":"T-Fang"},"content":"`todo wash clothes`"},{"lineNumber":90,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":91,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":92,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":93,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":94,"author":{"gitId":"T-Fang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":95,"author":{"gitId":"T-Fang"},"content":"    [T][✘] wash clothes"},{"lineNumber":96,"author":{"gitId":"T-Fang"},"content":"Now you have 4 tasks in the list."},{"lineNumber":97,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":98,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":99,"author":{"gitId":"T-Fang"},"content":"### `deadline` - Add a Deadline task"},{"lineNumber":100,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":101,"author":{"gitId":"T-Fang"},"content":"Add a new deadline task with the given description and duedate to the task list."},{"lineNumber":102,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":103,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":104,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":105,"author":{"gitId":"T-Fang"},"content":"`deadline [description] /by [YYYY-MM-dd]`"},{"lineNumber":106,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":107,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":108,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":109,"author":{"gitId":"T-Fang"},"content":"`deadline CS3230 Assignment /by 2020-09-19`"},{"lineNumber":110,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":111,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":112,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":113,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":114,"author":{"gitId":"T-Fang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":115,"author":{"gitId":"T-Fang"},"content":"    [D][✘] CS3230 Assignment (by: Sep 19 2020)"},{"lineNumber":116,"author":{"gitId":"T-Fang"},"content":"Now you have 4 tasks in the list."},{"lineNumber":117,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":118,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":119,"author":{"gitId":"T-Fang"},"content":"### `event` - Add a Event task"},{"lineNumber":120,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":121,"author":{"gitId":"T-Fang"},"content":"Add a new event task with the given description and date to the task list."},{"lineNumber":122,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":123,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":124,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":125,"author":{"gitId":"T-Fang"},"content":"`event [description] /at [YYYY-MM-dd]`"},{"lineNumber":126,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":127,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":128,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":129,"author":{"gitId":"T-Fang"},"content":"`event tP meeting /at 2020-09-18`"},{"lineNumber":130,"author":{"gitId":"-"},"content":""},{"lineNumber":131,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":132,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":133,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":134,"author":{"gitId":"T-Fang"},"content":"Got it. I\u0027ve added this task:"},{"lineNumber":135,"author":{"gitId":"T-Fang"},"content":"    [E][✘] tP meeting (at: Sep 18 2020)"},{"lineNumber":136,"author":{"gitId":"T-Fang"},"content":"Now you have 4 tasks in the list."},{"lineNumber":137,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":138,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":139,"author":{"gitId":"T-Fang"},"content":"### `done` - Mark a task as Done"},{"lineNumber":140,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":141,"author":{"gitId":"T-Fang"},"content":"Mark the task with the given index as done."},{"lineNumber":142,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":143,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":144,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":145,"author":{"gitId":"T-Fang"},"content":"`done [index]`  (note that the `index` must lies between 1 and n (inclusive), where n is the total number of tasks)"},{"lineNumber":146,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":147,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":148,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":149,"author":{"gitId":"T-Fang"},"content":"`done 3`"},{"lineNumber":150,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":151,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":152,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":153,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":154,"author":{"gitId":"T-Fang"},"content":"Nice! I\u0027ve marked this task as done:"},{"lineNumber":155,"author":{"gitId":"T-Fang"},"content":"    [T][✓] wash clothes"},{"lineNumber":156,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":157,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":158,"author":{"gitId":"T-Fang"},"content":"### `delete` - Delete a task"},{"lineNumber":159,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":160,"author":{"gitId":"T-Fang"},"content":"Remove the task with the given index from the task list"},{"lineNumber":161,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":162,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":163,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":164,"author":{"gitId":"T-Fang"},"content":"`delete [index]` (note that the `index` must lies between 1 and n (inclusive), where n is the total number of tasks)"},{"lineNumber":165,"author":{"gitId":"-"},"content":""},{"lineNumber":166,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":167,"author":{"gitId":"-"},"content":""},{"lineNumber":168,"author":{"gitId":"T-Fang"},"content":"`delete 3`"},{"lineNumber":169,"author":{"gitId":"-"},"content":""},{"lineNumber":170,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":171,"author":{"gitId":"-"},"content":""},{"lineNumber":172,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":173,"author":{"gitId":"T-Fang"},"content":"Noted. I\u0027ve removed this task:"},{"lineNumber":174,"author":{"gitId":"T-Fang"},"content":"    [T][✓] wash clothes"},{"lineNumber":175,"author":{"gitId":"T-Fang"},"content":"Now you have 2 tasks in the list."},{"lineNumber":176,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":177,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":178,"author":{"gitId":"T-Fang"},"content":"### `find` - Find tasks using keywords"},{"lineNumber":179,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":180,"author":{"gitId":"T-Fang"},"content":"Find all tasks whose descriptions contains the given keywords"},{"lineNumber":181,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":182,"author":{"gitId":"T-Fang"},"content":"Format:"},{"lineNumber":183,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":184,"author":{"gitId":"T-Fang"},"content":"`find [keywords]`"},{"lineNumber":185,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":186,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":187,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":188,"author":{"gitId":"T-Fang"},"content":"`find meeting`"},{"lineNumber":189,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":190,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":191,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":192,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":193,"author":{"gitId":"T-Fang"},"content":"Here are the matching tasks in your list:"},{"lineNumber":194,"author":{"gitId":"T-Fang"},"content":" 1. [E][✘] tP meeting (at: Sep 18 2020)"},{"lineNumber":195,"author":{"gitId":"T-Fang"},"content":" 2. [T][✘] create zoom link for tP meeting"},{"lineNumber":196,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":197,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":198,"author":{"gitId":"T-Fang"},"content":"### `undo` - Undo previous operations"},{"lineNumber":199,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":200,"author":{"gitId":"T-Fang"},"content":"Undo previous commands, specifically:"},{"lineNumber":201,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":202,"author":{"gitId":"T-Fang"},"content":"* re-add tasks that you have just deleted"},{"lineNumber":203,"author":{"gitId":"T-Fang"},"content":"* uncheck the task that you have just marked as done"},{"lineNumber":204,"author":{"gitId":"T-Fang"},"content":"* remove the newly added task."},{"lineNumber":205,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":206,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":207,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":208,"author":{"gitId":"T-Fang"},"content":"`undo`"},{"lineNumber":209,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":210,"author":{"gitId":"T-Fang"},"content":"Expected outcome 1:"},{"lineNumber":211,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":212,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":213,"author":{"gitId":"T-Fang"},"content":"OK! I\u0027ve re-added the task you just deleted:"},{"lineNumber":214,"author":{"gitId":"T-Fang"},"content":"    [T][✓] create zoom link for tP meeting"},{"lineNumber":215,"author":{"gitId":"T-Fang"},"content":"Now you have 3 tasks in the list."},{"lineNumber":216,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":217,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":218,"author":{"gitId":"T-Fang"},"content":"Expected outcome 2:"},{"lineNumber":219,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":220,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":221,"author":{"gitId":"T-Fang"},"content":"OK! I\u0027ve unchecked the task:"},{"lineNumber":222,"author":{"gitId":"T-Fang"},"content":"    [T][✘] create zoom link for tP meeting"},{"lineNumber":223,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":224,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":225,"author":{"gitId":"T-Fang"},"content":"Expected outcome 3:"},{"lineNumber":226,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":227,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":228,"author":{"gitId":"T-Fang"},"content":"OK! I\u0027ve removed the task you just added now:"},{"lineNumber":229,"author":{"gitId":"T-Fang"},"content":"    [T][✘] create zoom link for tP meeting"},{"lineNumber":230,"author":{"gitId":"T-Fang"},"content":"Now you have 2 tasks in the list."},{"lineNumber":231,"author":{"gitId":"T-Fang"},"content":"```"},{"lineNumber":232,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":233,"author":{"gitId":"T-Fang"},"content":"### `bye` - Quit the app"},{"lineNumber":234,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":235,"author":{"gitId":"T-Fang"},"content":"Exit the app."},{"lineNumber":236,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":237,"author":{"gitId":"T-Fang"},"content":"Example of usage: "},{"lineNumber":238,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":239,"author":{"gitId":"T-Fang"},"content":"`bye`"},{"lineNumber":240,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":241,"author":{"gitId":"T-Fang"},"content":"Expected outcome:"},{"lineNumber":242,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":243,"author":{"gitId":"T-Fang"},"content":"`Bye. Hope to see you again soon!`"},{"lineNumber":244,"author":{"gitId":"T-Fang"},"content":""}],"authorContributionMap":{"T-Fang":223,"-":21}},{"path":"src/main/java/duke/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.command.ReversibleCommand;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Parser;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":" * Chat bot that can manage your tasks!"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":" *"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":" * @author Tian Fang"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":" * @version v0.2"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":" * @since 2020-08-18"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":20,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    private static final String FILE_PATH \u003d \"data/tasks.txt\";"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    private TaskList taskList;"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    private Storage storage;"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    private Ui ui;"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    private LinkedList\u003cReversibleCommand\u003e reversibleCommands;"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     * Initializes Duke with the given file path."},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    public Duke() {"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"        ui \u003d new Ui();"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        storage \u003d new Storage(FILE_PATH);"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"        reversibleCommands \u003d new LinkedList\u003c\u003e();"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"            taskList \u003d new TaskList(storage.readList());"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"        } catch (DukeException e) {"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"            ui.showLoadingError(e);"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"            taskList \u003d new TaskList();"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     * main method of Duke."},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"    public static void main(String[] args) {"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"        new Duke().run();"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"     * Runs the Duke."},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"    public void run() {"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"        ui.welcome();"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        boolean isExit \u003d false;"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"        while (!isExit) {"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"            try {"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"                String input \u003d ui.getInput();"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"                Command c \u003d Parser.parse(input);"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"                c.execute(taskList, ui, storage, reversibleCommands);"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"                isExit \u003d c.isExit();"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"            } catch (DukeException e) {"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"                ui.giveResponse(e.getMessage());"},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"     * Gives response to the given input."},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"     * @param input the given input."},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"     * @return      corresponding response."},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"    public String getResponse(String input) {"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":"            Command c \u003d Parser.parse(input);"},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":"            return c.execute(taskList, ui, storage, reversibleCommands);"},{"lineNumber":76,"author":{"gitId":"T-Fang"},"content":"        } catch (DukeException e) {"},{"lineNumber":77,"author":{"gitId":"T-Fang"},"content":"            return ui.giveResponse(e.getMessage());"},{"lineNumber":78,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"T-Fang":78,"-":2}},{"path":"src/main/java/duke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import duke.gui.Main;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import javafx.application.Application;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"public class Launcher {"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    public static void main(String[] args) {"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"}"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":""}],"authorContributionMap":{"T-Fang":14}},{"path":"src/main/java/duke/command/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" * Command that adds a task to the task list and storage."},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"public class AddCommand implements ReversibleCommand {"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    private final Task newTask;"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     * Initializes an AddCommand with the given new Task."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     * @param newTask the new task given."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    public AddCommand(Task newTask) {"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"        this.newTask \u003d newTask;"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     * Returns whether this is an exit command."},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     * @return false at all times."},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"     * Executes the AddCommand to add the new task to the given task list and storage,"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"     * and print the response using the given ui."},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"     * @param taskList the task list to be updated."},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"     * @param ui       the ui that handles inputs and outputs."},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"     * @param storage  the permanent storage of task list."},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"     * @param reversibleCommands"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if the task list cannot be saved to the storage."},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"        taskList.add(newTask);"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"        storage.saveList(taskList);"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        reversibleCommands.add(this);"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    Got it. I\u0027ve added this task:\\n        \""},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"            + newTask"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"            + taskList.sizeDescription());"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"    public String undo(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"        Task removed \u003d taskList.removeLast();"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"        storage.saveList(taskList);"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    OK! I\u0027ve removed the task you just added now:\\n        \""},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"            + removed"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"            + taskList.sizeDescription());"},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":64}},{"path":"src/main/java/duke/command/ByeCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":" * Command that closes Duke."},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"public class ByeCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"     * Returns whether this is an exit command."},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     * @return true at all times."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"        return true;"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"     * Says bye and closes Duke."},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    Bye. Hope to see you again soon!\");"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":32}},{"path":"src/main/java/duke/command/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":" * Interface for all command classes."},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"public interface Command {"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    boolean isExit();"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"                   LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException;"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":18}},{"path":"src/main/java/duke/command/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import java.util.Optional;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":" * Command that delete a task in task list and storage."},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"public class DeleteCommand implements ReversibleCommand {"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    private final int index;"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    private Optional\u003cTask\u003e deletedTask \u003d Optional.empty();"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     * Initializes an DeleteCommand with the given index."},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     * @param index the index given."},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    public DeleteCommand(int index) {"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"        this.index \u003d index;"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     * Returns whether this is an exit command."},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     * @return false at all times."},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"        return false;"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"     * Executes the DeleteCommand to delete the task in the given task list and storage,"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"     * and print the response using the given ui."},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"     * @param taskList the task list to be updated."},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"     * @param ui       the ui that handles inputs and outputs."},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     * @param storage  the permanent storage of task list."},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     * @param reversibleCommands"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if the user has entered an illegal index,"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"     *                       or the task list cannot be saved to the storage."},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The task index should be an index on the list!\");"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        Task task \u003d taskList.get(index);"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"        taskList.remove(index);"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"        storage.saveList(taskList);"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"        this.deletedTask \u003d Optional.of(task);"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"        reversibleCommands.add(this);"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    Noted. I\u0027ve removed this task:\\n        \""},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"            + task"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"            + taskList.sizeDescription());"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"    public String undo(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"        Task taskToReAdd \u003d deletedTask.orElseThrow(() -\u003e new DukeException(\"I cannot restore the deleted task.\"));"},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":"        taskList.add(index, taskToReAdd);"},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"        storage.saveList(taskList);"},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    OK! I\u0027ve re-added the task you just deleted:\\n        \""},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"            + taskToReAdd"},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"            + taskList.sizeDescription());"},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":73}},{"path":"src/main/java/duke/command/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" * Command that complete a task in task list and storage."},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"public class DoneCommand implements ReversibleCommand {"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    private final int index;"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     * Initializes an DoneCommand with the given index."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     * @param index the index given."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    public DoneCommand(int index) {"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"        this.index \u003d index;"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     * Returns whether this is an exit command."},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     * @return false at all times."},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"        return false;"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"     * Executes the DoneCommand to mark the task as done in the given task list and storage,"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"     * and print the response using the given ui."},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"     * @param taskList the task list to be updated."},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"     * @param ui       the ui that handles inputs and outputs."},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"     * @param storage  the permanent storage of task list."},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     * @param reversibleCommands"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if the user has entered an illegal index,"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"     *                       or the task list cannot be saved to the storage."},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The task index should be an index on the list!\");"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"        Task task \u003d taskList.get(index);"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        taskList.markAsDone(index);"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"        storage.saveList(taskList);"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"        reversibleCommands.add(this);"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    Nice! I\u0027ve marked this task as done:\\n        \" + task);"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"    public String undo(TaskList taskList, Ui ui, Storage storage) throws DukeException {"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"        taskList.markAsUndone(index);"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"        Task task \u003d taskList.get(index);"},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"        storage.saveList(taskList);"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"        return ui.giveResponse(\"    OK! I\u0027ve unchecked the task:\\n        \" + task);"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":66}},{"path":"src/main/java/duke/command/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" * The command to find tasks that contains the search keyword."},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"public class FindCommand implements Command {"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    private final String keyword;"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     * Initializes a FindCommand with the given search keyword."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     * @param keyword the search keyword."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     * Return whether this command is the exit command."},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     * @return false at all times."},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        return false;"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"     * Executes the command to search tasks that contains the keyword."},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"     *  @param taskList the task list given."},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"     * @param ui       the ui object that handles inputs and outputs."},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"     * @param reversibleCommands"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"        TaskList results \u003d new TaskList();"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"        for (Task task : taskList.getList()) {"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"            if (task.getDescription().contains(keyword)) {"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"                results.add(task);"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        if (results.size() \u003d\u003d 0) {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"            return ui.giveResponse(\"    I cannot find any task containing \" + keyword + \" !\");"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"            return ui.displayList(results, \"Here are the matching tasks in your list:\");"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":56}},{"path":"src/main/java/duke/command/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":" * Command that prints out the task list."},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"public class ListCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"     * Returns whether this is an exit command."},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     * @return false at all times."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"        return false;"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"     * Prints out the task list."},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"        return ui.displayList(taskList, \"Here are the tasks in your list:\");"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":33}},{"path":"src/main/java/duke/command/ReversibleCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":" * Commands that can be \"undoed\""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"public interface ReversibleCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"     * Undoes the command."},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"     * @param taskList  task list to perform actions on."},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"     * @param ui        ui object to handle IO."},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"     * @param storage   permanent storage of data."},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"     * @return  the response of this operation."},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException    if the task list cannot be saved to the storage."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    String undo (TaskList taskList, Ui ui, Storage storage) throws DukeException;"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":21}},{"path":"src/main/java/duke/command/UndoCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.command;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.component.Storage;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.TaskList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":" * Command that undo previous reversible command."},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"public class UndoCommand implements Command {"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    public boolean isExit() {"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"        return false;"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     * Undoes a previously executed command."},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     * @param taskList  task list to perform actions on."},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"     * @param ui        ui object to handle IO."},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"     * @param storage   permanent storage of data."},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"     * @param reversibleCommands    the list of commands that can be \"undoed\"."},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"     * @return  the response of this undo operation."},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException    if there are no more steps to undo."},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    public String execute(TaskList taskList, Ui ui, Storage storage,"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"                          LinkedList\u003cReversibleCommand\u003e reversibleCommands) throws DukeException {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        ReversibleCommand latestCommand \u003d reversibleCommands.pollLast();"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"        if (latestCommand \u003d\u003d null) {"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"There are no more steps I can undo.\");"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"        String response \u003d latestCommand.undo(taskList, ui, storage);"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"        return response;"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":40}},{"path":"src/main/java/duke/component/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.component;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":" * The exception to be thrown when Duke encounters a problem."},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"    public DukeException() {"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"        super(\"    \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"    public DukeException(String msg) {"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"        super(\"    \\u2639 OOPS!!! \" + msg);"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":14}},{"path":"src/main/java/duke/component/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.component;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import duke.command.AddCommand;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import duke.command.ByeCommand;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.command.Command;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import duke.command.DeleteCommand;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.command.DoneCommand;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import duke.command.FindCommand;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import duke.command.ListCommand;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import duke.command.UndoCommand;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"import duke.task.Deadline;"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"import duke.task.Event;"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"import duke.task.Todo;"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":" * Interpreter of user\u0027s input."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"public class Parser {"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"     * Parses an input string and gives the corresponding command."},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"     * @param input the input typed in by the user."},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"     * @return the command that corresponds to the input."},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if the input is invalid or illegal."},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"    public static Command parse(String input) throws DukeException {"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"            return new ByeCommand();"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"        } else if (input.equals(\"list\")) {"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"            return new ListCommand();"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"        } else if (input.equals(\"undo\")) {"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"            return new UndoCommand();"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"        } else if (input.startsWith(\"find\")) {"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"            return generateFindCommand(input);"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"        } else if (input.startsWith(\"done\")) {"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"            return generateDoneCommand(input);"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"        } else if (input.startsWith(\"delete\")) {"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"            return generateDeleteCommand(input);"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"        } else {"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"            Task newTask;"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"            if (input.startsWith(\"todo\")) {"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"                newTask \u003d generateTodo(input);"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"            } else if (input.startsWith(\"deadline\")) {"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"                newTask \u003d generateDeadline(input);"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"            } else if (input.startsWith(\"event\")) {"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"                newTask \u003d generateEvent(input);"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"            } else {"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"                throw new DukeException();"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"            }"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"            return new AddCommand(newTask);"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"    private static Task generateEvent(String input) throws DukeException {"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"        Task newTask;"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"        if (input.length() \u003c\u003d 6) {"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The description of a event cannot be empty.\");"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"        String description \u003d input.substring(6);"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"        int index \u003d description.indexOf(\"/at\");"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"        if (index \u003d\u003d -1 || description.length() - index \u003c\u003d 4) {"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"I don\u0027t know when the event take place\");"},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"        String at \u003d description.substring(index + 4);"},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"        description \u003d description.substring(0, index - 1);"},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"        newTask \u003d new Event(description, at);"},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"        return newTask;"},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":"    private static Task generateDeadline(String input) throws DukeException {"},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":"        Task newTask;"},{"lineNumber":76,"author":{"gitId":"T-Fang"},"content":"        if (input.length() \u003c\u003d 9) {"},{"lineNumber":77,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The description of a deadline cannot be empty.\");"},{"lineNumber":78,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":79,"author":{"gitId":"T-Fang"},"content":"        String description \u003d input.substring(9);"},{"lineNumber":80,"author":{"gitId":"T-Fang"},"content":"        int index \u003d description.indexOf(\"/by\");"},{"lineNumber":81,"author":{"gitId":"T-Fang"},"content":"        if (index \u003d\u003d -1 || description.length() - index \u003c\u003d 4) {"},{"lineNumber":82,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"I don\u0027t know when the deadline is\");"},{"lineNumber":83,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"T-Fang"},"content":"        String by \u003d description.substring(index + 4);"},{"lineNumber":85,"author":{"gitId":"T-Fang"},"content":"        description \u003d description.substring(0, index - 1);"},{"lineNumber":86,"author":{"gitId":"T-Fang"},"content":"        newTask \u003d new Deadline(description, by);"},{"lineNumber":87,"author":{"gitId":"T-Fang"},"content":"        return newTask;"},{"lineNumber":88,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":90,"author":{"gitId":"T-Fang"},"content":"    private static Task generateTodo(String input) throws DukeException {"},{"lineNumber":91,"author":{"gitId":"T-Fang"},"content":"        Task newTask;"},{"lineNumber":92,"author":{"gitId":"T-Fang"},"content":"        if (input.length() \u003c\u003d 5) {"},{"lineNumber":93,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The description of a todo cannot be empty.\");"},{"lineNumber":94,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":95,"author":{"gitId":"T-Fang"},"content":"        newTask \u003d new Todo(input.substring(5));"},{"lineNumber":96,"author":{"gitId":"T-Fang"},"content":"        return newTask;"},{"lineNumber":97,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":98,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":99,"author":{"gitId":"T-Fang"},"content":"    private static DeleteCommand generateDeleteCommand(String input) throws DukeException {"},{"lineNumber":100,"author":{"gitId":"T-Fang"},"content":"        if (input.length() \u003c\u003d 7) {"},{"lineNumber":101,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"I don\u0027t know which task should be deleted.\");"},{"lineNumber":102,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":103,"author":{"gitId":"T-Fang"},"content":"        int index;"},{"lineNumber":104,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":105,"author":{"gitId":"T-Fang"},"content":"            index \u003d Integer.parseInt(input.substring(7)) - 1;"},{"lineNumber":106,"author":{"gitId":"T-Fang"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":107,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The task index should be a number.\");"},{"lineNumber":108,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"T-Fang"},"content":"        return new DeleteCommand(index);"},{"lineNumber":110,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":112,"author":{"gitId":"T-Fang"},"content":"    private static DoneCommand generateDoneCommand(String input) throws DukeException {"},{"lineNumber":113,"author":{"gitId":"T-Fang"},"content":"        if (input.length() \u003c\u003d 5) {"},{"lineNumber":114,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"I don\u0027t know which task should be marked as completed.\");"},{"lineNumber":115,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":116,"author":{"gitId":"T-Fang"},"content":"        int index;"},{"lineNumber":117,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":118,"author":{"gitId":"T-Fang"},"content":"            index \u003d Integer.parseInt(input.substring(5)) - 1;"},{"lineNumber":119,"author":{"gitId":"T-Fang"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":120,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"The task index should be a number.\");"},{"lineNumber":121,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":122,"author":{"gitId":"T-Fang"},"content":"        return new DoneCommand(index);"},{"lineNumber":123,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":124,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":125,"author":{"gitId":"T-Fang"},"content":"    private static FindCommand generateFindCommand(String input) throws DukeException {"},{"lineNumber":126,"author":{"gitId":"T-Fang"},"content":"        if (input.length() \u003c\u003d 5) {"},{"lineNumber":127,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"Please enter the keyword you want to search!\");"},{"lineNumber":128,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":129,"author":{"gitId":"T-Fang"},"content":"        return new FindCommand(input.substring(5));"},{"lineNumber":130,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":131,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":132,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":132}},{"path":"src/main/java/duke/component/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.component;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import java.util.Scanner;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import duke.task.Deadline;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"import duke.task.Event;"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"import duke.task.Todo;"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":" * Permanent storage that stores user\u0027s task list in a data file."},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    private final String path;"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     * Initializes a storage object using the given file path."},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"     * @param path the given file path."},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    public Storage(String path) {"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"        this.path \u003d path;"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"     * Reads from the data file and returns the task list it stores."},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"     * @return the task list stored in the data file."},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if errors occur while trying to read the data file."},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"    public LinkedList\u003cTask\u003e readList() throws DukeException {"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"        LinkedList\u003cTask\u003e taskList \u003d new LinkedList\u003c\u003e();"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"            File data \u003d new File(path);"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"            Scanner sc \u003d new Scanner(data);"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"            while (sc.hasNextLine()) {"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"                String nextLine \u003d sc.nextLine();"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"                Task task \u003d generateTask(nextLine);"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"                taskList.add(task);"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"            }"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"            createDataFile();"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"        return taskList;"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"    private void createDataFile() throws DukeException {"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"        new File(\"data\").mkdir();"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"            new File(path).createNewFile();"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"        } catch (IOException ioException) {"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"I cannot create the data file!\");"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"        assert new File(path).exists() : \"Failed to access the file!\";"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"        throw new DukeException(\"No data file found, a new data file created!\");"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"    private Task generateTask(String nextLine) {"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"        Task task \u003d new Task(\"\");"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"        String[] components \u003d nextLine.split(\" \\\\| \");"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":"            switch (components[0]) {"},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"            case \"T\":"},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"                task \u003d new Todo(components[2]);"},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"            case \"D\":"},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"                task \u003d new Deadline(components[2], components[3]);"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"                break;"},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":"            case \"E\":"},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":"                task \u003d new Event(components[2], components[3]);"},{"lineNumber":76,"author":{"gitId":"T-Fang"},"content":"                break;"},{"lineNumber":77,"author":{"gitId":"T-Fang"},"content":"            default:"},{"lineNumber":78,"author":{"gitId":"T-Fang"},"content":"                throw new DukeException(\"I found an illegal string in the data file.\");"},{"lineNumber":79,"author":{"gitId":"T-Fang"},"content":"            }"},{"lineNumber":80,"author":{"gitId":"T-Fang"},"content":"        } catch (DukeException e) {"},{"lineNumber":81,"author":{"gitId":"T-Fang"},"content":"            System.out.println(e.getMessage());"},{"lineNumber":82,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":84,"author":{"gitId":"T-Fang"},"content":"        if (components[1].equals(\"1\")) {"},{"lineNumber":85,"author":{"gitId":"T-Fang"},"content":"            task.markAsDone();"},{"lineNumber":86,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":87,"author":{"gitId":"T-Fang"},"content":"        return task;"},{"lineNumber":88,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":90,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"T-Fang"},"content":"     * Saves the given task list to the data file."},{"lineNumber":92,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"T-Fang"},"content":"     * @param list the task list to be stored in the data file."},{"lineNumber":94,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if errors occur when trying to write task list to the data file."},{"lineNumber":95,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"T-Fang"},"content":"    public void saveList(TaskList list) throws DukeException {"},{"lineNumber":97,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":98,"author":{"gitId":"T-Fang"},"content":"            FileWriter writer \u003d new FileWriter(path);"},{"lineNumber":99,"author":{"gitId":"T-Fang"},"content":"            for (Task task : list.getList()) {"},{"lineNumber":100,"author":{"gitId":"T-Fang"},"content":"                writer.write(task.toStorageString() + \"\\n\");"},{"lineNumber":101,"author":{"gitId":"T-Fang"},"content":"            }"},{"lineNumber":102,"author":{"gitId":"T-Fang"},"content":"            writer.close();"},{"lineNumber":103,"author":{"gitId":"T-Fang"},"content":"        } catch (IOException e) {"},{"lineNumber":104,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"I cannot write the data!\");"},{"lineNumber":105,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":106,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":107,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":108}},{"path":"src/main/java/duke/component/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.component;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.LinkedList;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.task.Task;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":" * List that stores the task list."},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":" * Operations related to a task list has been abstracted in this class."},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"public class TaskList {"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    private final LinkedList\u003cTask\u003e list;"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"     * Initializes a task list using the given Task LinkedList."},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    public TaskList() {"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"        this.list \u003d new LinkedList\u003c\u003e();"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     * Initializes an empty task list."},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    public TaskList(LinkedList\u003cTask\u003e list) {"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"        this.list \u003d list;"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     * Get the index of the task whose description matches the given description."},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     * @param description   the given description."},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"     * @return  the index of the corresponding task if it is found,"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"     *          or -1 if it is not found."},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"    public int indexOf(String description) {"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"        return list.stream()"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"            .filter((task) -\u003e task.getDescription() \u003d\u003d description)"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"            .findFirst()"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"            .map((task) -\u003e list.indexOf(task))"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"            .orElse(-1);"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     * Adds the given task to the task list."},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"     * @param newTask the task to be added."},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"    public void add(Task newTask) {"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"        list.add(newTask);"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"     * Adds the task to the given index."},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"     * @param index     where the task will be added."},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"     * @param newTask   the task to be added."},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"    public void add(int index, Task newTask) {"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"        list.add(index, newTask);"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"     * Removes the task at the given index."},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"     * @param index the index of the task to be removed."},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"    public void remove(int index) {"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"        list.remove(index);"},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"     * Removes the task with the given description."},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"     * @param description the description of the task to be removed."},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"     * @return true if a task is deleted and false otherwise."},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":"    public boolean remove(String description) {"},{"lineNumber":76,"author":{"gitId":"T-Fang"},"content":"        int index \u003d indexOf(description);"},{"lineNumber":77,"author":{"gitId":"T-Fang"},"content":"        if (index \u003c 0) {"},{"lineNumber":78,"author":{"gitId":"T-Fang"},"content":"            return false;"},{"lineNumber":79,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"T-Fang"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"},{"lineNumber":81,"author":{"gitId":"T-Fang"},"content":"        list.remove(index);"},{"lineNumber":82,"author":{"gitId":"T-Fang"},"content":"        return true;"},{"lineNumber":83,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":85,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":86,"author":{"gitId":"T-Fang"},"content":"     * Removes the last added task"},{"lineNumber":87,"author":{"gitId":"T-Fang"},"content":"     * @return  the (deleted) last added task"},{"lineNumber":88,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":89,"author":{"gitId":"T-Fang"},"content":"    public Task removeLast() {"},{"lineNumber":90,"author":{"gitId":"T-Fang"},"content":"        return list.removeLast();"},{"lineNumber":91,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":92,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":93,"author":{"gitId":"T-Fang"},"content":"     * Gets the task at the given index."},{"lineNumber":94,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":95,"author":{"gitId":"T-Fang"},"content":"     * @param index the index given indicating the position of the task."},{"lineNumber":96,"author":{"gitId":"T-Fang"},"content":"     * @return the task at the given index."},{"lineNumber":97,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":98,"author":{"gitId":"T-Fang"},"content":"    public Task get(int index) {"},{"lineNumber":99,"author":{"gitId":"T-Fang"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"},{"lineNumber":100,"author":{"gitId":"T-Fang"},"content":"        return list.get(index);"},{"lineNumber":101,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":102,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":103,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":104,"author":{"gitId":"T-Fang"},"content":"     * Gets the task list in LinkedList format."},{"lineNumber":105,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":106,"author":{"gitId":"T-Fang"},"content":"     * @return the task LinkedList."},{"lineNumber":107,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":108,"author":{"gitId":"T-Fang"},"content":"    public LinkedList\u003cTask\u003e getList() {"},{"lineNumber":109,"author":{"gitId":"T-Fang"},"content":"        return list;"},{"lineNumber":110,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":112,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"T-Fang"},"content":"     * Marks the task at the given index as done."},{"lineNumber":114,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":115,"author":{"gitId":"T-Fang"},"content":"     * @param index the index given indicating the position of the task."},{"lineNumber":116,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":117,"author":{"gitId":"T-Fang"},"content":"    public void markAsDone(int index) {"},{"lineNumber":118,"author":{"gitId":"T-Fang"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"},{"lineNumber":119,"author":{"gitId":"T-Fang"},"content":"        list.get(index).markAsDone();"},{"lineNumber":120,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":122,"author":{"gitId":"T-Fang"},"content":"     * Marks the task at the given index as undone."},{"lineNumber":123,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":124,"author":{"gitId":"T-Fang"},"content":"     * @param index the index given indicating the position of the task."},{"lineNumber":125,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"T-Fang"},"content":"    public void markAsUndone(int index) {"},{"lineNumber":127,"author":{"gitId":"T-Fang"},"content":"        assert(index \u003e\u003d 0 \u0026\u0026 index \u003c list.size());"},{"lineNumber":128,"author":{"gitId":"T-Fang"},"content":"        list.get(index).markAsUndone();"},{"lineNumber":129,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":130,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"T-Fang"},"content":"     * Returns the size of the task list."},{"lineNumber":132,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":133,"author":{"gitId":"T-Fang"},"content":"     * @return the size of the task list."},{"lineNumber":134,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"T-Fang"},"content":"    public int size() {"},{"lineNumber":136,"author":{"gitId":"T-Fang"},"content":"        return list.size();"},{"lineNumber":137,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":138,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":139,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":140,"author":{"gitId":"T-Fang"},"content":"     * Returns a description of the size of the task list."},{"lineNumber":141,"author":{"gitId":"T-Fang"},"content":"     * @return  a description of the size of the task list."},{"lineNumber":142,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":143,"author":{"gitId":"T-Fang"},"content":"    public String sizeDescription() {"},{"lineNumber":144,"author":{"gitId":"T-Fang"},"content":"        return \"\\n    Now you have \" + list.size()"},{"lineNumber":145,"author":{"gitId":"T-Fang"},"content":"            + \" task\" + (list.size() \u003e 1 ? \"s\" : \"\") + \" in the list.\";"},{"lineNumber":146,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":147,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":148,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":148}},{"path":"src/main/java/duke/component/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.component;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.util.Scanner;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":" * The class that receive user\u0027s input and print corresponding responses on the screen."},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"public class Ui {"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"    public static final String GREETING \u003d \"    Hello! I\u0027m Tachikoma\\n\" + \"    What can I do for you?\";"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    private static final String DIVIDER \u003d \"    ____________________________________________________________\\n\";"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"    private Scanner sc;"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"     * Initializes a Ui object with a new scanner."},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    public Ui() {"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"        sc \u003d new Scanner(System.in);"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     * Displays loading error message on the screen."},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"     * @param e the exception describing what errors occurred."},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    public void showLoadingError(DukeException e) {"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"        giveResponse(e.getMessage());"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     * Prints out the response on the screen."},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    public String giveResponse(String response) {"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"        String formattedResponse \u003d DIVIDER + response + \"\\n\" + DIVIDER;"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"        System.out.println(formattedResponse);"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"        return response;"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"     * Displays the task list given."},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"     * @param taskList the task list to be displayed."},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"    public String displayList(TaskList taskList, String description) {"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"        String list \u003d \"    \" + description + \"\\n\";"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"        for (int i \u003d 1; i \u003c\u003d taskList.size(); i++) {"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"            list +\u003d \"     \" + i + \". \" + taskList.get(i - 1) + \"\\n\";"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        //remove the extra \"\\n\""},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"        if (!list.isEmpty()) {"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"            list \u003d list.substring(0, list.length() - 1);"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"        giveResponse(list);"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"        return list;"},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"     * Gets the next input."},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"     * @return the next input in String format."},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"    public String getInput() {"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":"        return sc.nextLine();"},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"     * Prints out the welcome message."},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"    public void welcome() {"},{"lineNumber":72,"author":{"gitId":"T-Fang"},"content":"        giveResponse(Ui.GREETING);"},{"lineNumber":73,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":75,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":75}},{"path":"src/main/java/duke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        this.setStyle(\"-fx-background-color: #F5DC9D;\");"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        return new DialogBox(text, img);"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"        db.flip();"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"        return db;"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":62}},{"path":"src/main/java/duke/gui/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import duke.Duke;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import javafx.application.Application;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.Scene;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import javafx.stage.Stage;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":" * A GUI for Duke using FXML."},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"public class Main extends Application {"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    public void start(Stage stage) {"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"            stage.setScene(scene);"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"            stage.show();"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"        } catch (IOException e) {"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"            e.printStackTrace();"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":32}},{"path":"src/main/java/duke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.gui;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import duke.Duke;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import duke.component.Ui;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.control.Button;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.image.Image;"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    private Duke duke;"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Batou.png\"));"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Tachikoma.png\"));"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    public void initialize() {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"        duke \u003d d;"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Ui.GREETING, dukeImage));"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"    @FXML"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"    private void handleUserInput() {"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"            DialogBox.getUserDialog(input, userImage),"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"            DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"        );"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"        userInput.clear();"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":54}},{"path":"src/main/java/duke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":" * A type of task that has a deadline."},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"public class Deadline extends Task {"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    protected LocalDate byDate;"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"     * Initializes a Deadline using the given description and due date."},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     * @param description the description of the deadline."},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     * @param byDate      the due date of the deadline."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if the input command is invalid."},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    public Deadline(String description, String byDate) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"            this.byDate \u003d LocalDate.parse(byDate);"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"Invalid date detected! Please enter date as yyyy-mm-dd.\");"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the deadline."},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the deadline."},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"        return \"[D]\" + super.toString() + \" (by: \""},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"            + byDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the deadline when it is stored in a data file."},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the deadline when it is stored in a data file."},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"    public String toStorageString() {"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        if (super.isDone) {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"            return \"D | 1 | \" + description + \" | \" + byDate;"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"            return \"D | 0 | \" + description + \" | \" + byDate;"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":56}},{"path":"src/main/java/duke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import java.time.format.DateTimeParseException;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"import duke.component.DukeException;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":" * An event that has a specific time."},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"public class Event extends Task {"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    protected LocalDate atDate;"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"     * Initializes an Event using the given description and event date."},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     * @param description the description of the event."},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     * @param atDate      the date of the event."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     * @throws DukeException if the input command is invalid."},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    public Event(String description, String atDate) throws DukeException {"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"        super(description);"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"            this.atDate \u003d LocalDate.parse(atDate);"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"        } catch (DateTimeParseException e) {"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"            throw new DukeException(\"Invalid date detected! Please enter date as yyyy-mm-dd.\");"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the event."},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the event."},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"        return \"[E]\" + super.toString() + \" (at: \""},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"            + atDate.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the event when it is stored in a data file."},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the event when it is stored in a data file."},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"    public String toStorageString() {"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"        if (super.isDone) {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"            return \"E | 1 | \" + description + \" | \" + atDate;"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"        } else {"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":"            return \"E | 0 | \" + description + \" | \" + atDate;"},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":57}},{"path":"src/main/java/duke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":" * Task class that represents a task."},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"public class Task implements Comparable\u003cTask\u003e {"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"     * Initializes a task using the given description."},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"     * @param description the description of the task."},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    public Task(String description) {"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"        this.description \u003d description;"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"        this.isDone \u003d false;"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     * Returns the symbol indicating whether the task has been completed."},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"     * @return check mark if the task has been completed, or a cross otherwise."},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    public String getStatusIcon() {"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     * Returns the description of the task."},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     * @return the description of the task."},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    public String getDescription() {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        return description;"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"     * Marks the task as done"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"    public void markAsDone() {"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"        isDone \u003d true;"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"     * Marks the task as undone"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"    public void markAsUndone() {"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"        isDone \u003d false;"},{"lineNumber":45,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the task."},{"lineNumber":48,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the task."},{"lineNumber":49,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"T-Fang"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"T-Fang"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":52,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":54,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the task when it is stored in a data file."},{"lineNumber":56,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the task when it is stored in a data file."},{"lineNumber":57,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"T-Fang"},"content":"    public String toStorageString() {"},{"lineNumber":59,"author":{"gitId":"T-Fang"},"content":"        if (isDone) {"},{"lineNumber":60,"author":{"gitId":"T-Fang"},"content":"            return \"? | 1 | \" + description;"},{"lineNumber":61,"author":{"gitId":"T-Fang"},"content":"        } else {"},{"lineNumber":62,"author":{"gitId":"T-Fang"},"content":"            return \"? | 0 | \" + description;"},{"lineNumber":63,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":64,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":66,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":67,"author":{"gitId":"T-Fang"},"content":"    public int compareTo(Task t) {"},{"lineNumber":68,"author":{"gitId":"T-Fang"},"content":"        String givenDescription \u003d t.description;"},{"lineNumber":69,"author":{"gitId":"T-Fang"},"content":"        return description.compareTo(givenDescription);"},{"lineNumber":70,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":71,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":71}},{"path":"src/main/java/duke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":" * A simple type of task."},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":" */"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"     * Initializes a todo using the given description."},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"     * @param description the description of the todo."},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    public Todo(String description) {"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the todo."},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the todo."},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    public String toString() {"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"        return \"[T][\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"     * Returns the String representation of the todo when it is stored in a data file."},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"     *"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"     * @return the String representation of the todo when it is stored in a data file."},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"     */"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    @Override"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"    public String toStorageString() {"},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"        if (super.isDone) {"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"            return \"T | 1 | \" + description;"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"        } else {"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"            return \"T | 0 | \" + description;"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":38}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\""},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"         maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\""},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"         xmlns:fx\u003d\"http://javafx.com/fxml/1\""},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"         style\u003d\"-fx-background-color: #F4A261;\"\u003e"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"    \u003cchildren\u003e"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" text\u003d\"Label\" textFill\u003d\"#264653\" wrapText\u003d\"true\"/\u003e"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"70.0\" fitWidth\u003d\"70.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"            \u003cHBox.margin\u003e"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"                \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"            \u003c/HBox.margin\u003e"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"        \u003c/ImageView\u003e"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    \u003c/children\u003e"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    \u003cpadding\u003e"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"    \u003c/padding\u003e"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"T-Fang":24}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.gui.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"T-Fang":19}},{"path":"src/test/java/duke/DukeTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"public class DukeTest {"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    public void dummyTest() {"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"        assertEquals(1, 1);"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":13}},{"path":"src/test/java/duke/task/DeadlineTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"package duke.task;"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"import static org.junit.jupiter.api.Assertions.assertEquals;"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"import static org.junit.jupiter.api.Assertions.fail;"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"public class DeadlineTest {"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"    @Test"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"    public void constructor_invalidDate_throwException() {"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"            Deadline d \u003d new Deadline(\"UTC2107 Consultation\", \"2020/08/25\");"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"            fail();"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"        } catch (Exception e) {"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"            assertEquals(\"    \\u2639 OOPS!!! Invalid date detected! Please enter date as yyyy-mm-dd.\", e.getMessage());"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"    @Test"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"    public void toStorageStringTest() {"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"            Deadline deadline \u003d new Deadline(\"UTC2107 Consultation\", \"2020-08-25\");"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"            assertEquals(\"D | 0 | UTC2107 Consultation | 2020-08-25\", deadline.toStorageString());"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"            deadline.markAsDone();"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"            assertEquals(\"D | 1 | UTC2107 Consultation | 2020-08-25\", deadline.toStorageString());"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"        } catch (Exception e) {"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"            fail();"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":32,"author":{"gitId":"T-Fang"},"content":"    @Test"},{"lineNumber":33,"author":{"gitId":"T-Fang"},"content":"    public void toStringTest() {"},{"lineNumber":34,"author":{"gitId":"T-Fang"},"content":"        try {"},{"lineNumber":35,"author":{"gitId":"T-Fang"},"content":"            Deadline deadline \u003d new Deadline(\"UTC2107 Consultation\", \"2020-08-25\");"},{"lineNumber":36,"author":{"gitId":"T-Fang"},"content":"            assertEquals(\"[D][\\u2718] UTC2107 Consultation (by: Aug 25 2020)\", deadline.toString());"},{"lineNumber":37,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":38,"author":{"gitId":"T-Fang"},"content":"            deadline.markAsDone();"},{"lineNumber":39,"author":{"gitId":"T-Fang"},"content":"            assertEquals(\"[D][\\u2713] UTC2107 Consultation (by: Aug 25 2020)\", deadline.toString());"},{"lineNumber":40,"author":{"gitId":"T-Fang"},"content":"        } catch (Exception e) {"},{"lineNumber":41,"author":{"gitId":"T-Fang"},"content":"            fail();"},{"lineNumber":42,"author":{"gitId":"T-Fang"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"T-Fang"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"T-Fang"},"content":"}"}],"authorContributionMap":{"T-Fang":44}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"T-Fang"},"content":"blah"},{"lineNumber":2,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":3,"author":{"gitId":"T-Fang"},"content":"todo"},{"lineNumber":4,"author":{"gitId":"T-Fang"},"content":"todo borrow book"},{"lineNumber":5,"author":{"gitId":"T-Fang"},"content":"list"},{"lineNumber":6,"author":{"gitId":"T-Fang"},"content":"deadline"},{"lineNumber":7,"author":{"gitId":"T-Fang"},"content":"deadline return book"},{"lineNumber":8,"author":{"gitId":"T-Fang"},"content":"deadline return book /by"},{"lineNumber":9,"author":{"gitId":"T-Fang"},"content":"deadline return book /by 2020-08-30"},{"lineNumber":10,"author":{"gitId":"T-Fang"},"content":"event"},{"lineNumber":11,"author":{"gitId":"T-Fang"},"content":"event project meeting"},{"lineNumber":12,"author":{"gitId":"T-Fang"},"content":"event project meeting /at"},{"lineNumber":13,"author":{"gitId":"T-Fang"},"content":"event project meeting /at 2020-08-23"},{"lineNumber":14,"author":{"gitId":"T-Fang"},"content":"list"},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"done"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":"done three"},{"lineNumber":17,"author":{"gitId":"T-Fang"},"content":"done 0"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"done 1"},{"lineNumber":19,"author":{"gitId":"T-Fang"},"content":"done 3"},{"lineNumber":20,"author":{"gitId":"T-Fang"},"content":"list"},{"lineNumber":21,"author":{"gitId":"T-Fang"},"content":"find"},{"lineNumber":22,"author":{"gitId":"T-Fang"},"content":"find boook"},{"lineNumber":23,"author":{"gitId":"T-Fang"},"content":"find book"},{"lineNumber":24,"author":{"gitId":"T-Fang"},"content":"delete"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"delete two"},{"lineNumber":26,"author":{"gitId":"T-Fang"},"content":"delete 0"},{"lineNumber":27,"author":{"gitId":"T-Fang"},"content":"delete 1"},{"lineNumber":28,"author":{"gitId":"T-Fang"},"content":"list"},{"lineNumber":29,"author":{"gitId":"T-Fang"},"content":"delete 1"},{"lineNumber":30,"author":{"gitId":"T-Fang"},"content":"delete 1"},{"lineNumber":31,"author":{"gitId":"T-Fang"},"content":"bye"}],"authorContributionMap":{"T-Fang":31}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"T-Fang"},"content":"export LC_ALL\u003den_GB.UTF-8"},{"lineNumber":16,"author":{"gitId":"T-Fang"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":18,"author":{"gitId":"T-Fang"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/*.java ../src/main/java/duke/*/*.java"},{"lineNumber":19,"author":{"gitId":"-"},"content":"then"},{"lineNumber":20,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":21,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":22,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":25,"author":{"gitId":"T-Fang"},"content":"java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":26,"author":{"gitId":"-"},"content":""},{"lineNumber":27,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":28,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":29,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":32,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":33,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":34,"author":{"gitId":"-"},"content":"then"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":36,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":37,"author":{"gitId":"-"},"content":"else"},{"lineNumber":38,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":39,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":40,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"T-Fang":4,"-":36}}]
