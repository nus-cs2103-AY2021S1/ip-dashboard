[
  {
    "path": "duke_save_data.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "deadline:0:project:2017-08-09"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 1
    }
  },
  {
    "path": "src/main/java/AlreadyDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class AlreadyDoneIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public AlreadyDoneIndexException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"This task is already done!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Deadline(String taskName, LocalDate taskDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[D][%s] %s (by: %s)\", getStatusIcon(), taskName, taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 20
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.regex.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "  "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayStarLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(\"––––––––––––––––––––– *** –––––––––––––––––––––\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void displayMessage(String message) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static int getNumIfValid(List\u003cTask\u003e tasks, String commandLine) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Pattern p \u003d Pattern.compile(\"\\\\d+\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Matcher m \u003d p.matcher(commandLine);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Integer id \u003d m.find() ? Integer.parseInt(m.group()) : null;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new EmptyTasksException(commandLine);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (id \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new NullDoneIndexException(commandLine);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (id \u003c 1 || id \u003e tasks.size()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new RangeIndexException(commandLine);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return id - 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void welcome() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String welcome \u003d \"Duke at your service!\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                logo + \"\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                // commented out due to runtest failures, for some reason."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                \"How can I help you?\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                \"Type in your orders below.\\n\\n\" +"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                \"(command list: \u0027list\u0027, \u0027deadline\u0027, \u0027event\u0027, \u0027todo\u0027, \u0027done\u0027, \u0027bye\u0027)\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayMessage(welcome);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayMessage(\"Alright, see you soon!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void list(List\u003cTask\u003e tasks, int pending) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int currId \u003d 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(\"TO-DO LIST:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(String.format(\"%d pending\", pending));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        for (Task t : tasks) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(String.format(\"   %d. %s\", currId, t));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            currId++;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void done(List\u003cTask\u003e tasks, String commandLine) throws DukeException {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int target \u003d getNumIfValid(tasks, commandLine);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Task targetTask \u003d tasks.get(target);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (targetTask.isDone) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new AlreadyDoneIndexException(commandLine);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        tasks.get(target).markAsDone();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(\"Good job! This task is now marked done:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(tasks.get(target));"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static boolean delete(List\u003cTask\u003e tasks, String commandLine) throws DukeException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int target \u003d getNumIfValid(tasks, commandLine);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Task targetTask \u003d tasks.get(target);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        tasks.remove(target);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(\"Alright! This task is now deleted:\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        System.out.println(targetTask);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        displayStarLine();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return !targetTask.isDone;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void add(List\u003cTask\u003e tasks, String commandLine) throws DukeException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String[] inputs \u003d commandLine.split(\"/\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String[] taskDetails \u003d inputs[0].split(\" \", 2);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (!TaskType.isMember(taskType)) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            throw new DukeException(taskType);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            TaskType task \u003d TaskType.getTaskType(taskType);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String taskName \u003d taskDetails.length \u003d\u003d 1 ? \"\" : taskDetails[1].trim();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String taskDate \u003d inputs.length \u003d\u003d 1 ? \"\" : inputs[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            task.addToTasks(tasks, taskName, false, taskDate);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            int size \u003d tasks.size();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            displayStarLine();"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"\u0027\" + taskName + \"\u0027 added to list!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(tasks.get(size - 1));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"\\nYou now have \" + size + \" task(s) in your list.\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(\"(Use \u0027list\u0027 command to see your updated list.)\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            displayStarLine();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static ArrayList\u003cTask\u003e load(File file) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Scanner input \u003d new Scanner(file);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            while (input.hasNextLine()) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String nextLine \u003d input.nextLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String[] taskDetails \u003d nextLine.split(\":\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                for (String entry : taskDetails) System.out.println(entry);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskType \u003d taskDetails[0];"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                System.out.println(taskDetails[1]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                boolean taskIsDone \u003d taskDetails[1].startsWith(\"1\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskName \u003d taskDetails[2];"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskDate \u003d taskDetails.length \u003c 4 ? \"\" : taskDetails[3];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                if (!TaskType.isMember(taskType)) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    throw new DukeException(taskType);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    TaskType task \u003d TaskType.getTaskType(taskType);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    task.addToTasks(result, taskName, taskIsDone, taskDate);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            input.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "           e.printStackTrace();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void save (List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            File file \u003d new File(System.getProperty(\"ip\"), \"duke_save_data.txt\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            FileWriter output \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String taskType \u003d task.getClass().getName().toLowerCase();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                TaskType type \u003d TaskType.getTaskType(taskType);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                String saveLine \u003d type.generateSaveLine(task.isDone, task.taskName, task.getDate());"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                output.write(saveLine);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            output.close();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        String home \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        java.nio.file.Path path \u003d java.nio.file.Paths.get(home,  \"duke_save_data.txt\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        boolean directoryExists \u003d java.nio.file.Files.exists(path);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        List\u003cTask\u003e tasks \u003d load(path.toFile());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        int pending \u003d 0;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        if (!tasks.isEmpty()) {"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            for (Task t : tasks) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                if (!t.isDone) pending++;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        welcome();"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            String commandLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (commandLine.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                save(tasks);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                bye();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } else if (commandLine.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                list(tasks, pending);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } else if (commandLine.startsWith(\"done\")){"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    done(tasks, commandLine);"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    pending--;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    displayMessage(e.toString());"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } else if (commandLine.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    boolean pendingIsDeleted \u003d delete(tasks, commandLine);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    if (pendingIsDeleted) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                        pending--;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    displayMessage(e.toString());"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    add(tasks, commandLine);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    pending++;"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                    displayMessage(e.toString());"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 215,
      "-": 8
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public DukeException(String command) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(\"Error caused by input:\" + command);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Sorry, I can\u0027t understand your command: \" + command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  },
  {
    "path": "src/main/java/EmptyTasksException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class EmptyTasksException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public EmptyTasksException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Cannot operate on empty tasks list!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected LocalDate taskDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Event(String taskName, LocalDate taskDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.taskDate \u003d taskDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return taskDate.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[E][%s] %s (at: %s)\", getStatusIcon(), taskName, taskDate.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 20
    }
  },
  {
    "path": "src/main/java/NullDoneIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class NullDoneIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public NullDoneIndexException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Please provide an index!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 12
    }
  },
  {
    "path": "src/main/java/NullTaskDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class NullTaskDateException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public NullTaskDateException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Please provide time to the \" + command + \" item!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "src/main/java/NullTaskNameException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class NullTaskNameException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public NullTaskNameException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Please name the \" + command + \" item!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "src/main/java/RangeIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class RangeIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public RangeIndexException(String command) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"Index out of range!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.taskName \u003d taskName.trim();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return isDone ?  \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), taskName);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 25
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.EnumSet;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "import java.util.Map;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    DEADLINE(\"deadline\") {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskNameException(\"deadline\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskDate.isBlank()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskDateException(\"deadline\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Task task \u003d new Deadline(taskName, LocalDate.parse(taskDate));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskIsDone) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return String.format(\"deadline:%s:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName, taskDate);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    },"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    EVENT(\"event\") {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskNameException(\"event\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskDate.isBlank()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskDateException(\"event\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Task task \u003d new Event(taskName, LocalDate.parse(taskDate));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskIsDone) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return String.format(\"event:%s:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName, taskDate);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    },"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    TODO(\"todo\") {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskName.isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                throw new NullTaskNameException(\"todo\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            Task task \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            if (taskIsDone) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "                task.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            System.out.println(task.isDone);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        public String generateSaveLine(boolean taskIsDone, String taskName, String taskDate) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            return String.format(\"todo:%s:%s\\n\", taskIsDone ? \"1\" : \"0\", taskName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    };"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private static final Map\u003cString, TaskType\u003e nameToValueMap \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    private final String lowerCase;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    TaskType(String lowerCase) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        this.lowerCase \u003d lowerCase;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String getLowerCase() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return lowerCase;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    static {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        for (TaskType type : EnumSet.allOf(TaskType.class)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "            nameToValueMap.put(type.getLowerCase(), type);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static boolean isMember(String name) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return nameToValueMap.containsKey(name);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public static TaskType getTaskType(String lowerCase) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return nameToValueMap.get(lowerCase);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public abstract void addToTasks(List\u003cTask\u003e tasks, String taskName, boolean taskIsDone, String taskDate) throws DukeException;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public abstract String generateSaveLine(boolean taskIsDone, String taskName, String taskDate);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 97
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public ToDo(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "        return String.format(\"[T][%s] %s\", getStatusIcon(), taskName);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo call mom"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo call dad"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "event project meeting /at 3pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "deadline homework /by Monday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "todo clean fridge"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "  )"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 4,
      "-": 37
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/AlreadyDoneIndexException.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/RangeIndexException.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/NullTaskNameException.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/NullDoneIndexException.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/TaskType.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/EmptyTasksException.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/ToDo.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/NullTaskDateException.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "petrickjerico"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "petrickjerico": 13
    }
  }
]
