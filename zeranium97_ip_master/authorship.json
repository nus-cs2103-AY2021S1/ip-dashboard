[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00276.0.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 43,
      "zeranium97": 17
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        setMargin(dialog, new Insets(0, 0, 0, 10));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 64
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents a Task Chatbot that helps the user to track of the task to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the Duke class."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Loads and reads the data from the text file"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage \u003d new Storage(\"data/duke.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Processes the user input and execute the commands"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String that should be outputted from the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String run(String input) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assert !input.equals(\"\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return new Duke().run(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 47
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 10
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fxmlLoader.setRoot(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            stage.setTitle(\"Duke ChatBot\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 33
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.concurrent.Executors;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.concurrent.ScheduledExecutorService;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.control.Alert;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.control.DialogPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/kungfu.png\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Oogway-white.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Initializes the program"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        dialogContainer.setBackground(new Background(new BackgroundFill(Color.WHITE, CornerRadii.EMPTY, Insets.EMPTY)));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        dialogContainer.setPrefSize(400,550);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(ui.start(), dukeImage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Alert alert \u003d new Alert(Alert.AlertType.INFORMATION);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            alert.setTitle(\"Help\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            alert.setHeaderText(\"Guide to DUKE\u0027s chatbot\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            alert.getDialogPane().setPrefSize(500,350);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            alert.setContentText(ui.help());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            alert.showAndWait();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            );"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            ScheduledExecutorService executorService \u003d Executors.newSingleThreadScheduledExecutor();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            executorService.schedule(this::exitApplication, 2, TimeUnit.SECONDS);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            );"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Exits the application"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void exitApplication() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 95
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.CommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.EmptyDescriptionException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.WrongFormatException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Takes the user\u0027s command and parse it"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected static List\u003cString\u003e inputFormat \u003d Arrays.asList(\"dd/MM/yyyy HHmm\", \"yyyy-mm-dd Haaa\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected static SimpleDateFormat outputFormat \u003d new SimpleDateFormat(\"MMM dd yyyy h:mma\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected static List\u003cString\u003e existingCommand \u003d Arrays.asList(\"done\", \"delete\", \"todo\","
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                                                                    \"event\", \"find\", \"deadline\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Converts the input date to another date format, if it exist"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param str users date input"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String representation of the new date format or the original date input"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static String dateParser(String str) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Date date \u003d null;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        for (String input : inputFormat) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                date \u003d new SimpleDateFormat(input).parse(str);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (ParseException ignore) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                continue; //ignore exception to allow customized date input"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (date \u003d\u003d null) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return str;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return outputFormat.format(date);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a command object based on the users\u0027 input"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param input users\u0027 input"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return Command to be executed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is any parsing error"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String[] inputArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (inputArray.length \u003d\u003d 1 \u0026\u0026 existingCommand.contains(inputArray[0])) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new EmptyDescriptionException((\"The description of \""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    + inputArray[0]"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    + \" cannot be empty. Please re-enter\"));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        switch (inputArray[0]) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new DoneCommand(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(inputArray[1]));"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new FindCommand(inputArray[1]);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new TodoCommand(inputArray[1]);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"deadline\": {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            formatChecker(inputArray);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String str \u003d inputArray[1].split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String date \u003d inputArray[1].split(\"/\", 2)[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new DeadlineCommand(str, dateParser(date));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        case \"event\": {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            formatChecker(inputArray);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String str \u003d inputArray[1].split(\" /\", 2)[0];"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String date \u003d inputArray[1].split(\"/\", 2)[1].split(\" \", 2)[1];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return new EventCommand(str, dateParser(date));"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new CommandException(\"Im sorry, I do not understand what you mean. Please re-enter:\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Checks if there is any format discrepancy"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param input users\u0027 input"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is an incorrect format"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private static void formatChecker(String[] input) throws DukeException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            String str \u003d input[1].split(\" /\", 2)[1];"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            if (input[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                if (!input[1].split(\"/\", 2)[1].split(\" \", 2)[0].equals(\"by\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    throw new WrongFormatException(\"Incorrect format, Please re-enter\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                if (!input[1].split(\"/\", 2)[1].split(\" \", 2)[0].equals(\"at\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    throw new WrongFormatException(\"Incorrect format, Please re-enter\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new WrongFormatException(\"Incorrect format, Please re-enter:\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 134
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Handles the read and write operations to the data file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String content \u003d \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the Storage Class"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param path relative filepath where the datafile is located"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Storage(String path) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Reads the datafile if it exists else it creates a new data file"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds all the tasks on the datafile into a new ArrayList"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return returns a list of Task"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is error reading the file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String fileLine \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                File dir \u003d new File(\"data\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                dir.mkdir();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new DukeException(\"File cannot be created\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                BufferedReader reader \u003d new BufferedReader(new FileReader(file));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                while ((fileLine \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    content +\u003d fileLine + \"\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    String[] str \u003d fileLine.split(\" \\\\| \");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    switch (str[0]) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        taskList.add(new Todo(str[2], Integer.parseInt(str[1])));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        taskList.add(new Deadline(str[2], Integer.parseInt(str[1]), str[3]));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        taskList.add(new Event(str[2], Integer.parseInt(str[1]), str[3]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                content \u003d content.trim();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                reader.close();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new DukeException(\"File not Found\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                throw new DukeException(\"Error reading file: \" + path);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Saves the task into the current datafile"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be saved"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void save(Task task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (content.isEmpty()) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content \u003d task.saveText(task.getStatus());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content \u003d content + \"\\n\" + task.saveText(task.getStatus());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Deletes the task from the data file"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be deleted"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void delete(Task task) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content \u003d content.replace(task.saveText(task.getStatus()), \"\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Replaces the uncompleted task with completed task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task that has been completed"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void replace(Task task) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content \u003d content.replace(task.saveText(0), task.saveText(1));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Updates and writes all the changes into a text file upon exiting the program"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is error writing file"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void update() throws DukeException {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        File file \u003d new File(\"data/duke.txt\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(file, false));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            writer.write(content);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new DukeException(\"Error writing file: \" + path);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 136
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents a list of Tasks that uses an ArrayList"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the TaskList Class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new ArrayList of Tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for the TaskList Class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Takes in an existing lists of tasks"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList existing list of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the list"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be added"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Deletes the task from the list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task to be deleted"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void removeTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.remove(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Retrives the task from the list"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param index index of the task"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns the size of the taskList"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return size"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Get the current list of tasks"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return list of tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String printList() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (taskList.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content +\u003d \"List is Empty\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            for (Task t : taskList) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                content +\u003d i + \".\" + t.toString() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content \u003d content.substring(0, content.length() - 1);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Gets the list of matching description"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String printMatching(String description) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            if (task.toString().contains(description)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                content +\u003d \"\\n\" + index + \". \" + task.toString();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 106
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Handles the interaction with the user."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Greeting messages when bot starts up"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String start() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\\n\" + \"Type \\\"help\\\" to see the list of command\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Goodbye messages upon bot exits"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String exit() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"Bye. Hope to see you again soon!\\n\" + \"Program exiting ...\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Messages to be printed when a task is added"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList current list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String printAddTask(TaskList taskList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"Got it. I\u0027ve added this task:\\n\" + taskList.getTask(taskList.getSize() - 1) + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Messages to be printed when a task is deleted"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList current list of tasks"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task tasks that is deleted"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String printDeleteTask(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"Noted. I\u0027ve deleted this task:\\n\" + task + \"\\n\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"Now you have \" + taskList.getSize() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Messages to be printed when a task has been completed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param task task that has been completed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String printDoneTask(Task task) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d task.toString();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Messages to be printed when the user is finding a task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String printFind() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns the error message"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param error error message"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String showError(String error) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return error;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns the help content"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return String"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String help() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"Here is the list of command:\\n\\n\";"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"todo [description] (eg. todo borrow book)\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"deadline [description] /by [day] (eg. return book /by Sunday)\\n\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"event [description] /at [date and time] (eg, project meeting /at 09/09/2020 1400)\\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"list (returns list of tasks)\\n\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"done [number] (choose and complete a task)\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"delete [number] (choose and delete a task)\\n\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"find [word] (search for matching task)\\n\";"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d \"bye (exits the application)\\n\";"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 103
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Bye\" Command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eByeCommand\u003c/code\u003e object corresponds to a command of an input \"bye\"."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Sets the variable isExit to true and prints the exit message."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * It also writes and save the data to the datafile before exiting"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException Exception when there is an error updating the file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return ui.exit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 27
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Command is an abstract class for all commands that the user will be inputting."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * a \u003ccode\u003eCommand\u003c/code\u003e object corresponds to the input of the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Abstract method that executes the command."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException Exception that happens when there is an invalid input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public abstract String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 23
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Deadline\" Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDeadlineCommand\u003c/code\u003e object corresponds to a command with an input of \"Deadline\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description and date as a String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DeadlineCommand class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param date date of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DeadlineCommand(String description, String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new Task based on the description and date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the taskList object and prints the corresponding messages."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Save the task into the datafile."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d new Deadline(description, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.save(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.update();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return ui.printAddTask(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Delete\" Command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDeleteCommand\u003c/code\u003e object corresponds to a command with an input of \"Delete\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * followed by the index of the task to be deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DeleteCommand Class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param index The index of the task to be deleted"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Retrieve task from taskList and remove the task from it."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints corresponding messages and deletes the task from the datafile"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.removeTask(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.delete(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.update();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return ui.printDeleteTask(taskList, task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 43
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DoneException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Done\" command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDoneCommand\u003c/code\u003e object corresponds to a command of an input \"done\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * followed by the index of the task in which is completed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DoneCommand Class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param index The index of task that has been completed."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.index \u003d index - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Retrieve task from taskList and marks the task as completed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints corresponding messages and replace the old task in the datafile"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            storage.replace(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            storage.update();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DoneException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            return ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return ui.printDoneTask(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 48
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Event\" Command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eEventCommand\u003c/code\u003e object that corresponds to a command of an input \"event\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description and date as a String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the EventCommand Class"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param date date of the task"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public EventCommand(String description, String date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new Task based on the description and date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the taskList object and prints the corresponding messages."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Save the task into the datafile."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d new Event(description, date);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.save(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.update();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return ui.printAddTask(taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 48
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.FindException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Find\" Command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eFindCommand\u003c/code\u003e object that corresponds to a command of an input \"find\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description as a String"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the FindCommand Class"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public FindCommand(String description) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Goes through the list of task to search for matching description and"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * assign it to a new Arraylist to be printed out"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @throws DukeException exception to be thrown if there is no matching results"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        String content \u003d \"\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        content +\u003d ui.printFind();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (taskList.printMatching(description).equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new FindException(\"There is no matching results. Please re-enter:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content +\u003d ui.printFind();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            content +\u003d taskList.printMatching(description);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 48
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"List\" Command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eListCommand\u003c/code\u003e object that corresponds to a command of an input \"list\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Prints the current list of task in the taskList"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return taskList.printList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 24
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a \"Todo\" command"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eTodoCommand\u003c/code\u003e object that corresponds to a command of an input \"event\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * and contains a description as a String"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the TodoCommand Class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Creates a new Task based on the description"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Adds the task into the taskList object and prints the corresponding messages."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Save the task into the datafile."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param taskList The TaskList Object that handles the task operations"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param ui The UserInterface object that handles the interaction with users"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param storage The Storage Object that handles reading and writing from the datafile"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        taskList.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.save(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        storage.update();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return ui.printAddTask(taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 45
    }
  },
  {
    "path": "src/main/java/duke/exception/CommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the input is completely"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * not recognised"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class CommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the CommandException Class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public CommandException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the task is already completed"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DoneException Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DoneException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent the base class of all the exceptions"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the DukeException Class."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * of \"todo\", \"deadline\" and \"event\" is not filled."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the EmptyDescriptionException class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public EmptyDescriptionException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/main/java/duke/exception/FindException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when duke is"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * unable to find matching description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class FindException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the FindException Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public FindException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/WrongFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents the exception that is thrown when the format of the input"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * is wrongly written"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class WrongFormatException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the WrongFormatException Class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param errorMessage error message to be thrown"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public WrongFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a Deadline object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eDeadline\u003c/code\u003e corresponds to a task created using the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * \"deadline\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Deadline Class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param by date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Deadline Class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param by date of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Deadline(String description, int status, String by) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String saveText(int status) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"D | \" + status + \" | \" + description + \" | \" + by;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a Event object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eEvent\u003c/code\u003e corresponds to a task created using the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * \"event\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Event Class"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param at date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Event Class"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status status of the task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param at date of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Event(String description, int status, String at) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String saveText(int status) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"E | \" + status + \" | \" + description + \" | \" + at;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 55
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DoneException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represents a task object"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eTask\u003c/code\u003e object corresponds to a task created using the command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * given by the user such as \"todo\", \"event\", \"deadline\"."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    protected int status;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of Task Class"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.status \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor for Task Class"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status status of the task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Task(String description, int status) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns the an icon depending on status"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return an icon"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return (status \u003d\u003d 1 ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void markAsDone() throws DoneException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        if (status \u003d\u003d 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            throw new DoneException(\"Task is already completed. Please re-enter:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            status \u003d 1;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Gets the current status of the task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return status"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public int getStatus() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public abstract String saveText(int status);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 83
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * Represent a Todo object"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * A \u003ccode\u003eTodo\u003c/code\u003e corresponds to a task created using the command"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " * \"todo\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Todo Class"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Constructor of the Todo Class"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status status of the task"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public Todo(String description, int status) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        super(description, status);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string to be written inside the text file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @param status current status of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String saveText(int status) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"T | \" + status + \" | \" + description;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * Returns a string representation of a task object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     * @return string representation of a task object"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 48
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" blendMode\u003d\"SRC_ATOP\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            \u003cFont name\u003d\"SansSerif Regular\" size\u003d\"12.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "         \u003c/font\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "         \u003copaqueInsets\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "         \u003c/opaqueInsets\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            \u003cInsets right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 26
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"400.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 19
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 13
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testDateParser() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"Sep 09 2020 10:00AM\", Parser.dateParser(\"09/09/2020 1000\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void parse_incompleteDescription_exceptionThrown() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Parser.parse(\"todo\"); //missing description"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            assertEquals(\"The description of todo cannot be empty. Please re-enter\", e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void parse_wrongCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            Parser.parse(\"blahh\"); //invalid input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "            assertEquals(\"Im sorry, I do not understand what you mean. Please re-enter:\", e.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 37
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testSaveText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"D | 1 | test1 | Sep 09 2020 10:00AM\", new Deadline(\"test1\", \"Sep 09 2020 10:00AM\").saveText(1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"[D][✘] test1 (by: Sep 09 2020 10:00AM)\", new Deadline(\"test1\", \"Sep 09 2020 10:00AM\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testSaveText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"E | 1 | test1 | Sep 09 2020 10:00AM\", new Event(\"test1\", \"Sep 09 2020 10:00AM\").saveText(1));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"[E][✘] test1 (at: Sep 09 2020 10:00AM)\", new Event(\"test1\", \"Sep 09 2020 10:00AM\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testSaveText() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"T | 0 | test1\", new Todo(\"test1\").saveText(0));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zeranium97"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    public void testStringConversion() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "        assertEquals(\"[T][✘] test1\", new Todo(\"test1\").toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "event project meeting /at Mon 2-4pm"
      }
    ],
    "authorContributionMap": {
      "zeranium97": 4
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "zeranium97": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zeranium97"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "zeranium97": 5
    }
  }
]
