[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static final String INDENT \u003d \"    \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static final ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static void formatResponse(ArrayList\u003cString\u003e response) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        System.out.println(INDENT + LINE);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        for (String resp: response) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            System.out.println(INDENT + \" \" + resp);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        System.out.println(INDENT + LINE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static void formatResponse(String ...response) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        for (String resp: response) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            lst.add(resp);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        formatResponse(lst);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static void formatList(ArrayList\u003cTask\u003e response) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        ArrayList\u003cString\u003e lst \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        lst.add(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        for (int i \u003d 0; i \u003c response.size(); i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            lst.add((i + 1) + \". \" + response.get(i).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        formatResponse(lst);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static void formatDoneTask(Task task) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        formatResponse(\"Nice! I\u0027ve marked this task as done:\", INDENT + task.toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static void formatDeletedTask(Task task) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        formatResponse(\"Noted. I\u0027ve removed this task: \", INDENT + task, \"Now you have \" + (tasks.size() - 1) + \" task\" + (tasks.size() \u003d\u003d 2 ? \"\" : \"s\") + \" in the list.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private static void addTask(String display) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            if (display.length() \u003e\u003d 4 \u0026\u0026 display.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                if (display.length() \u003d\u003d 4 || display.substring(4).isBlank()) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    throw new TaskException(TaskType.TODO, \"description\",  \"cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    tasks.add(new ToDo(display.substring(5)));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            } else if (display.length() \u003e\u003d 8 \u0026\u0026 display.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                int idx \u003d display.indexOf(\" /by \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                if (idx \u003d\u003d -1 || display.length() \u003d\u003d idx + 5 || display.substring(idx + 5).isBlank()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    throw new TaskException(TaskType.DEADLINE, \"time\", \"cannot be identified.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } else if (display.substring(9, idx).isBlank()) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    throw new TaskException(TaskType.DEADLINE, \"description\", \"cannot be empty.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    tasks.add(new Deadline(display.substring(9, idx), display.substring(idx + 5)));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            } else if (display.length() \u003e\u003d 5 \u0026\u0026 display.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                int idx \u003d display.indexOf(\" /at \");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                if (idx \u003d\u003d -1 || display.length() \u003c idx + 5 || display.substring(idx + 5).isBlank()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    throw new TaskException(TaskType.EVENT, \"time\", \"cannot be identified.\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } else if (display.substring(6, idx).isBlank()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    throw new TaskException(TaskType.EVENT, \"description\", \"cannot be empty.\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    tasks.add(new Event(display.substring(6, idx), display.substring(idx + 5)));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                throw new DukeException(\"I don\u0027t know what that means\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            Task task \u003d tasks.get(tasks.size() - 1);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            formatResponse(\"Got it. I\u0027ve added this task: \", INDENT + task.toString(), \"Now you have \" + tasks.size() + \" task\" + (tasks.size() \u003d\u003d 1 ? \"\" : \"s\") + \" in the list.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        } catch (TaskException |  DukeException err) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            formatResponse(err.getMessage());"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        formatResponse(\"Hello! I\u0027m Duke\", \"What can I do for you?\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        String display \u003d \"\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        while (!display.equals(\"bye\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            display \u003d sc.nextLine();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            if (display.equals(\"list\")) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                formatList(tasks);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            } else if (display.length() \u003e\u003d 4 \u0026\u0026 display.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    int idx \u003d Integer.parseInt(String.valueOf(display.charAt(5))) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    tasks.get(idx).markAsDone();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    formatDoneTask(tasks.get(idx));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    formatResponse(\"Task index is empty / out of bounds.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            } else if (display.length() \u003e\u003d 6 \u0026\u0026 display.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    int idx \u003d Integer.parseInt(String.valueOf(display.charAt(7))) - 1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    formatDeletedTask(tasks.get(idx));"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    tasks.remove(idx);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                    System.out.println(\"Task index is empty / out of bounds.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            } else if (!display.equals(\"bye\")) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "                addTask(display);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "       formatResponse(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "       sc.close();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 107,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        super(\"☹ OOPS!!! I\u0027m sorry, but \" + msg + \" :-(\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    TODO{"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    },"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    DEADLINE{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    },"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    EVENT{"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    private final TaskType taskType;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public Task(String description, TaskType taskType) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        return \"[\" + (isDone ? \"\\u2713\" : \"\\u2718\") + \"]\"; //return tick or X symbols"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        return getStatusIcon() + \" \" + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 46
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "public class TaskException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    TaskException(TaskType taskType, String taskProperty, String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        super(\"☹ OOPS!!! The \" + taskProperty + \" of a \" + taskType.toString() + \" \" + msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 5
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 12
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "if ! ("
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "  )"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "chrystalquek": 4
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chrystalquek"
        },
        "content": "../src/main/java/ToDo.java"
      }
    ],
    "authorContributionMap": {
      "chrystalquek": 5
    }
  }
]
