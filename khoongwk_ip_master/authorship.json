[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public static ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Main control system which loops user input until user exits with the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * command \u0027bye\u0027."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param args args supplied to main."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String introduction \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                \"Hi, I\u0027m your Professor, Martin.\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(introduction);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        // Loop program until command \u0027bye\u0027 is entered as input."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Enter input: \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    System.out.println(\"Bye, see you soon. Exiting...\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    listAllTasks();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                } else if (input.length() \u003e\u003d 8 \u0026\u0026 input.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    if (input.substring(8).length() \u003e 1) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        String description \u003d input.substring(9);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        String[] processedDesc \u003d processTimedTask(description);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        Deadline d \u003d new Deadline(processedDesc[0], processedDesc[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        addTask(d);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        throw new DukeException(\"The description of a deadline cannot be empty.\");                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                } else if (input.length() \u003e\u003d 6 \u0026\u0026 input.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    if (input.substring(6).length() \u003e 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        String numString \u003d input.substring(7);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        int entryNum \u003d Integer.parseInt(numString);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        deleteTask(entryNum);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        throw new DukeException(\"Invalid number for delete command.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                } else if (input.length() \u003e\u003d 5 \u0026\u0026 input.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    if (input.substring(5).length() \u003e 1) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        String description \u003d input.substring(6);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        String[] processedDesc \u003d processTimedTask(description);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        Event e \u003d new Event(processedDesc[0], processedDesc[1]);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        addTask(e);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                } else if (input.length() \u003e\u003d 4) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    String command \u003d input.substring(0, 4);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    // Navigate to either done or to-do."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    switch (command) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        case \"done\":"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            if (input.substring(4).length() \u003e 1) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                // For processing \"done\" command with the corresponding integer value."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                String numString \u003d input.substring(5);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                int entryNum \u003d Integer.parseInt(numString);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                markTaskDone(entryNum);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                throw new DukeException(\"Invalid number for done command.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        case \"todo\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            if (input.substring(4).length() \u003e 1) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                String description \u003d input.substring(5);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                Todo d \u003d new Todo(description);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                addTask(d);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Exception occurred during main loop: \" + e);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Lists all tasks currently stored in the system."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public static void listAllTasks() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        int numEntries \u003d taskList.size();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        if (numEntries \u003d\u003d 0) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"No tasks found.\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int i \u003d 0; i \u003c numEntries; i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Stores task into the ArrayList."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param t Task to be stored into the ArrayList."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public static void addTask(Task t) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added this task: \" + t);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Given a particular task number, mark that task in the task list as done."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * as done."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param taskNum The task number to mark as done."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public static void markTaskDone(int taskNum) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (taskNum \u003c 0 || taskNum \u003e taskList.size()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                throw new DukeException(\"Task number does not exist.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                Task t \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while marking task as done: \" + e);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public static void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Noted. I have removed this task:\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(taskList.get(taskNum - 1));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                throw new DukeException(\"Invalid task number for current task list.\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while deleting task: \" + e);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Helper function to process a timed task description (Event, Deadline) and"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * split it into 2 strings, the description and the task date."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param str The raw string to be processed."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @return A String array of size 2. Index 0 contains the task\u0027s description,"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * index 1 contains the date of the task."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public static String[] processTimedTask(String str) {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String[] result \u003d new String[2];"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // Split the string first then loop through to find the stop point at either /at or /by."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            String[] arr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int indexToStop \u003d -1;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (arr[i].equals(\"/at\") || arr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    indexToStop \u003d i;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (indexToStop \u003d\u003d -1) throw new DukeException(\"Incorrect Input for timed task.\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // Use StringBuilder Class to recreate the description and time separately."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int j \u003d 0; j \u003c indexToStop; j++) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                sb.append(arr[j]);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (j !\u003d indexToStop - 1) sb.append(\" \");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            result[0] \u003d sb.toString();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int k \u003d indexToStop + 1; k \u003c arr.length; k++) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                sb.append(arr[k]);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (k !\u003d arr.length - 1)  sb.append(\" \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            result[1] \u003d sb.toString();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while processing timed task: \" + e);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 188,
      "-": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.errorMsg \u003d msg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    String eventDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.eventDate \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventDate + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[\" + (isDone ? \"✓\" : \"X\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 19
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "todo first task"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "event second task /at Aug 20th 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "deadline 3rd task /by Saturday 4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 1,
      "-": 20
    }
  }
]
