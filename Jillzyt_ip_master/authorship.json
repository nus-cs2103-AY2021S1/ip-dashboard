[
  {
    "path": "Duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * The Deadline class that represents a Deadline task."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " *"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @author Zeng Yu Ting"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @since 2020-15-08"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public Deadline(String description, String dueDate) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 19
    }
  },
  {
    "path": "Duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "import java.util.regex.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * The Best2013TBot program that implements a chatbot."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @author Zeng Yu Ting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @since 2020-15-08"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    private static String indent \u003d \"   \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    private static String line \u003d indent + \"----------------------------\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method greets the user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public static void greet() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"Hello! I\u0027m Best2103/TBot\\n\" + indent + \"What can I do for you?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method adds todoTask for the bot."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @return taskName name of the task"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String addTodo(String taskName) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        taskList.add(new Todo(taskName));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"  \" + taskList.get(taskList.size() - 1));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        displayNoOfTasks();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method adds deadlineTask for the bot."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @param input string to be cleaned and parsed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @return boolean true or false depending on the success"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public boolean addDeadline(String input) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        input.replace(\"deadline\", \"\").trim();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        String[] splittedInput \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        taskList.add(new Deadline(splittedInput[0], splittedInput[1].replace(\"by\", \"\").trim()));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"  \" + taskList.get(taskList.size()-1));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        displayNoOfTasks();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method adds eventTask for the bot."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @param input string to be cleaned and parsed"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @return boolean true or false depending on the success"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public boolean addEvent(String input) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        input.replace(\"event\", \"\").trim();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        String[] splittedInput \u003d input.split(\"/\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        taskList.add(new Event(splittedInput[0], splittedInput[1].replace(\"at\", \"\").trim()));"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"  \" + taskList.get(taskList.size()-1));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        displayNoOfTasks();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public void displayNoOfTasks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                indent + \"Now you have \" + taskList.size() + (taskList.size() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method adds task for the bot."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @param taskName name of the task"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @return taskName name of the task"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String addTask(String taskName) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        taskList.add(new Task(taskName));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"Added: \" + taskName);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return taskName;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method displays the task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public void displayList() {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "            System.out.println(\"There\u0027s nothing in your list\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "            return ;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(indent + \"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "            System.out.println(indent + (i+1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method does verification for description."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @param type Type of task"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @throws DukeException Customized exception"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public void verificationDescription(String type) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        throw new DukeException(\"The description of a \" + type + \" task cannot be empty.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method responds to the user\u0027s input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @throws DukeException Customized exception"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public void respond() throws DukeException {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        Scanner userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        while (userInput.hasNext()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                String input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                // Split the string"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                String[] inputList \u003d input.split(\" \");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                // Use switch case"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                // If input does not contain any of the actions"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (!(input.contains(\"bye\") || input.contains(\"done\") || input.contains(\"todo\")"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        || input.contains(\"deadline\") || input.contains(\"list\") || input.contains(\"event\") || input.contains(\"delete\"))) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    System.out.println(indent + \"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    int number \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    if (number \u003e\u003d 0 \u0026\u0026 number \u003c taskList.size()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        System.out.println(indent+\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        taskList.get(number).markAsDone();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        System.out.println(line);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    int number \u003d Integer.parseInt(inputList[1]) - 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    if (number \u003e\u003d 0 \u0026\u0026 number \u003c taskList.size()) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        System.out.println(indent+\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        System.out.println(indent+taskList.get(number));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        taskList.remove(number);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        displayNoOfTasks();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"list\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    displayList();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                // Verification for description"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList.length \u003c 2) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    verificationDescription(inputList[0]);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    addTodo(input.replace(\"todo\", \"\").trim());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    // Check whether the string is correct"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    if (!Pattern.matches(\"(deadline)+\\\\s+([a-z])\\\\w+\\\\s+.+(\\\\/by)+\\\\s+.+\", input)) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        throw new DukeException(\"Incorrect format\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    addDeadline(input);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                if (inputList[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    // Check whether the string is correct"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    if (!Pattern.matches(\"(event)+\\\\s+([a-z])\\\\w+\\\\s+.+(\\\\/at)+\\\\s+.+\", input)) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                        throw new DukeException(\"Incorrect format\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    addEvent(input);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    System.out.println(line);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                throw new DukeException(\"I don\u0027t know what to do :-(\");"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "            } catch (Exception m) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                System.out.println(indent + m);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "                System.out.println(line);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "            }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        }"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        duke.greet();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        duke.respond();"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 208,
      "-": 3
    }
  },
  {
    "path": "Duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * Duke exception is customised exception class for Bot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @author Zeng Yu Ting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @since 2020-15-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    // Type of exceptions to handle"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    // Missing input"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    // Nothing is typed"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    // Sth else is typed other than todo and"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    private String errorMesage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.errorMesage \u003d errorMessage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return \"☹ OOPS!!! \" + errorMesage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 24
    }
  },
  {
    "path": "Duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * The Event class that represents a event task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @author Zeng Yu Ting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @since 2020-15-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public Event(String description, String dueDate) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at: \" + dueDate + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 20
    }
  },
  {
    "path": "Duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * The task class that represents a task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @author Zeng Yu Ting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @since 2020-15-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public Task() {}"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method gets the status icon of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @return String of status icon"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * This method marks the task as done."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     * @return true value"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public boolean markAsDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 43
    }
  },
  {
    "path": "Duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "package Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * The Todo class that represents a Todo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @author Zeng Yu Ting"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @version 1.0"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " * @since 2020-15-08"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 15
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../Duke/Task.java ../Duke/Event.java ../Duke/Deadline.java ../Duke/Todo.java ../Duke/DukeException.java ../Duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "java -classpath ../bin Duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Jillzyt"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Jillzyt": 3,
      "-": 35
    }
  }
]
