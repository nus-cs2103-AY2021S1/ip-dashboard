[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Deadline(String name, LocalDateTime time, boolean status) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[D]\" + super.getStatus() + \" (by: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 27
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static DateTimeFormatter FORMATTER \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static String linePrinter() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return (\"\\n-------------------------------------------------------------------------\\n\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static String start() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        String s \u003d (\"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                \"What can I do for you?            \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return linePrinter() +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                s.replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                linePrinter();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static String[] splitString(String s) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return s.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        fw.write(textToAdd + System.lineSeparator());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static void readFromFile(String filePath, ArrayList\u003cTask\u003e ls) throws FileNotFoundException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String line \u003d s.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String[] arr \u003d line.split(\"\\\\*\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String task \u003d arr[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            if (task.equals(\"E\")) { // case where the task is an event"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                boolean status \u003d arr[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String todo \u003d arr[2];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                LocalDateTime deadline \u003d LocalDateTime.parse(arr[3], FORMATTER);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                ls.add(new Event(todo, deadline, status));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else if (task.equals(\"T\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                boolean status \u003d arr[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String todo \u003d arr[2];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                ls.add(new ToDo(todo, status));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                boolean status \u003d arr[1].equals(\"\\u2713\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String todo \u003d arr[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                LocalDateTime deadline \u003d LocalDateTime.parse(arr[3], FORMATTER);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                ls.add(new Deadline(todo, deadline, status));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public static void duker() throws IOException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String endCommand \u003d \"bye\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String listCommand \u003d \"list\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String doneCommand \u003d \"done\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String deleteCommand \u003d \"delete\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String toDoCommand \u003d \"todo\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String deadlineCommand \u003d \"deadline\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String eventCommand \u003d \"event\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            readFromFile(\"duke.txt\", ls);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            System.out.println(start());"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            Scanner in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String s \u003d in.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            while (!s.equals(endCommand)) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    System.out.println(linePrinter());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    if (s.equals(listCommand)) { // the case where tasks are listed"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        System.out.println((\"Here are the tasks in your list:\").replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        for (Task t : ls) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            System.out.println("
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    ((ls.indexOf(t) + 1) + \". \" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            t.getStatus()).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        String[] words \u003d s.split(\" \", 2);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        if (words[0].equals(doneCommand)) { // the case where something is done"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (words.length \u003c 2) { // if nothing written after done"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeDoneException(\"Nothing\u0027s done? :s\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                int number \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                if (number \u003e ls.size()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    throw new DukeNotSureException(\"This task doesn\u0027t seem to exist? :s\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    Task oldTask \u003d ls.get(number - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    oldTask.checkTask();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    System.out.println((\"Nice! I\u0027ve marked this task as done:\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            \"\\n\" +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            oldTask.getStatus()).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else if (words[0].equals(deleteCommand)) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (words.length \u003c 2) { // if nothing written after done"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeDoneException(\"Nothing\u0027s deleted? :s\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                int number \u003d Integer.parseInt(words[1]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                if (number \u003e ls.size()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    throw new DukeNotSureException(\"This task doesn\u0027t seem to exist? :s\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    Task oldTask \u003d ls.get(number - 1);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    ls.remove(number - 1);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    String thing \u003d \"Running away from your responsibilities huh. Deleted:\" +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            \"\\n\" +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            oldTask.getStatus().replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        } else { // the case where tasks are added"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            if (words[0].equals(toDoCommand)) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    throw new DukeNotSureException(\"What are you trying to do :s\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    ToDo newTD \u003d new ToDo(words[1], false);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    ls.add(newTD);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    String thing \u003d \"Alright then, add more things to your ever-growing list of tasks:\\n\" +"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            newTD.getStatus().replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else if (words[0].equals(deadlineCommand)) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    throw new DukeNotSureException(\"What are deadlines? :s\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    String[] stuff \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    LocalDateTime day \u003d LocalDateTime.parse(stuff[1], FORMATTER);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    Deadline newDL \u003d new Deadline(stuff[0], day, false);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    ls.add(newDL);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    String thing \u003d \"Alright then, add more things to your ever-growing list of tasks:\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            + newDL.getStatus().replaceAll(\"(?m)^\", \"\\t\")"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            + \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else if (words[0].equals(eventCommand)) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                if (words.length \u003c 2) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    throw new DukeNotSureException(\"What event are you making? :s\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                } else {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    String[] stuff \u003d words[1].split(\" /by \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    LocalDateTime day \u003d LocalDateTime.parse(stuff[1], FORMATTER);"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    Event newE \u003d new Event(stuff[0], day, false);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    ls.add(newE);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    String thing \u003d \"Alright then, add more things to your ever-growing list of tasks:\\n\""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            + newE.getStatus().replaceAll(\"(?m)^\", \"\\t\")"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                            + \"\\nNow you have \" + ls.size() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                    System.out.println(thing.replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                                throw new DukeNotSureException(\"Man I don\u0027t know what you want? :s\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } catch (DukeDoneException | DukeNotSureException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    System.out.println(\"Can\u0027t read your date man. Put it like this ok? --\u003e 25 Mar 2020 1930\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                System.out.println(linePrinter());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                s \u003d in.nextLine();"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String tasks \u003d \"\";"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            for (Task t : ls) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String check \u003d \"\";"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (t.isComplete()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    check \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    check \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String toAdd \u003d t.getType() + \"*\" + check + \"*\" + t.toString();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                String addition \u003d \"\";"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                if (t.getTime() \u003d\u003d null) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    addition \u003d \"\\n\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    addition \u003d \"*\" + t.getTime().format(FORMATTER) + \"\\n\";"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                tasks \u003d tasks + toAdd + addition;"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            writeToFile(\"duke.txt\", tasks);"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            String byeText \u003d \"Running away huh??\";"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            System.out.println(linePrinter() +"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    byeText.replaceAll(\"(?m)^\", \"\\t\") +"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                    linePrinter());"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            File f \u003d new File(\"duke.txt\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            duker();"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "            System.out.println(\"Whoops! Some kind of error :/ see here: \" + e.getMessage());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "liuyxxy": 216
    }
  },
  {
    "path": "src/main/java/DukeDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeDoneException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeDoneException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super((\"ERROR!! \" + message).replaceAll(\"(?m)^\", \"\\t\"));"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 5
    }
  },
  {
    "path": "src/main/java/DukeNotSureException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class DukeNotSureException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public DukeNotSureException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected LocalDateTime time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Event(String name, LocalDateTime time, boolean status) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[E]\" + super.getStatus() + \" (at: \""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "                + this.time.format(DateTimeFormatter.ofPattern(\"d MMM yyyy kkmm\")) + \")\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 27
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected String name;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public Task(String name, boolean status) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.isDone \u003d status;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.isDone? (\"[\\u2713] \" + toString()) : (\"[\\u2718] \" + toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public void checkTask() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        this.isDone \u003d !this.isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public LocalDateTime getTime() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public boolean isComplete() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 37
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public ToDo(String name, boolean status) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        super(name, status);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"[T]\" + super.getStatus();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "liuyxxy": 6
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "liuyxxy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java ../src/main/java/Task.java  ../src/main/java/Event.java ../src/main/java/ToDo.java ../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "liuyxxy": 1
    }
  }
]
