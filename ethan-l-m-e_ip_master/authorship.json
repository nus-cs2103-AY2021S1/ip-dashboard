[
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 5
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    String getStringType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    Optional\u003cString\u003e getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return Optional.of(this.by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 25
    }
  },
  {
    "path": "src/main/java/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    DeadlineCommand(String description, String deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        Task t \u003d new Deadline(description, deadline);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.addTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 23
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(taskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.deleteTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Task does not exist/invalid task number.\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 25
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(taskNumber);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            if (t.isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException(\"Task is already marked as done.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            t.markAsDone();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.doneTaskMessage(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Task does not exist/invalid task number.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 28
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.greetingMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                ui.showLine(); // show the divider line (\"_______\")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                storage.store(tasks);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if(c.isExit()) { running \u003d false; }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        new Duke(\"./data/duke.txt\").run();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 6,
      "ethan-l-m-e": 33
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    String e;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    DukeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.e \u003d \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    DukeException(String e) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.e \u003d \"☹ OOPS!!! \" + e;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return e;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    String getStringType() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    Optional\u003cString\u003e getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return Optional.of(this.at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 25
    }
  },
  {
    "path": "src/main/java/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String eventDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public EventCommand(String description, String eventDate) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.eventDate \u003d eventDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        Task t \u003d new Event(description, eventDate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.addTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 23
    }
  },
  {
    "path": "src/main/java/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.exitMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 13
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.listTasksMessage(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 13
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String[] arr \u003d fullCommand.split(\" \", 2);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String prefix \u003d arr[0];"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String suffix;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (arr.length \u003e 1) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            suffix \u003d arr[1];"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            suffix \u003d \"\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        switch (prefix) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case TodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareTodo(suffix);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case DeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareDeadline(suffix);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case EventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareEvent(suffix);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareDone(suffix);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareDelete(suffix);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return prepareList(suffix);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                return new ExitCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                throw new DukeException();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareTodo(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (suffix.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new TodoCommand(suffix);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareDeadline(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String[] suffixArray \u003d suffix.split(\"/by\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new DeadlineCommand(suffixArray[0].strip(), suffixArray[1].strip());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Ensure that deadlines have correct description.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareEvent(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            String[] suffixArray \u003d suffix.split(\"/at\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new EventCommand(suffixArray[0].strip(), suffixArray[1].strip());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"Ensure that events have correct description.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareDone(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (!suffix.matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"done should be followed by a single task number.\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new DoneCommand(Integer.parseInt(suffix));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareDelete(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (!suffix.matches(\"\\\\d+\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException(\"done should be followed by a single task number.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(suffix));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private static Command prepareList(String suffix) throws DukeException {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        if (suffix.length() !\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 81
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void store(TaskList tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            FileWriter writer \u003d new FileWriter(\".\\\\data\\\\duke.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            StringBuilder textToWrite \u003d new StringBuilder();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d tasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t \u003d tasks.retrieve(i);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String nextEntry \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        t.getStringType() + \" / \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        t.isDoneToString() + \" / \" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        t.getDescription() + t.getDate().map(result -\u003e \" / \" + result).orElse(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                textToWrite.append(nextEntry).append(\"\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            writer.write(String.valueOf(textToWrite));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String nextEntryLine \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String[] nextEntryArray \u003d nextEntryLine.split(\" / \", 4);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String type \u003d nextEntryArray[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                String description \u003d nextEntryArray[2];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                int length \u003d nextEntryArray.length;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                boolean isDone \u003d nextEntryArray[1].equals(\"1\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                Task t;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                if (type.equals(\"T\") \u0026\u0026 length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t \u003d new Todo(description);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    if (isDone) { t.markAsDone(); }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else if (type.equals(\"D\") \u0026\u0026 length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    String by \u003d nextEntryArray[3];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else if (type.equals(\"E\") \u0026\u0026 length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    String at \u003d nextEntryArray[3];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    t \u003d new Event(description, at);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    tasks.add(t);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                    throw new DukeException(\"Check duke.txt storage file integrity:\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            return new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 76
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String isDoneToString() { return isDone ? \"1\" : \"0\"; }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    abstract String getStringType();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    abstract Optional\u003cString\u003e getDate();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.getDescription();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 34
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "         tasks \u003d new ArrayList\u003c\u003e(100);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public int getNumOfTasks() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Task retrieve(int i) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        assert i \u003e 0 \u0026\u0026 i \u003c\u003d this.getNumOfTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return tasks.get(i - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.tasks.add(t);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void remove(int i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        assert i \u003e 0 \u0026\u0026 i \u003c\u003d this.getNumOfTasks();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.remove(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 32
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    String getStringType() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    Optional\u003cString\u003e getDate() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 22
    }
  },
  {
    "path": "src/main/java/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private final String commandSuffix;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    TodoCommand(String commandSuffix) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        this.commandSuffix \u003d commandSuffix;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        Task t \u003d new Todo(commandSuffix);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        ui.addTaskMessage(t, tasks);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 21
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    private Scanner sc;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "      this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"#############################################################\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void showError(DukeException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(e.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"███████╗██████╗░██████╗░░█████╗░██████╗░  ░█████╗░████████╗  ██╗░░░░░░█████╗░░█████╗░██████╗░\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"██╔════╝██╔══██╗██╔══██╗██╔══██╗██╔══██╗  ██╔══██╗╚══██╔══╝  ██║░░░░░██╔══██╗██╔══██╗██╔══██╗\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"█████╗░░██████╔╝██████╔╝██║░░██║██████╔╝  ███████║░░░██║░░░  ██║░░░░░██║░░██║███████║██║░░██║\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"██╔══╝░░██╔══██╗██╔══██╗██║░░██║██╔══██╗  ██╔══██║░░░██║░░░  ██║░░░░░██║░░██║██╔══██║██║░░██║\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"███████╗██║░░██║██║░░██║╚█████╔╝██║░░██║  ██║░░██║░░░██║░░░  ███████╗╚█████╔╝██║░░██║██████╔╝\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"╚══════╝╚═╝░░╚═╝╚═╝░░╚═╝░╚════╝░╚═╝░░╚═╝  ╚═╝░░╚═╝░░░╚═╝░░░  ╚══════╝░╚════╝░╚═╝░░╚═╝╚═════╝░\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void greetingMessage() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String logo \u003d \" ____        _\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \" Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \" What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"____________________________________________________________\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void addTaskMessage(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"Got it. I\u0027ve added this task:\\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"  \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"Now you have \" + tasks.getNumOfTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void doneTaskMessage(Task t) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \"Nice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        \"  \" + t.toString();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void deleteTaskMessage(Task t, TaskList tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        String message \u003d"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                \"Noted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"  \" + t.toString() + \"\\n\" +"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "                        \"Now you have \" + tasks.getNumOfTasks() + \" tasks in the list.\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void listTasksMessage(TaskList tasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d tasks.getNumOfTasks(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            Task t \u003d tasks.retrieve(i);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "            System.out.format(\"%d.%s\\n\", i, t.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    public void exitMessage() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 79
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "done 5000"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "blah"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "event 123456 1234 1123"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ethan-l-m-e": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "del data"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ethan-l-m-e"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 19,
      "ethan-l-m-e": 3
    }
  }
]
