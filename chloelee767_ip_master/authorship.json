[
  {
    "path": "src/main/java/duke/Bot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " * Interface which defines how a Function can control the bot"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public interface Bot {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void stop();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void sayLine(String string);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void sayLines(List\u003cString\u003e string);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 14
    }
  },
  {
    "path": "src/main/java/duke/BotClass.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " * Implementation of the Bot interface. Includes getters for Duke to actually"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " * execute the actions."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class BotClass implements Bot {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private boolean stop;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private List\u003cString\u003e response;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public BotClass() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        stop \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        response \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void stop() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        stop \u003d true;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void sayLine(String string) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        response.add(string);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void sayLines(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        response.addAll(strings);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public List\u003cString\u003e getLines() { return response; }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public boolean stopped() { return stop; }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 37
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        new Duke().run();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            \" ____        _        \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        ui.say(\"Hello, I\u0027m Duke. What can I do for you?\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        boolean stop \u003d false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        while (!stop) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            BotClass bot \u003d new BotClass();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            Parser.parse(input).execute(bot, list);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            ui.say(bot.getLines());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            if (bot.stopped()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                stop \u003d true;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 7,
      "chloelee767": 35
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        bot.sayLine(\"Got it, I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        bot.sayLine(\"  \" + task.displayString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        bot.sayLine(\"Now you have \" + list.size() + \" item(s) in your list.\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 22
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        bot.sayLine(\"Bye! Hope to see you again soon!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        bot.stop();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 14
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 10
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"Nothing to delete, your list is empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else if (index \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"That\u0027s not a valid number, please give a number from 1 to \" + list.size() + \".\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else if (index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(String.format(\"That\u0027s not a valid number, you only have %d item(s) in your list.\", list.size()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            Task t \u003d list.remove(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"  \" + t.displayString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"Now you have \" + list.size() + \" item(s) in your list.\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 30
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "       this.index \u003d index;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"Your list is empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else if (index \u003c 0) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"That\u0027s not a valid number, please give a number from 1 to \" + list.size() + \".\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else if (index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(String.format(\"That\u0027s not a valid number, you only have %d item(s) in your list.\", list.size()));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            Task t \u003d list.get(index);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            if (t.isDone()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                bot.sayLine(\"You\u0027ve already completed this task:\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                t.markAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                bot.sayLine(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"  \" + t.displayString());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ErrorCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class ErrorCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private List\u003cString\u003e message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public ErrorCommand(List\u003cString\u003e message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public ErrorCommand(String message) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this(Arrays.asList(message));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        bot.sayLines(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 24
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.Bot;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void execute(Bot bot, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"There are no items in your list.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            bot.sayLine(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                bot.sayLine((i + 1) + \". \" + list.get(i).displayString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 20
    }
  },
  {
    "path": "src/main/java/duke/parser/DukeParsingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " * This exception is handled within the route function in the Duke class."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class DukeParsingException extends Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private List\u003cString\u003e dukeMessage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public DukeParsingException(List\u003cString\u003e message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        super(String.join(\"\\n\", message));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.dukeMessage \u003d message;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public DukeParsingException(String message) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this(Arrays.asList(message));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public List\u003cString\u003e getDukeMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return dukeMessage;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 24
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.ErrorCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public static Command parse(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        input \u003d input.strip();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        String[] split \u003d input.split(\"\\\\s+\", 2); // guranteed to contain at least \"\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        String command \u003d split[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        String args \u003d split.length \u003d\u003d 2 ? split[1] : \"\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                ensureNoArgs(args, command);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                ensureNoArgs(args, command);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                int index \u003d parseTaskNumber(args, \"you have completed\", \"done 1\") - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                int index \u003d parseTaskNumber(args, \"you want to remove\", \"delete 1\") - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                if (args.isEmpty()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                    return new ErrorCommand("
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                            \"Couldn\u0027t add todo! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new AddCommand(new Task(args));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                String[] argsSplit \u003d parseDeadlineEventArgs(args, \"/by\", command,"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                        \"deadline \u003cdescription\u003e /by \u003cdate\u003e\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new AddCommand(new Deadline(argsSplit[0], argsSplit[1]));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                String[] argsSplit \u003d parseDeadlineEventArgs(args, \"/at\", command,"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                        \"event \u003cdescription\u003e /at \u003cdate\u003e\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new AddCommand(new Event(argsSplit[0], argsSplit[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else if (input.isBlank()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new ErrorCommand(\"You need to tell me what you want me to do!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                return new ErrorCommand(\"Sorry, I don\u0027t understand that!\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } catch (DukeParsingException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            return new ErrorCommand(e.getDukeMessage());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    // helpers for route function"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private static void ensureNoArgs(String args, String commandName) throws DukeParsingException {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        if (!args.isEmpty()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            throw new DukeParsingException("
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                    String.format(\"I don\u0027t understand that. Did you mean %s?\", commandName));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private static int parseTaskNumber(String args, String taskDescription, String example)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            throws DukeParsingException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            return Integer.parseInt(args);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            throw new DukeParsingException("
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                    Arrays.asList(String.format(\"You need to tell me the number of the task %s.\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                            taskDescription), \"Eg. \" + example));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private static String[] parseDeadlineEventArgs(String args, String splitAround, String taskType,"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                                            String example) throws DukeParsingException {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        String[] argsSplit \u003d args.split(\"\\\\s+\" + splitAround + \"\\\\s+\", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        if (argsSplit.length !\u003d 2 || argsSplit[0].isBlank() || argsSplit[1].isBlank()) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            String n \u003d taskType.matches(\"^a|e|i|o|u\") ? \"n\" : \"\"; // starts with vowel"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            throw new DukeParsingException(Arrays"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                    .asList(String.format(\"Couldn\u0027t add %s! To add a%s %s, talk to me using the\","
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "                            taskType, n, taskType), \"format: \" + example));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return argsSplit;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 91
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public String displayString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return super.displayString() + String.format(\" (by: %s)\", by);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    protected String taskTypeString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    private String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public String displayString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return super.displayString() + String.format(\" (at: %s)\", at);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    protected String taskTypeString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    protected boolean done;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        done \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return done;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        done \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public String displayString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        String doneString \u003d done ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return String.format(\"[%s][%s] %s\", taskTypeString(), doneString, description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    protected String taskTypeString() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 28
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void say(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        final String indent \u003d \"  \";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        final String separator \u003d indent + \"_\".repeat(68);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        System.out.println(separator);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        for (String s : strings) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "            System.out.println(indent + s);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        System.out.println(separator);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    public void say(String string) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "        say(Arrays.asList(string));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 22
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "todo sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "deadline cs2103 ip level 6 /by Thu 20 Aug 23:59"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "event some other event /at TBD"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "yeet"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "done"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "done zz"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "deadline something"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "deadline something /by "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "deadline    /by"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "deadline    /by sometime"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "event"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chloelee767"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chloelee767": 23
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "# if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chloelee767"
        },
        "content": "if ! javac ../src/main/java/duke/*/*.java ../src/main/java/duke/*.java  -Xlint:none -d ../bin"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "chloelee767": 2
    }
  }
]
