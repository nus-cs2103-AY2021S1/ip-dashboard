[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    systemProperty \"file.encoding\", \"utf-8\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "tasks.withType(Test) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    scanForTestClasses \u003d false"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    include \"**/*Test.class\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 10,
      "-": 45
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * The Duke programme implements an application that allow users"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * to track 3 different types of tasks, namely Todo, Deadline"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * and Event to a list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * @author Ngoh Wei Yue"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * @version 0.1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * @since 14-08-2020"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Storage to store existing tasks in hard disk */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** TaskList to store tasks in a data structure */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final TaskList tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Ui to interact with the users */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eDuke\u003c/code\u003e object."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Runs and terminates the application when user calls for it."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.sendGreeting();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand, tasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                isExit \u003d c.getIsExit();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                ui.showError(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                ui.showLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Runs the application. This is the main method which"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * serves as the entry point of the Duke application."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 74,
      "-": 1
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidTaskDateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to add new Deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class AddDeadlineCommand extends Command {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Description of Deadline to be added */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** String representation of date and time of Deadline to be added */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final String by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eAddDeadlineCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Description of Deadline to be added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param by String representation of date and time of Deadline to be added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public AddDeadlineCommand(String description, String by) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Adds a Deadline to the TaskList and notify the user if successful."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws InvalidTaskDateTimeException If date and time format is invalid."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskDateTimeException {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            Task task \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            ui.printMessage(\"Got it. I\u0027ve added this deadline: \\n\\t   \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + task + \"\\n\\t \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + \"Now you have \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + getTaskDescription(tasks.getNumberOfTask())"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + \" in the list.\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidTaskDateTimeException();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a String description of the number of Task."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param noOfTask Number of Task in TaskList"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return String description of the number of Task."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static String getTaskDescription(int noOfTask) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (noOfTask \u003e 1) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" tasks\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" task\";"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 76
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidTaskDateTimeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to add new Event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class AddEventCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Description of Event to be added */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** String representation of date and time of Event to be added */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final String at;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eAddEventCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Description of Event to be added."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param at String representation of date and time of Event to be added."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public AddEventCommand(String description, String at) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Adds an Event to the TaskList and notify the user if successful."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws InvalidTaskDateTimeException If date and time format is invalid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            Task task \u003d new Event(description, at);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            tasks.addTask(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            ui.printMessage(\"Got it. I\u0027ve added this event: \\n\\t   \""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + task + \"\\n\\t \""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + \"Now you have \""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + getTaskDescription(tasks.getNumberOfTask())"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    + \" in the list.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidTaskDateTimeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a String description of the number of Task."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param noOfTask Number of Task in TaskList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return String description of the number of Task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static String getTaskDescription(int noOfTask) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (noOfTask \u003e 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" tasks\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" task\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 75
    }
  },
  {
    "path": "src/main/java/duke/command/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to add new Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class AddTodoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Description of Todo to be added */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eAddTodoCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Description of Todo to be added."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public AddTodoCommand(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Adds a Todo to the TaskList and notify the user if successful."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task \u003d new Todo(description);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.printMessage(\"Got it. I\u0027ve added this todo: \\n\\t   \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + task + \"\\n\\t \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"Now you have \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + getTaskDescription(tasks.getNumberOfTask())"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a String description of the number of Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param noOfTask Number of Task in TaskList"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return String description of the number of Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static String getTaskDescription(int noOfTask) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (noOfTask \u003e 1) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" tasks\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" task\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 61
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to say bye to the user before exiting the programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eByeCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Says bye to the user before exiting the programme."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.printMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a general action to be completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Boolean value to indicate if the Command should exit the programme */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param isExit Indicates if the command should exit the programme."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Command(boolean isExit) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Represents a general method that carries out the action of the Command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If error specific to Duke occurs."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public abstract void execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the Command\u0027s isExit value."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return isExit value."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"Duke Command\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to delete a Task from TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Index of Task to be deleted */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eDeleteCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param taskNumber Index of Task to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public DeleteCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Deletes a Task from the TaskList and notify the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        int noOfTask \u003d tasks.getNumberOfTask() - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.printMessage(\"Noted. I\u0027ve removed this task:\\n\\t   \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + tasks.getTask(taskNumber) + \"\\n\\t \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"Now you have \""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + getTaskDescription(noOfTask)"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.removeTask(taskNumber);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a String description of the number of Task."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param noOfTask Number of Task in TaskList"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return String description of the number of Task."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static String getTaskDescription(int noOfTask) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String taskDescription \u003d \"\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (noOfTask \u003e 1) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" tasks\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            taskDescription \u003d noOfTask + \" task\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 60
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to mark a Task from TaskList as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Index of Task to be marked as done */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private int taskNumber;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eDoneCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param taskNumber Index of Task to be marked as done."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public DoneCommand(int taskNumber) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Marks a Task from the TaskList as done and notify the user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.doTask(taskNumber);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.printMessage(\"Nice! I\u0027ve marked this task as done:\\n\\t   \""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + tasks.getTask(taskNumber));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 40
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to search for Task that contains keywords input by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Keywords to search for */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final String content;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eFindCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param content Keywords to search for."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public FindCommand(String content) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Search for Task in TaskList containing keywords input by user and list them out."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        StringBuffer sb \u003d new StringBuffer();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        sb.append(\"Here are the matching tasks in your list:\\n\\t \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        boolean hasTasks \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            CharSequence contentToFind \u003d content.subSequence(0, content.length());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            String taskDescription \u003d t.getDescription();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (taskDescription.contains(contentToFind)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                hasTasks \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                sb.append(index).append(\".\").append(t.toString()).append(\"\\n\\t \");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                index++;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (hasTasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            ui.printMessage(sb.delete(sb.length() - 3, sb.length() - 1).toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            ui.printMessage(\"You do not have any tasks containing \" + \"\\\"\" + content + \"\\\"!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 54
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to list out the Task from TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eListCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Lists out the Task in TaskList."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.printMessage(tasks.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 31
    }
  },
  {
    "path": "src/main/java/duke/command/RetrieveCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidTaskDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an action to retrieve Deadline and Event occurring on"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * a specific date from TaskList."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class RetrieveCommand extends Command {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Date of Deadline and Event to be retrieved */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eRetrieveCommand\u003c/code\u003e object."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param date Date of Deadline and Event to be retrieved."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public RetrieveCommand(LocalDate date) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Retrieves Deadline and Event that has the same LocalDate as the user input."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TaskList to store Task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param ui Ui to interact with users."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param storage Storage use by Duke to save and load files."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws InvalidTaskDateException If date and time format is invalid."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void execute(TaskList tasks, Ui ui, Storage storage) throws InvalidTaskDateException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            StringBuffer sb \u003d new StringBuffer();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            int index \u003d 1;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            sb.append(String.format(\"Here are the deadlines and events happening on %s:\\n\\t \","
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    date.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy\"))));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            boolean hasTasks \u003d false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            for (Task t : tasks.getList()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (t instanceof Deadline) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    Deadline d \u003d (Deadline) t;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    if (d.getDateTime().toLocalDate().isEqual(date)) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        hasTasks \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        sb.append(index).append(\".\").append(t.toString()).append(\"\\n\\t \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (t instanceof Event) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    Event e \u003d (Event) t;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    if (e.getDateTime().toLocalDate().isEqual(date)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        hasTasks \u003d true;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        sb.append(index).append(\".\").append(t.toString()).append(\"\\n\\t \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        index++;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (hasTasks) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                ui.printMessage(sb.delete(sb.length() - 3, sb.length() - 1).toString());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                ui.printMessage(String.format("
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        \"You do not have any deadlines or events happening on %s! :)\","
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        date.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy\"))));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidTaskDateException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 80
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a general exception that deal with errors related to Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a DukeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param errorMessage Error Message to show."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user keys in invalid commands"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an InvalidCommandException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDeleteException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user does not input a task number to deleted."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class InvalidDeleteException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an InvalidDeleteException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public InvalidDeleteException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! The task to be deleted has to be a number.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDoneException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user does not input a task number to mark as done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class InvalidDoneException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an InvalidDoneException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public InvalidDoneException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! The task to be done has to be a number.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user input a wrong LocalDate format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class InvalidTaskDateException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an InvalidTaskDateException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public InvalidTaskDateException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! Please use the format \\\"dd/MM/yyyy\\\" to indicate the date.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user input a wrong LocalDateTime format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class InvalidTaskDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an InvalidTaskDateTimeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public InvalidTaskDateTimeException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! Please use the format \\\"dd/MM/yyyy HH:mm\\\" to indicate the date and time.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user input an invalid task number."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class InvalidTaskNumberException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an InvalidTaskNumberException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public InvalidTaskNumberException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! Task Number is invalid.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/NoFindContentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user does not provide any keyword/keyphrase."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class NoFindContentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a NoFindContentException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public NoFindContentException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! Please input a keyword/keyphrase you want to search for.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/NoTaskContentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user does not input any content when adding tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class NoTaskContentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a NoTaskContentException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param errorMessage Error Message to show."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public NoTaskContentException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/NoTaskDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user does not input any LocalDateTime when adding deadlines."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class NoTaskDateTimeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a NoTaskDateTimeException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param errorMessage Error Message to show."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public NoTaskDateTimeException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/NoTaskDurationException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user does not input any LocalDateTime when adding events."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class NoTaskDurationException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a NoTaskDurationException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param errorMessage Error Message to show."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public NoTaskDurationException(String errorMessage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 16
    }
  },
  {
    "path": "src/main/java/duke/exception/NoTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an exception when user tried to list tasks when there are no tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class NoTaskException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a NoTaskException."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public NoTaskException() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(\"OOPS!!! You have no task currently.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.AddTodoCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.RetrieveCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidDeleteException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidDoneException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidTaskDateException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.NoFindContentException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.NoTaskContentException;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.NoTaskDateTimeException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.NoTaskDurationException;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.NoTaskException;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * The \u003ccode\u003eParser\u003c/code\u003e class make sense of the"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * user inputs. Decides which command to call or exception to throw."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the commands to call based on user inputs."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param input User input to Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TasksList use by Duke to store the tasks."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A command to call."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static Command parse(String input, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return parseList(tasks);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return parseDone(input, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return parseAddTask(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return parseDelete(input, tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (input.startsWith(\"retrieve\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return parseRetrieve(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return parseFind(input, tasks);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the ListCommand if user input is valid."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TasksList use by Duke to store the tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return ListCommand."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static Command parseList(TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (tasks.getNumberOfTask() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new NoTaskException();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the DoneCommand if user input is valid."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param input User input to Duke."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TasksList use by Duke to store the tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return DoneCommand."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static Command parseDone(String input, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (splitInput.length !\u003d 2 || !splitInput[1].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidDoneException();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.getNumberOfTask()) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                return new DoneCommand(taskNumber);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns commands to add tasks if user input is valid."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param input User input to Duke."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return commands that add tasks"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static Command parseAddTask(String input) throws DukeException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String taskWord \u003d splitInput[0];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (taskWord.equals(\"todo\")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (splitInput.length !\u003d 2) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                throw new NoTaskContentException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String description \u003d splitInput[1];"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                return new AddTodoCommand(description);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (taskWord.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (splitInput.length !\u003d 2) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                throw new NoTaskContentException("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        \"OOPS!!! The description and date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String content \u003d splitInput[1];"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String[] splitContent \u003d content.split(\" /by \", 2);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (splitContent.length !\u003d 2) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    throw new NoTaskDateTimeException("
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                            \"OOPS!!! The date/time of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    String description \u003d splitContent[0];"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    String by \u003d splitContent[1];"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    return new AddDeadlineCommand(description, by);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else if (taskWord.equals(\"event\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (splitInput.length !\u003d 2) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                throw new NoTaskContentException("
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                        \"OOPS!!! The description and duration of an event cannot be empty.\");"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String content \u003d splitInput[1];"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String[] splitContent \u003d content.split(\" /at \", 2);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (splitContent.length !\u003d 2) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    throw new NoTaskDurationException("
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                            \"OOPS!!! The duration of an event cannot be empty.\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    String description \u003d splitContent[0];"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    String at \u003d splitContent[1];"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    return new AddEventCommand(description, at);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the DeleteCommand if user input is valid."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param input User input to Duke."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param tasks TasksList use by Duke to store the tasks."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return DeleteCommand."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static Command parseDelete(String input, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (splitInput.length !\u003d 2 || !splitInput[1].matches(\"[0-9]+\")) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidDeleteException();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            int taskNumber \u003d Integer.parseInt(splitInput[1]) - 1;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (taskNumber \u003c 0 || taskNumber \u003e\u003d tasks.getNumberOfTask()) {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                throw new InvalidTaskNumberException();"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                return new DeleteCommand(taskNumber);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the RetrieveCommand if user input is valid."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param input User input to Duke."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return RetrieveCommand."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public static Command parseRetrieve(String input) throws DukeException {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            String[] splitInput \u003d input.split(\" \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            if (splitInput.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                throw new NoTaskDateTimeException(\"OOPS!!! Please enter a date.\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(splitInput[1], DateTimeFormatter.ofPattern(\"dd/MM/yyyy\"));"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                return new RetrieveCommand(date);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new InvalidTaskDateException();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the FindCommand if user input is valid."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param input User input to Duke."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return FindCommand."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @throws DukeException If user input is not valid."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private static Command parseFind(String input, TaskList tasks) throws DukeException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String[] splitInput \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        if (splitInput.length !\u003d 2 || splitInput[1].trim().equals(\"\")) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            throw new NoFindContentException();"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            String content \u003d splitInput[1];"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return new FindCommand(content);"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 215
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a \u003ccode\u003eStorage\u003c/code\u003e class that saves and loads"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Path to text file which contains the stored tasks */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private static final String FILE_PATH \u003d \"./data/tasks.txt\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eStorage\u003c/code\u003e object with a dedicated"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * file path."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Saves the tasks into a text file."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void save(TaskList list) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            int counter \u003d list.getNumberOfTask();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            FileWriter fw \u003d new FileWriter(FILE_PATH);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            for (Task t : list.getList()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String taskString \u003d t.toFileString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                fw.write(taskString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                counter--;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (counter \u003e 0) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    fw.write(System.lineSeparator());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Loads the tasks into a text file."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            File file \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                Task task \u003d null;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String[] taskStringSplit \u003d sc.nextLine().split(\" \\\\| \", 3);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String type \u003d taskStringSplit[0];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String isDoneString \u003d taskStringSplit[1];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String content \u003d taskStringSplit[2];"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String[] contentSplit \u003d content.split(\" \\\\| \", 2);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                String time \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (contentSplit.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    description \u003d contentSplit[0];"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    time \u003d contentSplit[1];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                if (isDoneString.equals(\"1\")) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    task \u003d new Todo(content, isDone);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    task \u003d new Deadline(description, isDone, time);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    task \u003d new Event(description, isDone, time);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                list.add(task);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return list;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 103
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a task that needs to be done by a certain date and time. A"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * \u003ccode\u003eDeadline\u003c/code\u003e object is represented as a Task with a LocalDateTime value."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Indicates when the Deadline needs to be completed by */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object with a description and a LocalDateTime value."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * This Deadline is marked as undone."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param by String representation of date and time."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eDeadline\u003c/code\u003e object with a description,"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * a boolean to indicate if the Deadline is done and a LocalDateTime value."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param isDone Indicates if the Deadline is done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param by String representation of date and time."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the LocalDateTime in which the Deadline has to completed by."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A LocalDateTime object."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Deadline to be stored in a file."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Deadline."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"D | \" + super.toFileString() + \" | \""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Deadline."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Deadline."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + by.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 70
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a task that needs to be done at a certain date and time. An"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * \u003ccode\u003eEvent\u003c/code\u003e object is represented as a Task with a LocalDateTime value."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Indicates when the Event is held at */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an \u003ccode\u003eEvent\u003c/code\u003e object with a description and a LocalDateTime value."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * This Event is marked as undone."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param at String representation of date and time."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an \u003ccode\u003eEvent\u003c/code\u003e object with a description,"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * a boolean to indicate if the Event is done and a LocalDateTime value."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param isDone Indicates if the Event is done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param at String representation of date and time."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.at \u003d LocalDateTime.parse(at, DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the LocalDateTime in which the Event will take place at."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A LocalDateTime object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public LocalDateTime getDateTime() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Event to be stored in a file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"E | \" + super.toFileString() + \" | \""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\"));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Event."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Event."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + at.format(DateTimeFormatter.ofPattern(\"dd MMMM yyyy, hh:mm a\")) + \")\";"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 69
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a task that needs to be done. A"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * \u003ccode\u003eTask\u003c/code\u003e object is represented by a String description"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * and a boolean indicating if the Task is done."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** String to describe the task */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Boolean to indicate if the Task is done */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eTask\u003c/code\u003e object with a description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * This Task is marked as undone."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eTask\u003c/code\u003e object with a description and"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * a boolean to indicate if the Task is done."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param isDone Indicates if the Task is done."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Marks the Task as done by changing the value of isDOne to true."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the status icon of the Task. A tick represents that"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * the Task is done while a cross represents the Task is undone."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return An icon representing the completion status of the Task."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the description of the Task."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return Description of the Task."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Task to be stored in a file."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return String.format(\"%d | %s\", isDone ? 1 : 0, description);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 83
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a task that needs to be done in the future. A"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * \u003ccode\u003eTodo\u003c/code\u003e object is represented as a Task."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e object with a description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * This Todo is marked as undone."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eTodo\u003c/code\u003e object with a description and"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * a boolean to indicate if the Todo is done."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param description Describes what to do."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param isDone Indicates if the Todo is done."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Todo to be stored in a file."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Todo."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"T | \" + super.toFileString();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a description of the Todo."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A description of the Todo."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 49
    }
  },
  {
    "path": "src/main/java/duke/tasklist/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents a list to store and manipulate tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * A \u003ccode\u003eTaskList\u003c/code\u003e object is represented by an ArrayList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** ArrayList of tasks */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        list \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs a \u003ccode\u003eTaskList\u003c/code\u003e object filled with tasks"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * contained in an ArrayList."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param list ArrayList of tasks"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Adds task to the list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Marks task as complete based on its index in the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param index Index of task to be mark as complete."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void doTask(int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        list.get(index).completeTask();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Removes \u003ccode\u003eTask\u003c/code\u003e from the list based on in its index in the list."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param index Index of task to be removed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a task based on in its index in the list."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param index Index of task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return Task"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return list.get(index);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the list of tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return A list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns the number of tasks in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return The size of the list."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public int getNumberOfTask() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Prints out the tasks in the list in an orderly manner."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return The description of the contents of the list."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        sb.append(\"Here are the tasks in your list:\\n\\t \");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            sb.append(index).append(\".\").append(task.toString()).append(\"\\n\\t \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return sb.delete(sb.length() - 3, sb.length() - 1).toString();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 104
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * Represents an interface to interact with the users. A \u003ccode\u003eUi\u003c/code\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * object is responsible for getting inputs from the users and displaying"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " * outputs."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** String to separate different outputs from Duke */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private static final String LINE \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /** Scanner to scan for user inputs */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private static final Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Constructs an \u003ccode\u003eUi\u003c/code\u003e object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Sends a greeting to users."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void sendGreeting() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String logo \u003d \" ____        _        \\n\\t \""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\\t \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\\t \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\\t \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\t \";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.out.println(LINE + \"\\n\\t \" + logo + \"\\n\\t Hello! I\u0027m Duke\\n\\t What can I do for you?\\n\" + LINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Displays a LINE."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void showLine() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Returns a user input using a Scanner object."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @return User Input."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        return sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Displays error message of an Exception."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void showError(Exception e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.out.println(\"\\t \" + e.getMessage());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * Displays messages."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     * @param message Message to be printed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.out.println(\"\\t \" + message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 71
    }
  },
  {
    "path": "src/test/java/duke/command/AddDeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class AddDeadlineCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        AddDeadlineCommand addDeadlineCommand \u003d new AddDeadlineCommand(\"eat\", \"22/02/1998 12:30\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        addDeadlineCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Got it. I\u0027ve added this deadline: \\n\\t   \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"[D][✘] eat (by: 22 February 1998, 12:30 PM)\\n\\t \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"Now you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(\"[D][✘] eat (by: 22 February 1998, 12:30 PM)\", tasks.getTask(0).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 44
    }
  },
  {
    "path": "src/test/java/duke/command/AddEventCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class AddEventCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        AddEventCommand addEventCommand \u003d new AddEventCommand(\"eat\", \"22/02/1998 12:30\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        addEventCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Got it. I\u0027ve added this event: \\n\\t   \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"[E][✘] eat (at: 22 February 1998, 12:30 PM)\\n\\t \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"Now you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(\"[E][✘] eat (at: 22 February 1998, 12:30 PM)\", tasks.getTask(0).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 45
    }
  },
  {
    "path": "src/test/java/duke/command/AddTodoCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class AddTodoCommandTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        AddTodoCommand addTodoCommand \u003d new AddTodoCommand(\"eat\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        addTodoCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Got it. I\u0027ve added this todo: \\n\\t   \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"[T][✘] eat\\n\\t \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"Now you have 1 task in the list.\\n\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(\"[T][✘] eat\", tasks.getTask(0).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 44
    }
  },
  {
    "path": "src/test/java/duke/command/ByeCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class ByeCommandTest {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ByeCommand byeCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        byeCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Bye. Hope to see you again soon!\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 40
    }
  },
  {
    "path": "src/test/java/duke/command/DeleteCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class DeleteCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task \u003d new Todo(\"eat\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        DeleteCommand deleteCommand \u003d new DeleteCommand(0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        deleteCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t   [T][✘] eat\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t Now you have 0 task in the list.\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(0, tasks.getNumberOfTask());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 48
    }
  },
  {
    "path": "src/test/java/duke/command/DoneCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class DoneCommandTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task \u003d new Todo(\"eat\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        DoneCommand doneCommand \u003d new DoneCommand(0);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        doneCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t   [T][✓] eat\\n\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(1, tasks.getNumberOfTask());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 47
    }
  },
  {
    "path": "src/test/java/duke/command/FindCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class FindCommandTest {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task1 \u003d new Todo(\"borrow book\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task2 \u003d new Deadline(\"readbook\", \"12/02/2012 12:12\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task3 \u003d new Event(\"return book\", \"12/04/2014 12:14\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task4 \u003d new Todo(\"eat\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task5 \u003d new Todo(\"sleep\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task4);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task5);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        FindCommand findCommand \u003d new FindCommand(\"book\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        findCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Here are the matching tasks in your list:\\n\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 1.[T][✘] borrow book\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 2.[D][✘] readbook (by: 12 February 2012, 12:12 PM)\\n\""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 3.[E][✘] return book (at: 12 April 2014, 12:14 PM) \\n\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 60
    }
  },
  {
    "path": "src/test/java/duke/command/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task1 \u003d new Todo(\"eat\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task2 \u003d new Deadline(\"sleep\", \"12/02/2012 12:12\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task3 \u003d new Event(\"play\", \"12/04/2014 12:14\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        listCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Here are the tasks in your list:\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 1.[T][✘] eat\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 2.[D][✘] sleep (by: 12 February 2012, 12:12 PM)\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 3.[E][✘] play (at: 12 April 2014, 12:14 PM) \\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 53
    }
  },
  {
    "path": "src/test/java/duke/command/RetrieveCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class RetrieveCommandTest {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testExecute() throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task1 \u003d new Todo(\"eat\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task2 \u003d new Deadline(\"sleep\", \"12/02/2012 12:12\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task task3 \u003d new Event(\"play\", \"12/04/2014 12:14\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.addTask(task3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        RetrieveCommand retrieveCommand \u003d new RetrieveCommand(LocalDate.parse(\"12/02/2012\","
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                DateTimeFormatter.ofPattern(\"dd/MM/yyyy\")));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        retrieveCommand.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expectedPrintStatement \u003d \"\\t Here are the deadlines and events happening on 12 February 2012:\\n\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\t 1.[D][✘] sleep (by: 12 February 2012, 12:12 PM) \\n\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expectedPrintStatement, outContent.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 56
    }
  },
  {
    "path": "src/test/java/duke/parser/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.tasklist.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void parse_validCommand_success() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(new ByeCommand().toString(), Parser.parse(\"bye\", tasks).toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void parse_invalidCommand_exceptionThrown() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            assertEquals(new ByeCommand().toString(), Parser.parse(\"hello\", tasks).getClass());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "            assertEquals(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\", e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 30
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"[D][✘] eat (by: 22 February 2020, 12:30 PM)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, new Deadline(\"eat\", \"22/02/2020 12:30\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToFileString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"D | 0 | eat | 22/02/2020 00:00\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, new Deadline(\"eat\", \"22/02/2020 00:00\").toFileString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 20
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"[E][✘] eat (at: 22 February 2020, 12:30 PM)\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, new Event(\"eat\", \"22/02/2020 12:30\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToFileString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"E | 0 | eat | 22/02/2020 00:00\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, new Event(\"eat\", \"22/02/2020 00:00\").toFileString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "nweiyue": 21
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"[T][✘] eat\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, new Todo(\"eat\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToFileString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"T | 0 | eat\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, new Todo(\"eat\").toFileString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 20
    }
  },
  {
    "path": "src/test/java/duke/tasklist/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.tasklist;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task todo \u003d new Todo(\"duke.task 1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks.getList().add(todo);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"Here are the tasks in your list:\\n\\t \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"1.[T][✘] duke.task 1 \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, tasks.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testGetNumberOfTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks1 \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        TaskList tasks2 \u003d new TaskList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task todo \u003d new Todo(\"duke.task 1\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Task deadline \u003d new Deadline(\"duke.task 2\", \"12/02/2020 12:30\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks1.addTask(todo);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks2.addTask(todo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        tasks2.addTask(deadline);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(1, tasks1.getNumberOfTask());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(2, tasks2.getNumberOfTask());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 36
    }
  },
  {
    "path": "src/test/java/duke/ui/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private static final String LINE \u003d \"\\t____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testSendGreeting() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String logo \u003d \" ____        _        \\n\\t \""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\\t \""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\\t \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\\t \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\\t \";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d LINE + \"\\n\\t \" + logo"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "                + \"\\n\\t Hello! I\u0027m Duke\\n\\t What can I do for you?\\n\" + LINE + \"\\n\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.sendGreeting();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testShowLine() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d LINE + \"\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.showLine();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testShowError() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Exception e \u003d new FileNotFoundException();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"\\t \" + e.getMessage() + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.showError(e);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nweiyue"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    public void testPrintMessage() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String expected \u003d \"\\t HELLO\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        String message \u003d \"HELLO\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        ui.printMessage(message);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "        assertEquals(expected, outContent.toString());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 67
    }
  },
  {
    "path": "text-ui-test/data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "D | 0 | read book | 24/08/2020 12:30"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "T | 1 | ip"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "T | 1 | play basketball"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "E | 0 | project meeting | 02/08/2020 22:15"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 4
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "todo"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "todo2"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "deadline read book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "deadline read book /by August 24th"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "deadline read book /by 24/08/2020 12:30"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "event lesson"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "event lesson /at Mon 6-8pm"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "event lesson /at 24/08/2020 15:00"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "todo ip"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done one"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "todo play basketball"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list hello"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "event project meeting /at 02/08/2020 22:15"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "deadline survey /by 12/10/2021 00:00"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete one"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete 10"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "retrieve"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "retrieve blah"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "retrieve 24 Aug"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "retrieve 24/08/2020"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "retrieve 12/08/2020"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "find"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "find"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "find sleep"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "find basketball"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "find meeting"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 48
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "#if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "#then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "if"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "  )"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "java -classpath ../bin duke.Duke  \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "#diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "diff -u --ignore-space-change --strip-trailing-cr --ignore-blank-lines ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 11,
      "-": 35
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/ui/Ui.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/parser/Parser.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/storage/Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/tasklist/TaskList.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/task/Event.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/task/Task.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/task/Deadline.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/task/Todo.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/ByeCommand.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/DeleteCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/ListCommand.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/AddEventCommand.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/Command.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/RetrieveCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/AddDeadlineCommand.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/AddTodoCommand.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/FindCommand.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/command/DoneCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/NoTaskContentException.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/NoTaskDurationException.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/NoFindContentException.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/InvalidCommandException.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/NoTaskException.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/InvalidTaskNumberException.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/InvalidDeleteException.java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/NoTaskDateTimeException.java"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/InvalidTaskDateException.java"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/InvalidTaskDateTimeException.java"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/InvalidDoneException.java"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nweiyue"
        },
        "content": "../src/main/java/duke/exception/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "nweiyue": 31
    }
  }
]
