[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 17,
      "-": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeIoException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.ui.Cli;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.ui.Ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * The main driver Class for the Duke Application."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static ResourceBundle strings;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            initializeDuke();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ui.print(e.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static void initializeDuke() throws DukeIoException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        // read the appropriate string resources"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        strings \u003d ResourceBundle.getBundle(\"StringsBundle\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Command.setupCommands();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ui \u003d new Cli();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            initializeDuke();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (DukeIoException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ui.print(e.getMessage());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ui.print(strings.getString(\"output.greeting\"));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String mainCommand \u003d \"\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e parameters;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        while (!mainCommand.equals(strings.getString(\"command.bye\"))) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            input \u003d ui.read();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            mainCommand \u003d Parser.parseMainCommand(input);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            parameters \u003d Parser.parseParameters(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                output \u003d Command.createCommand(mainCommand)"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                        .execute(parameters);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                ui.print(output);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                ui.print(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String mainCommand \u003d Parser.parseMainCommand(input);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e parameters \u003d Parser.parseParameters(input);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return Command.createCommand(mainCommand)"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .execute(parameters);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 82,
      "-": 5
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author AdithyaNarayan-reused"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "//Reused from https://se-education.org/guides/tutorials/javaFxPart1.html with minor modifications"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 1,
      "-": 12
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author AdithyaNarayan-reused"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "//Reused from https://se-education.org/guides/tutorials/javaFxPart1.html with minor modifications"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 8,
      "-": 25
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.ui.DialogBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author AdithyaNarayan-reused"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "//Reused from https://se-education.org/guides/tutorials/javaFxPart1.html with minor modifications"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    private ImageView sendImage;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    private ResourceBundle strings;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    private final Image sendLogo \u003d new Image(this.getClass().getResourceAsStream(\"/images/sendLogo.png\"));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "     * Initialize a dependencies of the main window."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        strings \u003d ResourceBundle.getBundle(\"StringsBundle\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        sendImage.setImage(sendLogo);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(strings.getString(\"output.greeting\"), dukeImage));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (input.equals(strings.getString(\"command.bye\"))) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "        );"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 15,
      "-": 59
    }
  },
  {
    "path": "src/main/java/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeInvalidParameterException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeIoException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeUnrecognisedCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Todo;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.memento.Originator;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * The enum of all valid Commands"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    LIST {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeInvalidParameterException {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.isEmpty()) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.list\"), parameters);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            System.out.println(tasks);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            afterExecute(LIST);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return IntStream.range(0, tasks.size())"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .mapToObj(index -\u003e (index + 1) + \". \" + tasks.get(index))"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .reduce(\"\", (x, y) -\u003e x + y)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .strip();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * The Done."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DONE {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.containsKey(\"argument\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.done\"), parameters);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                int toMark \u003d Integer.parseInt(parameters.get(\"argument\")) - 1;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                tasks.markAsDone(toMark);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                afterExecute(DONE);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.done\"), tasks.get(toMark)).strip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.doneNum\"), parameters);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.doneOut\"), parameters);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.isEmpty()) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.todo\"), parameters);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.size() \u003e 1) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.todoExtra\"), parameters);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            Task toAdd \u003d new Todo(parameters.get(\"argument\"));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            tasks.add(toAdd);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            afterExecute(TODO);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return String.format(strings.getString(\"output.added\"), toAdd, tasks.size());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.isEmpty() || !parameters.containsKey(strings.getString(\"parameter.by\"))) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.deadline\"), parameters);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                LocalDate deadline \u003d LocalDate.parse(parameters.get(strings.getString(\"parameter.by\")));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                Task toAdd \u003d new Deadline(parameters.get(\"argument\"), deadline);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                tasks.add(toAdd);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                afterExecute(DEADLINE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.added\"), toAdd, tasks.size());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.dateFormat\"), parameters);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (parameters.isEmpty() || !parameters.containsKey(strings.getString(\"parameter.at\"))) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.event\"), parameters);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                LocalDate eventDate \u003d LocalDate.parse(parameters.get(strings.getString(\"parameter.at\")));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                Task toAdd \u003d new Event(parameters.get(\"argument\"), eventDate);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                tasks.add(toAdd);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                afterExecute(EVENT);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.added\"), toAdd, tasks.size());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.dateFormat\"), parameters);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DELETE {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.containsKey(\"argument\")) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.delete\"), parameters);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                int toDelete \u003d Integer.parseInt(parameters.get(\"argument\")) - 1;"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                String ret \u003d String.format(strings.getString(\"output.delete\"), tasks.remove(toDelete), tasks.size()).strip();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                afterExecute(DELETE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return ret;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.deleteNum\"), parameters);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.deleteOut\"), parameters);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    FIND {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.containsKey(\"argument\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.find\"), parameters);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            String searchTerm \u003d parameters.get(\"argument\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            List\u003cTask\u003e matches \u003d tasks"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .getList()"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .stream()"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .filter(item -\u003e item.getDescription().contains(searchTerm))"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .collect(Collectors.toList());"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            String output \u003d IntStream.range(0, matches.size())"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .mapToObj(index -\u003e (index + 1) + \". \" + matches.get(index) + \"\\t\\t\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .reduce(\"\", (x, y) -\u003e x + y)"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                    .strip();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            afterExecute(FIND);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (output.equals(\"\")) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return strings.getString(\"output.findEmpty\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.find\"), output);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    UNDO {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) throws DukeException {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!parameters.containsKey(\"argument\")) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                parameters.put(\"argument\", \"1\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                int numToUndo \u003d Integer.parseInt(parameters.get(\"argument\"));"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                originator.restoreFromMemento(savedStates.get(savedStates.size() - numToUndo - 1));"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                tasks \u003d originator.getState();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                tasks.notifyObserver();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                String output \u003d savedStates"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                        .subList(savedStates.size() - numToUndo, savedStates.size())"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                        .stream()"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                        .map(Originator.Memento::getCommand)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                        .reduce(\"\", (x, y) -\u003e x + \", \" + y);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                output \u003d output.substring(1).strip();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                savedStates \u003d savedStates.subList(0, savedStates.size() - numToUndo);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                return String.format(strings.getString(\"output.undo\"), output);"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.doneNum\"), parameters);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeInvalidParameterException(strings.getString(\"error.doneOut\"), parameters);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    },"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    BYE {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String execute(HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return strings.getString(\"output.bye\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    };"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static final ResourceBundle strings \u003d ResourceBundle.getBundle(\"StringsBundle\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static TaskList tasks \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static final Originator originator \u003d new Originator();"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private static List\u003cOriginator.Memento\u003e savedStates \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static void setupCommands() throws DukeIoException {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Storage storage \u003d Storage.createStorage(\"database\", \"tasks.ser\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        tasks.setObserver(storage);"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.set(tasks, \"\");"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        savedStates.add(originator.saveToMemento());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Factory method to choose the appropriate \u003ccode\u003eCommand\u003c/code\u003e from a given \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param command the command as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the command as a \u003ccode\u003eCommand\u003c/code\u003e"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeUnrecognisedCommandException thrown when command is invalid"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static Command createCommand(String command) throws DukeUnrecognisedCommandException {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Command ret;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (command.equals(strings.getString(\"command.list\"))) {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d LIST;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.done\"))) {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d DONE;"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.todo\"))) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d TODO;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.deadline\"))) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d DEADLINE;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.event\"))) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d EVENT;"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.delete\"))) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d DELETE;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.find\"))) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d FIND;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.bye\"))) {"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d BYE;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else if (command.equals(strings.getString(\"command.undo\"))) {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ret \u003d UNDO;"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            throw new DukeUnrecognisedCommandException(\"Cannot Recognise Command \", command);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static void afterExecute(Command command) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.set(tasks, strings.getString(\"command.\" + command.name().toLowerCase()));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        savedStates.add(originator.saveToMemento());"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Executes the logic of the corresponding command."
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param parameters the parameters"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the output of the command as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeException general parent exception"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public abstract String execute(HashMap\u003cString, String\u003e parameters) throws DukeException;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 262
    }
  },
  {
    "path": "src/main/java/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 9
    }
  },
  {
    "path": "src/main/java/exceptions/DukeInvalidParameterException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeInvalidParameterException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final HashMap\u003cString, String\u003e parameters;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Duke invalid parameter exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param message    the message"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param parameters the parameters which were invalid"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DukeInvalidParameterException(String message, HashMap\u003cString, String\u003e parameters) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.parameters \u003d parameters;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return super.getMessage() + \" Parameters supplied: \" + parameters;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 24
    }
  },
  {
    "path": "src/main/java/exceptions/DukeIoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeIoException extends DukeException {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final String path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Duke io exception."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param message the message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param path    the path of the file which was invalid"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DukeIoException(String message, String path) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.path \u003d path;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return super.getMessage() + \" File Path: \" + path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 23
    }
  },
  {
    "path": "src/main/java/exceptions/DukeUnrecognisedCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DukeUnrecognisedCommandException extends DukeException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Duke unrecognised command exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param message the message"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param command the command which was not recognised"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DukeUnrecognisedCommandException(String message, String command) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return super.getMessage() + command;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 22
    }
  },
  {
    "path": "src/main/java/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param description the description of the deadline as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param by          the date by which the deadline is due"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Deadline copy() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Deadline ret \u003d new Deadline(description, by);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ret.isDone \u003d isDone;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String deadlineBy \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(by);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadlineBy + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 35
    }
  },
  {
    "path": "src/main/java/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.time.format.FormatStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Event."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param description the description of the event as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param at          the date at which the event takes place"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Event copy() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Event ret \u003d new Event(description, at);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ret.isDone \u003d isDone;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String eventAt \u003d DateTimeFormatter.ofLocalizedDate(FormatStyle.FULL).format(at);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + eventAt + \")\" + \"\\n\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 34
    }
  },
  {
    "path": "src/main/java/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param description the description of the task as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Task copy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Task ret \u003d new Task(description);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ret.isDone \u003d isDone;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 43
    }
  },
  {
    "path": "src/main/java/tasks/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeIoException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import utils.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private Storage storageObserver;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public ArrayList\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return this.tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return tasks.get(index);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Add a given task to the list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param task the task to add"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeIoException the duke io exception"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void add(Task task) throws DukeIoException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        notifyObserver();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Mark the task at a particular index as done."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param index the index of the task (assumed to be valid)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeIoException the duke io exception"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void markAsDone(int index) throws DukeIoException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        assert index \u003c tasks.size() : \"Invalid index\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        notifyObserver();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Remove the task at a given index."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param index the index"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the task"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeIoException the duke io exception"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Task remove(int index) throws DukeIoException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Task task \u003d tasks.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        notifyObserver();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void setObserver(Storage storage) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.storageObserver \u003d storage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void notifyObserver() throws DukeIoException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "         assert storageObserver !\u003d null : \"No Observers\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "         storageObserver.save(tasks);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public TaskList copy() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ArrayList\u003cTask\u003e newTasks \u003d tasks"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                .stream()"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                .map(Task::copy)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                .collect(Collectors.toCollection(ArrayList::new));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        TaskList ret \u003d new TaskList(newTasks);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ret.setObserver(storageObserver);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return tasks.toString();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 91
    }
  },
  {
    "path": "src/main/java/tasks/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Todo copy() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Todo ret \u003d new Todo(description);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ret.isDone \u003d isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return ret;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return \"[T]\" + super.toString() + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 21
    }
  },
  {
    "path": "src/main/java/utils/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * The parser handler. Converts a \u003ccode\u003eString\u003c/code\u003e line input"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * into a main command and a hashmap of the parameters."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Parse the main command from the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param input the input as a \u003ccode\u003eString\u003c/code\u003e line"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the main command as a \u003ccode\u003eString\u003c/code\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static String parseMainCommand(String input) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return input.split(\" \")[0].strip();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Parse all the parameters from a given \u003ccode\u003eString\u003c/code\u003e line."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param input the input as a \u003ccode\u003eString\u003c/code\u003e line"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the hash map containing all the parameters"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static HashMap\u003cString, String\u003e parseParameters(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        input \u003d input.replace(parseMainCommand(input), \"\").strip();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e parameters \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (input.equals(\"\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return parameters;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        List\u003cString\u003e split \u003d Arrays.asList(input.split(\"/\"));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        parameters.put(\"argument\", split.get(0).strip());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        for (String pair : split.subList(1, split.size())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            String key \u003d pair.split(\" \")[0];"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            parameters.put(key, pair.replace(key, \"\").strip());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return parameters;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 47
    }
  },
  {
    "path": "src/main/java/utils/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.FileInputStream;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.FileOutputStream;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.ObjectInputStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.io.ObjectOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeIoException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * The storage handler. Handles saving and loading of data using"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * \u003ccode\u003eSerializable\u003c/code\u003e objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private FileInputStream fileIn;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private ObjectInputStream objIn;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private String path;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private FileOutputStream fileOut;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private ObjectOutputStream objOut;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private Storage() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Factory method for creating a \u003ccode\u003eStorage\u003c/code\u003e instance."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param directoryPath the directory path"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param fileName      the file name of the ser database"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the storage instance"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeIoException when unable to create directory"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static Storage createStorage(String directoryPath, String fileName) throws DukeIoException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Path dirPath \u003d Paths.get(directoryPath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        File directory \u003d new File(dirPath.normalize().toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (!directory.exists()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            if (!directory.mkdirs()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                ResourceBundle strings \u003d ResourceBundle.getBundle(\"resources.StringsBundle\", Locale.ENGLISH);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "                throw new DukeIoException(strings.getString(\"error.dir\"), directoryPath);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        storage.path \u003d dirPath.normalize() + \"/\" + fileName;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            storage.fileIn \u003d new FileInputStream(storage.path);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            storage.objIn \u003d new ObjectInputStream(storage.fileIn);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return storage;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (IOException ignored) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return storage;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Load the saved list from the database."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the array list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeIoException when data is corrupted"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeIoException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        //Solution below adapted from https://www.javatpoint.com/serialization-in-java"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            ArrayList\u003cTask\u003e ret \u003d readIn();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            closeIn();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return ret;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (ClassNotFoundException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            throw new DukeIoException(e.getMessage(), \"\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private void closeIn() throws IOException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (objIn !\u003d null) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            objIn.close();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (fileIn !\u003d null) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            fileIn.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @SuppressWarnings(\"unchecked\")"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private ArrayList\u003cTask\u003e readIn() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        if (objIn \u003d\u003d null) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return (ArrayList\u003cTask\u003e) objIn.readObject();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Save a given list into the database."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param tasks the \u003ccode\u003eTask\u003c/code\u003e list to save"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @throws DukeIoException when unable to write to database"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e tasks) throws DukeIoException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        //Solution below adapted from https://www.javatpoint.com/serialization-in-java"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            setupOut();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            writeOut(tasks);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            closeOut();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            throw new DukeIoException(e.getMessage(), \"\");"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private void writeOut(ArrayList\u003cTask\u003e tasks) throws IOException {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        objOut.writeObject(tasks);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private void setupOut() throws IOException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        fileOut \u003d new FileOutputStream(path);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        objOut \u003d new ObjectOutputStream(fileOut);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private void closeOut() throws IOException {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        objOut.flush();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        objOut.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        fileOut.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 140
    }
  },
  {
    "path": "src/main/java/utils/memento/Originator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils.memento;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Originator {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private TaskList state;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private String command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void set(TaskList state, String command) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.state \u003d state.copy();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(\"set \" + state + command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public TaskList getState() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return this.state;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Memento saveToMemento() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(\"save \" + state + command);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return new Memento(this.state, this.command);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void restoreFromMemento(Memento memento) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.state \u003d memento.state;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.command \u003d memento.command;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(\"restore \" + state + command);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static class Memento {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        private final TaskList state;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        private final String command;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public Memento(TaskList stateToSave, String command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            state \u003d stateToSave;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            this.command \u003d command;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        public String getCommand() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            return this.command;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 43
    }
  },
  {
    "path": "src/main/java/utils/ui/Cli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * The CLI Handler. Handles User Input and Output"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * through the Command Line Interface."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class Cli implements Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private final Scanner scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public Cli() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Prints a given input as a \u003ccode\u003estring\u003c/code\u003e with indentation"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * and decoration."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param object the object to print"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void print(Object object) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String lineDecoration \u003d \"\\t\" + \"_\".repeat(60);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(lineDecoration);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(\"\\t\" + object);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(lineDecoration);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Prints a given list of strings as a \u003ccode\u003estring\u003c/code\u003e with"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * indentation and decoration."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param strings the list of strings to print"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void print(String... strings) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        String lineDecoration \u003d \"\\t\" + \"_\".repeat(60);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(lineDecoration);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        for (String string : strings) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            System.out.println(\"\\t\" + string);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        System.out.println(lineDecoration);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Read an entire line as a \u003ccode\u003estring\u003c/code\u003e from the CLI."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the string read"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public String read() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return scanner.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 53
    }
  },
  {
    "path": "src/main/java/utils/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Instantiates a new Dialog box."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param l  the text label of the dialog"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param iv the image view of the sender"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        displayPicture.setFitWidth(84);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        displayPicture.setFitHeight(84);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Circle circle \u003d new Circle();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        circle.setCenterX(84);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        circle.setCenterY(42);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        circle.setRadius(42);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        iv.setClip(circle);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text.setStyle(\"-fx-background-color: #7781FF; -fx-background-radius: 32;\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text.setPadding(new Insets(12));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static DialogBox getUserDialog(String input, Image userImage) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return new DialogBox(new Label(input), new ImageView(userImage));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public static DialogBox getDukeDialog(String input, Image userImage) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return new DialogBox(new Label(input), new ImageView(userImage)).flip();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public DialogBox flip() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Circle circle \u003d new Circle();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        circle.setCenterX(0);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        circle.setCenterY(42);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        circle.setRadius(42);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        displayPicture.setClip(circle);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text.setStyle(\"-fx-background-color: white; -fx-background-radius: 32;\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text.setPadding(new Insets(12));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        text.setMinHeight(Double.NEGATIVE_INFINITY);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 76
    }
  },
  {
    "path": "src/main/java/utils/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * The UI Handler. Handles User Input and Output"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " * through the Command Line Interface."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public interface Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Prints a given input as a \u003ccode\u003estring\u003c/code\u003e."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @param object the object to print"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    void print(Object object);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * Read an entire line as a \u003ccode\u003estring\u003c/code\u003e."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     * @return the string read"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    String read();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003cLabel minHeight\u003d\"-Infinity\" fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 15
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.0\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" style\u003d\"-fx-background-radius: 24;\" AnchorPane.bottomAnchor\u003d\"12.0\" AnchorPane.leftAnchor\u003d\"12.0\" AnchorPane.rightAnchor\u003d\"80.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"66.0\" style\u003d\"-fx-background-color: #7781FF; -fx-background-radius: 24;\" AnchorPane.bottomAnchor\u003d\"12.0\" AnchorPane.rightAnchor\u003d\"8.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        \u003cgraphic\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            \u003cImageView fx:id\u003d\"sendImage\" fitHeight\u003d\"28.0\" fitWidth\u003d\"33.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        \u003c/graphic\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"540.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 20
    }
  },
  {
    "path": "src/test/java/commands/CommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import exceptions.DukeUnrecognisedCommandException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class CommandTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void createCommand_done_done() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            assertEquals(Command.createCommand(\"done\"), Command.DONE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void createCommand_unknown_exceptionThrown() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            Command.createCommand(\"doe\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (DukeUnrecognisedCommandException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            assertTrue(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 34
    }
  },
  {
    "path": "src/test/java/utils/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.HashMap;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void parseMainCommand_validCommand_firstWord() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        assertEquals(Parser.parseMainCommand(\"done 3\"), \"done\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void parseMainCommand_invalidCommand_empty() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        assertEquals(Parser.parseMainCommand(\"\"), \"\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void parseParameters_oneParameters_twoMappings() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        expected.put(\"argument\", \"abc\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        expected.put(\"by\", \"def\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        assertEquals(Parser.parseParameters(\"deadline abc /by def\"), expected);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void parseParameters_twoParameters_threeMappings() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        HashMap\u003cString, String\u003e expected \u003d new HashMap\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        expected.put(\"argument\", \"abc\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        expected.put(\"by\", \"def\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        expected.put(\"at\", \"ghi\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        assertEquals(Parser.parseParameters(\"deadline abc /by def /at ghi\"), expected);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 37
    }
  },
  {
    "path": "src/test/java/utils/memento/OriginatorTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "package utils.memento;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import tasks.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "public class OriginatorTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    public void test() throws Exception {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        List\u003cOriginator.Memento\u003e savedStates \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        TaskList t \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        t.setObserver(null);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        Originator originator \u003d new Originator();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        t.add(new Task(\"state1\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.set(t, \"command1\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        t.add(new Task(\"state2\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.set(t, \"command2\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        savedStates.add(originator.saveToMemento());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        t.add(new Task(\"state3\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.set(t, \"command3\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        // We can request multiple mementos, and choose which one to roll back to."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        savedStates.add(originator.saveToMemento());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        t.add(new Task(\"state4\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.set(t, \"command4\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "        originator.restoreFromMemento(savedStates.get(1));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "todo test 1"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "deadline test 2 /by 8th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "event test 3 /at 9th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "REM move resources into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "rmdir ..\\bin\\resources\\ /s /q"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "xcopy /s ..\\src\\main\\java\\resources ..\\bin\\resources\\"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\tasks\\*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\commands\\*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\exceptions\\*.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "AdithyaNarayan"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "AdithyaNarayan": 10,
      "-": 20
    }
  }
]
