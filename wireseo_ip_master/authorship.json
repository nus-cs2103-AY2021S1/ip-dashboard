[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 25
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wireseo"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wireseo": 84
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private LocalDate end;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Deadline(String s, Boolean b, LocalDate e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(s, b);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        end \u003d e;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public LocalDate getEnd() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void setEnd(LocalDate e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        end \u003d e;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"[D]\" + \"[\" + (super.isDone() ? \"O\" : \"X\") + \"] \" + super.getName() + \" (by: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                + end.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 28
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Implements a version of Duke called Wyre"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": " *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * @author Eryn Seo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private TaskList tList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    static boolean running \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Creates bot object while initializing necessary components / classes"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param filePath relative path to the task list text file"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tList \u003d storage.load();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.showUnexpectedLoadingError();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Runs the bot while there is user input \u0026 the user has not ended the session"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        while(sc.hasNextLine() \u0026\u0026 running) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Parser p \u003d new Parser(sc.nextLine(), ui, storage, tList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                p.parseCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (StringIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showUnexpectedCommandMessage();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showUnexpectedSavingError();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public static void main(String[] args) throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        new Duke(\"./task_list.txt\").run();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 55,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Event extends Task implements Serializable{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Event(String s, Boolean b, LocalDate t) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(s, b);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        time \u003d t;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"[E]\" + \"[\" + (super.isDone() ? \"O\" : \"X\") + \"] \" + super.getName() + \" (at: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 20
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    TaskList tList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Parser (String command, Ui ui, Storage storage, TaskList tList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.tList \u003d tList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Parses the user command and completes the task accordingly"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void parseCommand() throws IOException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.showByeMessage();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            Duke.running \u003d false; // DONT KNOW IF THIS IS OK"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.printList(tList, \"Here are the task(s) in your list:\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.substring(0, 4).equals(\"find\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            String search \u003d command.substring(5);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            TaskList tClone \u003d new TaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            for (Task t : tList) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                if (t.getName().contains(search)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                    tClone.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (tClone.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showNoResultsMessage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.printList(tClone, \"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.substring(0, 4).equals(\"done\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(5)) - 1;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tList.get(index).setStatus(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.showDoneMessage(tList, index);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            storage.save(tList);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.substring(0, 6).equals(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            int index \u003d Integer.parseInt(command.substring(7)) - 1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showDeleteMessage(tList, index);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                tList.remove(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                storage.save(tList);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showIndexErrorMessage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.substring(0, 4).equals(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                String name \u003d command.substring(5);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ToDo t \u003d new ToDo(name, false);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                tList.add(t);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showAddTaskMessage(tList, t);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                storage.save(tList);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showFormatErrorMessage();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.substring(0, 5).equals(\"event\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                int escapeIndex \u003d command.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                String name \u003d command.substring(6, escapeIndex - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(command.substring(escapeIndex + 4), DateTimeFormatter.ISO_DATE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Event e \u003d new Event(name, false, date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                tList.add(e);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showAddTaskMessage(tList, e);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                storage.save(tList);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showFormatErrorMessage();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showDateFormatErrorMessage();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (command.substring(0, 8).equals(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                int escapeIndex \u003d command.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                String name \u003d command.substring(9, escapeIndex - 1);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(command.substring(escapeIndex + 4), DateTimeFormatter.ISO_DATE);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Deadline d \u003d new Deadline(name, false, date);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                tList.add(d);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showAddTaskMessage(tList, d);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                storage.save(tList);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showFormatErrorMessage();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                ui.showDateFormatErrorMessage();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.showUnexpectedCommandMessage();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 100
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Loads task list text file from relative file path provided"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public TaskList load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        TaskList lst \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Saves task list text file to relative file path provided"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param lst version of list to be saved onto the text file"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void save(TaskList lst) throws IOException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        oos.writeObject(lst);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        oos.close();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 35
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Task (String s, Boolean b) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        name \u003d s;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        isDone \u003d b;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void setStatus(boolean b) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        isDone \u003d b;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 26
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    ArrayList\u003cTask\u003e tList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public TaskList () {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        tList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public TaskList (ArrayList\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        tList \u003d t;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 16
    }
  },
  {
    "path": "src/main/java/duke/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class ToDo extends Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public ToDo(String s, Boolean b) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(s, b);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"[T]\" + \"[\" + (super.isDone() ? \"O\" : \"X\") + \"] \" + super.getName();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 15
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String logo \u003d \" _       _ \\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"| |  _  | |_   _ ____ ___\\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"| | | | | | |_/ |  _ \\\\  _ \\\\ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"| |_| |_| |\\\\___ |    \u003c  __/\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"\\\\___/\\\\___/ \\\\____|_| \\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String border \u003d \"\\n^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String availableCommands \u003d \"Available commands: bye, list, done, delete, todo, deadline, event\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Hi! I\u0027m Wyre, your Personal Assistant Chatbot! :\u003e\\nWhat can I do for you today?\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                + border);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showByeMessage() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Bye. Hope to see you again!\" + border);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"You seem to be a newbie to Wyre (Or your save file is corrupted, oops)! Anyway, \" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                \"I created a new task list for you. :\u003e\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showUnexpectedLoadingError() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"Couldn\u0027t load the data due to an unexpected error. To reload the original data, do NOT \" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                \"edit the list during this session and try again. :\u003c\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showUnexpectedSavingError() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"Couldn\u0027t save the data due to an unexpected error. Please try again. :\u003c\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showDoneMessage(TaskList tList, int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Well done! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"\\t\" + tList.get(index) + border);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showIndexErrorMessage() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Sorry fam, you can\u0027t operate on a nonexistent index!\" + border);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showDeleteMessage(TaskList tList, int index) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Ooookay! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"\\t\" + tList.get(index));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"Now you have \" + (tList.size() - 1) + \" task(s) in the list.\" + border);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showAddTaskMessage(TaskList tList, Task t) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Wyre at your service. I\u0027ve added the task:\\n\\t\" + t);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"Now you have \" + tList.size() + \" task(s) in the list.\" + border);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showFormatErrorMessage() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Sorry fam, that doesn\u0027t seem like the right format to me!\" + border);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showDateFormatErrorMessage() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Sorry fam, the date needs to be in yyyy-mm-dd format!\" + border);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showUnexpectedCommandMessage() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Naw, this isn\u0027t an accepted command!\\n\" + availableCommands + border);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showNoResultsMessage() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + \"Sorry, no tasks were found with that name!\" + border);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void printList(TaskList tList, String s) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border + s + \"\\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        for (int i \u003d 0; i \u003c tList.size(); i++) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            System.out.println(\"\\t\" + (i + 1) + \". \" + tList.get(i));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(border);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 82
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        assertEquals(3, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 12
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void parserTestForBoolean() throws IOException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        Parser p \u003d new Parser(\"bye\", new Ui(), new Storage(\"./task_list.txt\"), new TaskList());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        p.parseCommand();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        assertEquals(false, Duke.running);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void parserTestForPrintList() throws IOException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        Parser p \u003d new Parser(\"list\", new Ui(), new Storage(\"./task_list.txt\"), new TaskList());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        p.parseCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        assertEquals(false, Duke.running);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 23
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wireseo": 1,
      "-": 20
    }
  }
]
