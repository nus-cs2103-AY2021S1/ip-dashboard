[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    // Deadlines: tasks that need to be done before a specific date/time e.g., submit report by 11/10/2019 5pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    private String dueBy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public Deadline(String description, String dueBy) throws PandaBotEmptyTaskDescriptionException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        this.dueBy \u003d dueBy.strip();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dueBy + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    // Events: tasks that start at a specific time and ends at a specific time e.g., team project meeting on 2/10/2019 2-4pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public Event(String description, String duration) throws PandaBotEmptyTaskDescriptionException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        this.duration \u003d duration.strip();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + duration + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 14
    }
  },
  {
    "path": "src/main/java/PandaBot.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public class PandaBot {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    private static ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    //TODO: afterwards, can abstract out the commands "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    // and change the error messages into actual exceptions"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    // according to timeline [for handling errors]"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        String logo \u003d"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                 \" ____                    _\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "               + \"|  _ \\\\                  | |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "               + \"| |_| |___  _ _  __  ___| | ___  _\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "               + \"| ___/  _ \\\\| | |/  |/ _   |/ _ \\\\| |\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "               + \"| |  | |_|   |  _  | |_|  | |_|   |\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "               + \"|_|  \\\\____,__|_| |_|\\\\___,_|\\\\___,__|\" + \" bot\\n\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        System.out.println(logo + \"Hello! I\u0027m PandaBot.\\n\" + \"What can I do for you?\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "            String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "            String[] cmd \u003d input.split(\" \", 2); // obtain first word and the rest of the string"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "            switch(cmd[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    System.out.println(\"Bye! Remember to finish the rest of your work! See you soon~\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    System.out.println(\"These are the tasks you have: \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        if (tasks.get(i) !\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println((i + 1) + \". \" + tasks.get(i));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    System.out.print(\"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    int taskNum \u003d -1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        // verify the num of arguments first"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        if (cmd.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            taskNum \u003d Integer.parseInt(cmd[1]) - 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            if (taskNum \u003c tasks.size()) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                // mark the task as done"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                tasks.get(taskNum).markTaskDone();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(\"Great! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(tasks.get(taskNum) + \"\\n\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(\"Task number given is not in range. Please try again.\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Insufficient arguments given. What task have you done?\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        System.out.println(\"Invalid Format: \" + cmd[1] + \"\\nWhat task number are you done with?\\n\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    } "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    int taskToDel \u003d -1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        // verify the num of arguments first"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        if (cmd.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            taskToDel \u003d Integer.parseInt(cmd[1]) - 1;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            if (taskToDel \u003c tasks.size()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                // store the task to delete"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                String toDel \u003d tasks.get(taskToDel).toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                tasks.remove(taskToDel);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(\"Will do! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(toDel);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(\"Now you have \" + tasks.size() + \" tasks in this list.\\n\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                System.out.println(\"Task number given is not in range. Please try again.\\n\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Insufficient arguments given. What task do you want to delete?\\n\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        System.out.println(\"Invalid Format: \" + cmd[1] + \"\\nWhat task number are you deleting?\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    if (cmd.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            tasks.add(new ToDo(cmd[1]));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Noted! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in this list.\\n\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } catch (PandaBotEmptyTaskDescriptionException e) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        System.out.println(\"Insufficient arguments given. What todo do you have?\\n\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    if (cmd.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        String[] deadlineDes \u003d cmd[1].split(\"/by \", 2);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            tasks.add(new Deadline(deadlineDes[0], deadlineDes[1]));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Noted! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in this list.\\n\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } catch (PandaBotEmptyTaskDescriptionException e) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Insufficient arguments given.\\n\" +"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                    \"Are you missing a description or due by time?\\n\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        System.out.println(\"Insufficient arguments given. What deadline do you have?\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    if (cmd.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        String[] taskDes \u003d cmd[1].split(\"/at \", 2);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            tasks.add(new Event(taskDes[0], taskDes[1]));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Noted! I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(tasks.get(tasks.size() - 1).toString());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Now you have \" + tasks.size() + \" tasks in this list.\\n\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } catch (PandaBotEmptyTaskDescriptionException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                            System.out.println(\"Insufficient arguments given.\\n\" +"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                                    \"Are you missing a description or duration?\\n\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                        System.out.println(\"Insufficient arguments given. What event do you have?\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    System.out.println(\"OOPS! I\u0027m sorry, but I don\u0027t know what that means :c\\n\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "            "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 146
    }
  },
  {
    "path": "src/main/java/PandaBotEmptyTaskDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public class PandaBotEmptyTaskDescriptionException extends PandaBotException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public PandaBotEmptyTaskDescriptionException(String taskName) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        super(String.format(\":c OOPS! The description of the %s cannot be empty.\\n\", taskName));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 6
    }
  },
  {
    "path": "src/main/java/PandaBotException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public class PandaBotException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public PandaBotException(String msg) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public Task(String description) throws PandaBotEmptyTaskDescriptionException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        this.description \u003d description.strip(); // removes starting and ending white spaces"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        if (this.description.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "            throw new PandaBotEmptyTaskDescriptionException(this.getClass().getSimpleName());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public void markTaskDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 25
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "// ToDos: tasks without any date/time attached to it e.g., visit new theme park"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public ToDo(String description) throws PandaBotEmptyTaskDescriptionException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "deadline cs2100 lab /by mon 2359"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "event project meeting /at sun 4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "done 7"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "event /at today"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "deadline today"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "bbye"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "java -classpath ..\\bin PandaBot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 4,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/PandaBot.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ureshiiYing"
        },
        "content": "java -classpath ../bin PandaBot \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ureshiiYing": 2,
      "-": 36
    }
  }
]
