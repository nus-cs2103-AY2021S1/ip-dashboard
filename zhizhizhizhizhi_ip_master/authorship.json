[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "TODO\u003c/\u003etrue\u003c/\u003eHng"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "DEADLINE\u003c/\u003efalse\u003c/\u003ehehe\u003c/\u003e2020-12-12"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "TODO\u003c/\u003efalse\u003c/\u003elonger name"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "DEADLINE\u003c/\u003efalse\u003c/\u003elonger name also\u003c/\u003e2020-08-28"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Deadline is a type of Task with deadline."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    LocalDate deadline;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    DateTimeFormatter in \u003d DateTimeFormatter.ISO_LOCAL_DATE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    DateTimeFormatter out \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Deadline(String name, String time) throws DateTimeParseException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(name, Type.DEADLINE);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            this.deadline \u003d LocalDate.parse(time, in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public LocalDate getDeadline() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline.format(out) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 31
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Duke asks user for their todos and makes a todo list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Tasks can be viewed in a list, marked as done and deleted."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            tasks \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * This method collects commands from user until an exit command \u0027bye\u0027 is read."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Valid commands will be executed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String s;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Ui.welcomeMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Parser.Command command;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        while ((command \u003d Parser.parse(s \u003d scanner.nextLine(), tasks.size()))"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                !\u003d Parser.Command.BYE) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        Task task \u003d Parser.createTask(s);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        tasks.addTask(task);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        Ui.addTaskMessage(tasks.get(tasks.size() - 1), tasks.size());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        if (e.getMessage().equals(DukeException.IGNORE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                            Ui.ignoreMessage();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        } else if (e.getMessage().equals(DukeException.EMPTY_TODO)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                            Ui.emptyTodoMessage();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        Ui.dateFormatReminder();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    tasks.setCompleted(parser.whichTask);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    Ui.doneMessage(tasks.get(parser.whichTask));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    Task deleted \u003d tasks.get(parser.whichTask);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    tasks.remove(parser.whichTask);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    Ui.deleteMessage(deleted, tasks.size());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    Ui.list(tasks);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    ArrayList\u003cTask\u003e found \u003d tasks.find(parser.searchText);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    Ui.searchResult(found);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Ui.exitMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * This method is the main method."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 76,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * A collection of exceptions due to invalid commands passed to the Duke program."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String EMPTY \u003d \"-1\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String IGNORE \u003d \"0\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String EMPTY_TODO \u003d \"1\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String WRONG_DEADLINE \u003d \"2\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static String WRONG_EVENT \u003d \"3\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 14
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Event is a type of Task with time."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    LocalDate time;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    DateTimeFormatter in \u003d DateTimeFormatter.ISO_LOCAL_DATE;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    DateTimeFormatter out \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Event(String name, String time) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(name, Type.EVENT);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            this.time \u003d LocalDate.parse(time, in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            throw e;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return time;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time.format(out) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 31
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Parser processes strings."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    static int whichTask \u003d -1;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    static String searchText \u003d \"\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * All valid command types."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    enum Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        BYE, DONE, DELETE, LIST, FIND, OTHERS;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static boolean isNum(String s) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (s \u003d\u003d null) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Integer.parseInt(s);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (NumberFormatException nfe) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Processes string and assign it to a command type."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param s command as a String"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param size size of tasklist"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return a Command enum item"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    static Command parse(String s, int size) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String[] done \u003d s.split(\" \");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (s.equals(\"bye\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Command.BYE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (done.length \u003d\u003d 2 \u0026\u0026 (done[0].equals(\"done\")"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                || done[0].equals(\"delete\"))"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    \u0026\u0026 isNum(done[1]) \u0026\u0026 Integer.parseInt(done[1]) \u003c\u003d size"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    \u0026\u0026 Integer.parseInt(done[1]) \u003e 0) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            whichTask \u003d Integer.parseInt(done[1]) - 1;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (done[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return Command.DONE;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return Command.DELETE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (s.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else if (done[0].equals(\"find\") \u0026\u0026 done.length \u003e 1) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            searchText \u003d s.replaceFirst(\"find \", \"\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return Command.OTHERS;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Processes strings that could be task making commands and returns the"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * task with corresponding type if applicable."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param s command as a String"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @return a Task item"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    static Task createTask(String s) throws DukeException, DateTimeParseException {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String[] task \u003d s.split(\" \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        Task.Type type;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (task.length \u003e 0) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (task[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                type \u003d Task.Type.TODO;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else if (task[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                type \u003d Task.Type.DEADLINE;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else if (task[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                type \u003d Task.Type.EVENT;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                throw new DukeException(DukeException.IGNORE);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            throw new DukeException(DukeException.EMPTY);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        switch (type) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if ((task \u003d s.split(\" /by \")).length !\u003d 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.WRONG_DEADLINE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return new Deadline(task[0].replaceFirst(\"deadline \", \"\"), task[1]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if ((task \u003d s.split(\" /at \")).length !\u003d 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.WRONG_EVENT);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return new Event(task[0].replaceFirst(\"event \", \"\"), task[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if ((s.split(\" \")).length \u003c 2) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    throw new DukeException(DukeException.EMPTY_TODO);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                return new Todo(s.replaceFirst(\"todo \", \"\"));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 99
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Storage saves the list in a file so the state of the list can be preserved"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * when the program restarts."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    boolean added \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Storage() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String dir \u003d System.getProperty(\"user.dir\") + \"/data\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        File path \u003d new File(dir);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (!path.exists()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            path.mkdir();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        file \u003d new File(path + \"/duke.txt\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        boolean result \u003d file.createNewFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (result) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(\"file created \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(\"file exists at: \" + file.getCanonicalPath());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Makes the storage file empty."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void reset() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedWriter bufferedWriter"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     \u003d new BufferedWriter(new FileWriter(file.getAbsolutePath()))) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            bufferedWriter.write(\"\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            added \u003d false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Parses the text file into tasks and return them in a list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    ArrayList\u003cTask\u003e load() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        System.out.println(\"reading... \");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedReader bufferedReader"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     \u003d new BufferedReader(new FileReader(file.getAbsolutePath()))) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                String[] parts \u003d line.split(\"\u003c/\u003e\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if (parts[0].equals(\"TODO\") \u0026\u0026 parts.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Todo(parts[2]);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (parts[0].equals(\"DEADLINE\") \u0026\u0026 parts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Deadline(parts[2], parts[3]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (parts[0].equals(\"EVENT\") \u0026\u0026 parts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Event(parts[2], parts[3]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            added \u003d true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Parses the text file into tasks and add them to the list given as parameter."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param list the list for tasks to be added into"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void readAll(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        if (added) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedReader bufferedReader"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     \u003d new BufferedReader(new FileReader(file.getAbsolutePath()))) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            while (line !\u003d null) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                String[] parts \u003d line.split(\"\u003c/\u003e\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                if (parts[0].equals(\"TODO\") \u0026\u0026 parts.length \u003d\u003d 3) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Todo(parts[2]);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (parts[0].equals(\"DEADLINE\") \u0026\u0026 parts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Deadline(parts[2], parts[3]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                } else if (parts[0].equals(\"EVENT\") \u0026\u0026 parts.length \u003d\u003d 4) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    task \u003d new Event(parts[2], parts[3]);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    if (parts[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                        task.setCompleted();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                line \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            added \u003d true;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Adds one task to the storage file."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param task the task to be added"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void addTask(Task task) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedWriter bufferedWriter"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     \u003d new BufferedWriter(new FileWriter(file.getAbsolutePath(), true))) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String separator \u003d \"\u003c/\u003e\";"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Task.Type type \u003d task.getType();"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            String fileContent \u003d type.toString() + separator"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                    + task.getCompleted() + separator + task.getName();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (type \u003d\u003d Task.Type.DEADLINE) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                fileContent +\u003d separator + ((Deadline) task).getDeadline();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            } else if (type \u003d\u003d Task.Type.EVENT) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                fileContent +\u003d separator + ((Event) task).getTime();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            bufferedWriter.write(fileContent);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            bufferedWriter.newLine();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * Adds all the tasks in the given list to the file."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     * @param list the list containing the tasks to be added"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    void addAll(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try (BufferedWriter bufferedWriter"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                     \u003d new BufferedWriter(new FileWriter(file.getAbsolutePath(), true))) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                addTask(t);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            // Exception handling"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 178
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Task is the parent class of Todo, Deadline and Event."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Contains functions used by all 3 subclasses."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    boolean completed \u003d false;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    String name;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Type type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Task(String name, Type type) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        completed \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Type getType() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public boolean getCompleted() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return completed;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return (completed ? \"[✓]\" : \"[✗]\") + \" \" + name;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    enum Type {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        TODO, DEADLINE, EVENT;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 40
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * TaskList handles the list functions (get, add, remove, size) in the program and the storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList \u003d storage.load();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addTask(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void remove(int index) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.reset();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addAll(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void setCompleted(int whichTask) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        taskList.get(whichTask).setCompleted();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.reset();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        storage.addAll(taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public ArrayList\u003cTask\u003e find(String searchText) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            if (t.getName().contains(searchText)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 49
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Todo is the most general type of Task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        super(name, Type.TODO);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 13
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " * Ui contains all the responses the program can give to a command."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    private static void print(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        System.out.println(\"\\t____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                s +"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\t____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void welcomeMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tHello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\tWhat can I do for you?\\n\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void doneMessage(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tNice! I\u0027ve marked this task as done:\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\t\" + task + \"\\n\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void deleteMessage(Task task, int total) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tNoted. I\u0027ve removed this task:\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\t\" + task + \"\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\tNow you have \" + total + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void list(TaskList tasks) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d tasks.taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            temp +\u003d \"\\t\" + (i + 1) + \". \" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tHere are the tasks in your list:\\n\" + temp);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void searchResult(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String temp \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            temp +\u003d \"\\t\" + (i+1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tHere are the matching tasks in your list:\\n\" + temp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void addTaskMessage(Task task, int total) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tGot it. I\u0027ve added this task: \\n\" +"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\t\" + task + \"\\n\" +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "                \"\\tNow you have \" + total + \" tasks in the list.\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void ignoreMessage() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\t☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void emptyTodoMessage() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\t☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void dateFormatReminder() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        System.out.println(\"Try again! Date format should be yyyy-mm-dd.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public static void exitMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        print(\"\\tBye. Hope to see you again soon!\\n\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 68
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void parserTest(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.parse(\"list\", 0), Parser.Command.LIST);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.parse(\"bye\", 0), Parser.Command.BYE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.parse(\"delete 2\", 0), Parser.Command.OTHERS);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.parse(\"done 1\", 0), Parser.Command.OTHERS);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.parse(\"delete 2\", 5), Parser.Command.DELETE);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.whichTask, 1);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.parse(\"done 5\", 5), Parser.Command.DONE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.whichTask, 4);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void parser_createTaskTest() throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String task1 \u003d \"todo 1\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String task2 \u003d \"deadline 2 /by 2020-12-12\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String task3 \u003d \"event 3 /at 2020-08-30\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String taskError1 \u003d \"todo\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String taskError2 \u003d \"event 3 /by 2020-08-30\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        String taskError3 \u003d \"deadline 2 /by 2020\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.createTask(task1).getCompleted(), false);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.createTask(task2).getType(), Task.Type.DEADLINE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        assertEquals(Parser.createTask(task3).getName(), \"3\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Parser.createTask(taskError1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(e.getMessage(), DukeException.EMPTY_TODO);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Parser.createTask(taskError2);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(e.getMessage(), DukeException.WRONG_EVENT);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Parser.createTask(taskError3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(e.getMessage(), \"Text \u00272020\u0027 could not be parsed at index 4\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    public void storageTest() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            File file \u003d new File(\"test\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Storage s \u003d new Storage();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            s.file \u003d file;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            TaskList taskList \u003d new TaskList(s);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Todo task1 \u003d new Todo(\"Hng\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            task1.setCompleted();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            Deadline task2 \u003d new Deadline(\"hehe\", \"2020-12-12\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(task1.getCompleted(), taskList.get(0).getCompleted());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(task1.getName(), taskList.get(0).getName());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(task2.getType(), taskList.get(1).getType());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            assertEquals(task2.getDeadline(), ((Deadline)taskList.get(1)).getDeadline());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 69
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "zhizhizhizhizhi"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "zhizhizhizhizhi": 1,
      "-": 37
    }
  }
]
