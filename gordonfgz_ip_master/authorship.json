[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a task with a deadline"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param by is the due-date of the task"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is whether or not the task is done"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param by is the due-date of the task"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Deadline(String description,boolean isDone, LocalDate by) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Task"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 44
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Main body of application Duke"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Initialises the application"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void start() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.storage \u003d new Storage(\"Data.txt\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.parser \u003d new Parser(storage, ui, tasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.storage.init();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.importSavedDataToList(tasks.get());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Sends the user input to the parser for processing"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the String input from the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.parser.processInput(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Main body of application"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                duke.processInput(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                System.out.println(e.toString());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 48,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 3
    }
  },
  {
    "path": "src/main/java/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class EmptyDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public EmptyDescriptionException(String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"____________________________________________________________\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" ☹ OOPS!!! The description of a \" + type + \" cannot be empty.\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 15
    }
  },
  {
    "path": "src/main/java/EmptyListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class EmptyListException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"____________________________________________________________\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" ☹ OOPS!!! Your list is currently empty!\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 9
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a task with a specific time"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param at is the time that the task is happening at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is whether or not the task is done"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param at is the time that the task is happening at"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Task"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 40
    }
  },
  {
    "path": "src/main/java/InputNotRecognisedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class InputNotRecognisedException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"____________________________________________________________\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 9
    }
  },
  {
    "path": "src/main/java/InvalidListIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class InvalidListIndexException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"____________________________________________________________\""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \" ☹ OOPS!!! The index you\u0027ve chosen is invalid\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"\\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a Parser"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param storage is the storage that stores the data file"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param ui is the user interface used with duke"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param list is the TaskList that will be updated"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Parser(Storage storage, Ui ui, TaskList list) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.tasks \u003d list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Processes the user\u0027s inputs"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the user\u0027s input in String form"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void processInput(String input) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.provideList();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.markAsDone(input);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"todo\") || input.startsWith(\"deadline\") || input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.newTaskEntry(input);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.end();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.delete(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.find(input);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new InputNotRecognisedException();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Finds and prints out Tasks with the keywords provided by the user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input the user\u0027s input in String form"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void find(String input) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ArrayList\u003cTask\u003e temp \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task currentTask \u003d tasks.get(i);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            System.out.println(currentTask);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (currentTask.getDescription().contains(keyword)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                temp.add(currentTask);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.printLines();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.findMsg();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c temp.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d temp.get(i);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String stringedIndex \u003d Integer.toString(temp.indexOf(task) + 1);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String outputLine \u003d stringedIndex + \". \" + task;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            System.out.println(outputLine);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.printLines();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the TaskList"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void provideList() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.printLines();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.provideListMsg();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.length(); i++) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String stringedIndex \u003d Integer.toString(tasks.getIndex(task) + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String outputLine \u003d stringedIndex + \". \" + task;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            System.out.println(outputLine);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.printLines();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(tasks.get());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Marks a Task on the TaskList as done"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the user\u0027s input in String form"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void markAsDone(String input) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String stringIndex \u003d input.substring(5, input.length());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Task chosen \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        chosen.finish();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.markAsDoneMsg(chosen);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks the type of Task the user is trying to create"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the User\u0027s input in String form"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void newTaskEntry(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.createAndAddTodo(input);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.createAndAddDeadline(input);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.createAndAddEvent(input);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates and adds a Task with type \"Todo\" to the TaskList"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the description of the task as given by user"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void createAndAddTodo(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.length() \u003c 5 || input.substring(5).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new EmptyDescriptionException(\"todo\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (!Character.toString(input.charAt(4)).equals(\" \")) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new WrongFormatException(\"todo\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d new Todo(input.substring(5, input.length()));"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.addTaskToTasklist(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates and adds a Task with type \"Deadline\" to the TaskList"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the description of the task as given by user"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void createAndAddDeadline(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.length() \u003c 9 || input.substring(8).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new EmptyDescriptionException(\"deadline\");"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"/by\")"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(8)).equals(\" \")"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") + 3)).equals(\" \")"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") - 1)).equals(\" \")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String desc \u003d input.substring(9, input.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String by \u003d input.substring(input.indexOf(\"/\") + 4, input.length());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (by.matches(\".*[a-zA-Z]+.*\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                throw new WrongFormatException(\"deadline\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            LocalDate date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d new Deadline(desc, date);"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.addTaskToTasklist(task);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new WrongFormatException(\"deadline\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Adds a Task to the TaskList"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the Task to be added to the TaskList"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void addTaskToTasklist(Task task) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int listCount \u003d this.tasks.length();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.addTaskToTasklistMsg(task, listCount);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Creates and adds a Task with type \"Event\" to the TaskList"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the description of the task as given by user"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyDescriptionException"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws WrongFormatException"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void createAndAddEvent(String input) throws EmptyDescriptionException, WrongFormatException {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (input.length() \u003c 6 || input.substring(5).replaceAll(\"\\\\s\", \"\").equals(\"\")) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new EmptyDescriptionException(\"event\");"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (input.contains(\"/at\")"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(5)).equals(\" \")"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") + 3)).equals(\" \")"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                \u0026\u0026 Character.toString(input.charAt(input.indexOf(\"/\") - 1)).equals(\" \")) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String desc \u003d input.substring(6, input.indexOf(\"/\") - 1);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String at \u003d input.substring(input.indexOf(\"/\") + 4, input.length());"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d new Event(desc, at);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.addTaskToTasklist(task);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new WrongFormatException(\"event\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Exit sequence of the Application"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void end() {"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        ui.farewell();"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Deletes a Task in the TaskList based on user input"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param input is the position of the Task to be deleted"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws EmptyListException"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @throws InvalidListIndexException"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private void delete(String input) throws EmptyListException, InvalidListIndexException {"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        String stringIndex \u003d input.substring(7, input.length());"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        int index \u003d Integer.parseInt(stringIndex);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (this.tasks.isEmpty()) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new EmptyListException();"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (index \u003e 0 \u0026\u0026 index \u003c\u003d this.tasks.length()) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task chosen \u003d this.tasks.get(index - 1);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            this.tasks.remove(chosen);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            int listLength \u003d this.tasks.length();"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            ui.deleteMsg(listLength, chosen);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            storage.saveListToData(this.tasks.get());"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            throw new InvalidListIndexException();"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 238
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a Storage"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Deals with loading tasks from the file and saving tasks in the file"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String fileName;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param name is the filename that data is going to be stored in"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Storage(String name) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.fileName \u003d name;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Initialises the file for data to be stored in"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void init() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Class myClass \u003d getClass();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        URL url \u003d myClass.getResource(\"Data.txt\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (url \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            File file \u003d new File(\"Data.txt\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Imports the data from the data file into a list"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param list is the list that the data is going to be stored in"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void importSavedDataToList(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        BufferedReader objReader \u003d null;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String strCurrentLine;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            objReader \u003d new BufferedReader(new FileReader(\"Data.txt\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            while ((strCurrentLine \u003d objReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                String taskIcon \u003d Character.toString(strCurrentLine.charAt(0));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                String doneIcon \u003d Character.toString(strCurrentLine.charAt(4));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                boolean isDone \u003d false;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (doneIcon.equals(\"1\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    isDone \u003d true;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (taskIcon.equals(\"T\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String description \u003d strCurrentLine.substring(8);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Todo task \u003d new Todo(description, isDone);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else if (taskIcon.equals(\"D\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    int indexOfLastDivider \u003d strCurrentLine.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String description \u003d strCurrentLine.substring(8, indexOfLastDivider - 1);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String by \u003d strCurrentLine.substring(indexOfLastDivider + 2);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Deadline task \u003d new Deadline(description, isDone, date);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else if (taskIcon.equals(\"E\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    int indexOfLastDivider \u003d strCurrentLine.lastIndexOf(\"|\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String description \u003d strCurrentLine.substring(8, indexOfLastDivider - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    String at \u003d strCurrentLine.substring(indexOfLastDivider + 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    Event task \u003d new Event(description, isDone, at);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    list.add(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    System.out.println(\"Invalid first Character\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (objReader !\u003d null)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    objReader.close();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Clears all data in the data file"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void clearData() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        PrintWriter writer \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            writer \u003d new PrintWriter(\"Data.txt\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        writer.print(\"\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Uploads data from the list onto the data file"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param list is the list that the data is going to be uploaded from"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void saveListToData(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.clearData();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            Task task \u003d list.get(i);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            String input \u003d \"\";"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            if (task instanceof Todo) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (task.isDone) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"T | 1 | \" + task.description;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"T | 0 | \" + task.description;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                Deadline deadline \u003d (Deadline) task;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (deadline.isDone) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"D | 1 | \" + deadline.description + \" | \" + deadline.by;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"D | 0 | \" + deadline.description + \" | \" + deadline.by;"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                Event event \u003d (Event) task;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                if (event.isDone) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"E | 1 | \" + event.description + \" | \" + event.at;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    input \u003d \"E | 0 | \" + event.description + \" | \" + event.at;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                FileWriter writer \u003d new FileWriter(\"Data.txt\", true);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                bufferedWriter.write(input);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                bufferedWriter.newLine();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                bufferedWriter.close();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 142
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a backbone of a Task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Every Task has a String to store its description"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Every Task has a boolean to denote if it is done"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Used when a Task is created for the first time"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the Customer associated with this event"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Used to create a Task with the option to mark its done state"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the Customer associated with this event"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is a boolean that denotes if a Task is done or not"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the description"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Shows if a Task is done or not"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Marks a Task as done"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void finish() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the presentation of a Task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 67
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a list that stores Tasks"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Adds a Task into the TaskList"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the task to be added"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void add(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the total number of Tasks in the TaskList"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected int length() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.size();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the Task at a specific index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param index is the index of the Task to be retrieved"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return the Task"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected Task get(int index) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.get(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Returns the index of a specific Task"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the Task of the index to be retrieved"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return the index as an int"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected int getIndex(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.indexOf(task);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Checks if the TaskList is empty"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return true if the TaskList is empty"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected boolean isEmpty() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list.isEmpty();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Removes a specific Task from the TaskList"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param task is the Task to be removed"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void remove(Task task) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.list.remove(task);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Provides the actual list that is storing the Tasks"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return the list"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected ArrayList\u003cTask\u003e get() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 79
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a task"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param description is the description of the task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @param isDone is whether or not the task is done"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Gives the String representation of the Task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * @return a String"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Encapsulates a User Interface"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " * Deals with interactions with the user"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected final String LINE \u003d \"____________________________________________________________\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected final String GREETING \u003d \"____________________________________________________________\\n\" +"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            \"Hello! I\u0027m Duke\\n\" +"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            \"What can I do for you?\\n\" +"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            \"____________________________________________________________\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the greeting message"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void greet() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(GREETING);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the farewell message"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void farewell() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out a line"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void printLines() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the message when TaskList is shown"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void provideListMsg() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the message when a Task is marked as done"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void markAsDoneMsg(Task chosen) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(chosen);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the message when a Task is deleted"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void deleteMsg(int i, Task chosen) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(chosen);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\" Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the message when a Task is added to the TaskList"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void addTaskToTasklistMsg(Task task, int i) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\"  \" + task);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\" Now you have \" + i + \" tasks in the list.\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     * Prints out the message when results are found"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    protected void findMsg() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        System.out.println(\" Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 83
    }
  },
  {
    "path": "src/main/java/WrongFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class WrongFormatException extends DukeException{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public WrongFormatException(String type) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        if (type.equals(\"todo\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"____________________________________________________________\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" ☹ OOPS!!! Proper input format required! Proper format: todo{space}{description}\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (type.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"____________________________________________________________\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" ☹ OOPS!!! Proper input format required! Proper format: deadline{space}{description}{space}/by{space}{YYYY-MM-DD} .\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else if (type.equals(\"event\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"____________________________________________________________\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \" ☹ OOPS!!! Proper input format required! Proper format: deadline{space}{description}{space}/at{space}{time-slot}.\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "                    + \"____________________________________________________________\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "            return \"No such Task type\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 31
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void lengthTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Todo todo \u003d new Todo(\"Run\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assertEquals(list.length(), 3);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void indexTest(){"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Todo todo \u003d new Todo(\"Run\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assertEquals(list.getIndex(deadline), 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    public void removeTest(){"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        TaskList list \u003d new TaskList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Todo todo \u003d new Todo(\"Run\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Return book\", LocalDate.parse(\"2019-08-02\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        Event event \u003d new Event(\"project meeting\", \"tuesday morning\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(todo);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.add(event);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        list.remove(deadline);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "        assertEquals(list.length(), 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 46
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 5
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "gordonfgz"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "gordonfgz": 1,
      "-": 20
    }
  }
]
