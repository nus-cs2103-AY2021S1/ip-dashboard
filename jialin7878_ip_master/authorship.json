[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":5,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"    implementation \u0027org.testng:testng:6.9.6\u0027"},{"lineNumber":31,"author":{"gitId":"-"},"content":"}"},{"lineNumber":32,"author":{"gitId":"-"},"content":""},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":34,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":35,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":38,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":39,"author":{"gitId":"-"},"content":""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":43,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":44,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":45,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"-"},"content":"}"},{"lineNumber":47,"author":{"gitId":"-"},"content":""},{"lineNumber":48,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"    mainClassName \u003d \"Launcher\""},{"lineNumber":50,"author":{"gitId":"-"},"content":"}"},{"lineNumber":51,"author":{"gitId":"-"},"content":""},{"lineNumber":52,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":"    archiveBaseName \u003d \"poco\""},{"lineNumber":54,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":55,"author":{"gitId":"-"},"content":"}"},{"lineNumber":56,"author":{"gitId":"-"},"content":""},{"lineNumber":57,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":59,"author":{"gitId":"-"},"content":"}"},{"lineNumber":60,"author":{"gitId":"-"},"content":""},{"lineNumber":61,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":62,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"    enableAssertions \u003d true"},{"lineNumber":64,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jialin7878":21,"-":43}},{"path":"data/duke.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"v [E] finish ip                      /21/09/2000 18:00"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"x [T] be happy                   "},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"x [D] celebrate birthday                    /20/09/2000 10:00"}],"authorContributionMap":{"jialin7878":3}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"## Poco"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"### About"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"Poco is a simple todo-list chatbot"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"### `todo` - adds a Todo task"},{"lineNumber":10,"author":{"gitId":"-"},"content":""},{"lineNumber":11,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":12,"author":{"gitId":"-"},"content":""},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"`todo (task description)`"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"`Poco has added (task description) to your list`"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"### `deadline` - adds a Deadline task"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"`deadline (task description)/(dd/MM/yyyy HH:mm)`"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"`Poco has added (task description) to your list`"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"### `event` - adds an Event task"},{"lineNumber":30,"author":{"gitId":"-"},"content":""},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"\u0027event (task description)/(dd/MM/yyyy HH:mm)`"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"-"},"content":""},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"`Poco has added (task description) to your list`"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"### `done` - marks task as done"},{"lineNumber":40,"author":{"gitId":"-"},"content":""},{"lineNumber":41,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":42,"author":{"gitId":"-"},"content":""},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":"\u0027done (index of task)`"},{"lineNumber":44,"author":{"gitId":"-"},"content":""},{"lineNumber":45,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":46,"author":{"gitId":"-"},"content":""},{"lineNumber":47,"author":{"gitId":"jialin7878"},"content":"`Good job!`"},{"lineNumber":48,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"### `delete` - deletes task"},{"lineNumber":50,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":51,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":52,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":"\u0027delete (index of task)`"},{"lineNumber":54,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":55,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":56,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":57,"author":{"gitId":"jialin7878"},"content":"`Poco has deleted the task`"},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":59,"author":{"gitId":"jialin7878"},"content":"### `find` - finds task(s) with matching description"},{"lineNumber":60,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":61,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":62,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"`find (task description)`"},{"lineNumber":64,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":65,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":67,"author":{"gitId":"jialin7878"},"content":"`(matching task description(s))`"},{"lineNumber":68,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":69,"author":{"gitId":"jialin7878"},"content":"### `list` - displays task list"},{"lineNumber":70,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":71,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":72,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":73,"author":{"gitId":"jialin7878"},"content":"`list`"},{"lineNumber":74,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":75,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":76,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":77,"author":{"gitId":"jialin7878"},"content":"`(task list)`"},{"lineNumber":78,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":79,"author":{"gitId":"jialin7878"},"content":"### `postpone` - postpones date of task"},{"lineNumber":80,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":81,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":82,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":83,"author":{"gitId":"jialin7878"},"content":"`postpone (index of task)/(dd/MM/yyyy HH:mm)`"},{"lineNumber":84,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":85,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":86,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":87,"author":{"gitId":"jialin7878"},"content":"`Poco has postponed the task`"},{"lineNumber":88,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":89,"author":{"gitId":"jialin7878"},"content":"### `format` - displays the correct format for a command"},{"lineNumber":90,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":91,"author":{"gitId":"jialin7878"},"content":"Example of usage: "},{"lineNumber":92,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":93,"author":{"gitId":"jialin7878"},"content":"`format deadline`"},{"lineNumber":94,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":95,"author":{"gitId":"jialin7878"},"content":"Expected outcome:"},{"lineNumber":96,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":97,"author":{"gitId":"jialin7878"},"content":"`deadline (task description)/(dd/MM/yyyy HH:mm)`"},{"lineNumber":98,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":99,"author":{"gitId":"jialin7878"},"content":"### `help` - displays a list of commands"},{"lineNumber":100,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":101,"author":{"gitId":"jialin7878"},"content":"### `bye` - exits the application"},{"lineNumber":102,"author":{"gitId":"jialin7878"},"content":""}],"authorContributionMap":{"jialin7878":84,"-":18}},{"path":"src/main/java/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.util.HashMap;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"import java.util.function.Function;"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":" * in charge of parsing user input into"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":" * the corresponding command and"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":" * returning the correct output"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"public class Command {"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"    private HashMap\u003cString, Cmd\u003e commands \u003d new HashMap\u003c\u003e();"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"    private TaskList taskList;"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"    private Storage storage;"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"    private String listOfCommands \u003d \" todo \\n deadline \\n event \\n done \\n delete \\n find\""},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"                                        + \" \\n list \\n postpone \\n format \\n bye\";"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"    static class Cmd {"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"        private Function\u003cString, String\u003e method;"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"        private String format;"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"        public Cmd(Function\u003cString, String\u003e method, String format) {"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"            this.method \u003d method;"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"            this.format \u003d format;"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"        public String runCommand(String input) {"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"            return method.apply(input);"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"        public String displayFormat() {"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"            return format;"},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":36,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"     * constructor, initializes references to commands"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"    public Command(Storage storage) {"},{"lineNumber":40,"author":{"gitId":"jialin7878"},"content":"        this.taskList \u003d new TaskList(storage.loadFile());"},{"lineNumber":41,"author":{"gitId":"jialin7878"},"content":"        this.storage \u003d storage;"},{"lineNumber":42,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":"        //init all the duke commands"},{"lineNumber":44,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"todo\", new Cmd((input) -\u003e taskList.add(input, TaskType.TODO),"},{"lineNumber":45,"author":{"gitId":"jialin7878"},"content":"                \"todo (task description)\"));"},{"lineNumber":46,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"deadline\", new Cmd((input) -\u003e taskList.add(input, TaskType.DEADLINE),"},{"lineNumber":47,"author":{"gitId":"jialin7878"},"content":"                \"deadline (task description)/(dd/MM/yyyy HH:mm)\"));"},{"lineNumber":48,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"event\", new Cmd((input) -\u003e taskList.add(input, TaskType.EVENT),"},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"                \"event (event description)/(dd/MM/yyyy HH:mm)\"));"},{"lineNumber":50,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"done\", new Cmd(taskList::done, \"done (indexOfTask)\"));"},{"lineNumber":51,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"delete\", new Cmd(taskList::delete, \"delete (indexOfTask)\"));"},{"lineNumber":52,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"find\", new Cmd(taskList::find, \"find (task description)\"));"},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"list\", new Cmd(taskList::displayList, \"list\"));"},{"lineNumber":54,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"postpone\", new Cmd(taskList::postpone, \"postpone (indexOfTask)/(dd/MM/yyyy HH:mm)\"));"},{"lineNumber":55,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"bye\", new Cmd((input) -\u003e \"See you again!\", \"bye\"));"},{"lineNumber":56,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"help\", new Cmd((input) -\u003e listOfCommands, \"help\"));"},{"lineNumber":57,"author":{"gitId":"jialin7878"},"content":"        commands.put(\"format\", new Cmd(this::displayFormat, \"format (cmd name)\"));"},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":59,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":60,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":61,"author":{"gitId":"jialin7878"},"content":"     * parses to command"},{"lineNumber":62,"author":{"gitId":"jialin7878"},"content":"     * and runs command if found"},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"     * @param input user input"},{"lineNumber":64,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":65,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":66,"author":{"gitId":"jialin7878"},"content":"    public String parseToCommand(String input) {"},{"lineNumber":67,"author":{"gitId":"jialin7878"},"content":"        //for single-word commands e.g list"},{"lineNumber":68,"author":{"gitId":"jialin7878"},"content":"        input +\u003d \" \";"},{"lineNumber":69,"author":{"gitId":"jialin7878"},"content":"        String[] arr \u003d input.split(\" \", 2);"},{"lineNumber":70,"author":{"gitId":"jialin7878"},"content":"        String cmd \u003d arr[0];"},{"lineNumber":71,"author":{"gitId":"jialin7878"},"content":"        if (commands.containsKey(cmd)) {"},{"lineNumber":72,"author":{"gitId":"jialin7878"},"content":"            Cmd fn \u003d commands.get(cmd);"},{"lineNumber":73,"author":{"gitId":"jialin7878"},"content":"            String output \u003d fn.runCommand(arr[1].trim());"},{"lineNumber":74,"author":{"gitId":"jialin7878"},"content":"            //saves after each command"},{"lineNumber":75,"author":{"gitId":"jialin7878"},"content":"            storage.saveFile(taskList);"},{"lineNumber":76,"author":{"gitId":"jialin7878"},"content":"            return output;"},{"lineNumber":77,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"jialin7878"},"content":"        return \"Sorry, Poco did not understand\";"},{"lineNumber":79,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":80,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":81,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":82,"author":{"gitId":"jialin7878"},"content":"     * displays format for the given cmd"},{"lineNumber":83,"author":{"gitId":"jialin7878"},"content":"     * @param cmd cmd to check format"},{"lineNumber":84,"author":{"gitId":"jialin7878"},"content":"     * @return format"},{"lineNumber":85,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"jialin7878"},"content":"    public String displayFormat(String cmd) {"},{"lineNumber":87,"author":{"gitId":"jialin7878"},"content":"        if (commands.containsKey(cmd)) {"},{"lineNumber":88,"author":{"gitId":"jialin7878"},"content":"            Cmd fn \u003d commands.get(cmd);"},{"lineNumber":89,"author":{"gitId":"jialin7878"},"content":"            return fn.displayFormat();"},{"lineNumber":90,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":91,"author":{"gitId":"jialin7878"},"content":"        return \"Sorry, Poco did not understand\";"},{"lineNumber":92,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":93,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":93}},{"path":"src/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":" * deadline"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"public class Deadline extends Task {"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"     * constructor"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"     * @param desc task description"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"     * @param time local date time"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"    public Deadline(String desc, LocalDateTime time) {"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"        super(desc);"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"        this.sym \u003d DEADLINE_SYMBOL;"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"        this.time \u003d time;"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":18}},{"path":"src/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import javafx.geometry.Insets;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"import javafx.geometry.Pos;"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.control.Label;"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.layout.Region;"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"public class DialogBox extends HBox {"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"    private Label text;"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"     * creates dialog box"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"     * @param l text"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"    public DialogBox(Label l) {"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"        text \u003d l;"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"        text.setStyle(\"-fx-text-fill: #D0D0D0; -fx-font-family:\\\"consolas\\\";\""},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"                    + \"-fx-font-size:14px; -fx-font-weight:bold;\");"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"        text.setPadding(new Insets(5, 0, 5, 10));"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"        text.setMinHeight(Region.USE_PREF_SIZE);"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"        this.setAlignment(Pos.TOP_LEFT);"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"        this.getChildren().addAll(text);"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"    public static DialogBox getUserDialog(Label l) {"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"        return new DialogBox(l);"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"    public static DialogBox getDukeDialog(Label l) {"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"        return new DialogBox(l);"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":32}},{"path":"src/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":" * chatbot class"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":4,"author":{"gitId":"-"},"content":"public class Duke {"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"    private Command command;"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"     * constructor, initializes command"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"    public Duke() {"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"        command \u003d new Command(new Storage(\"data/Duke.txt\"));"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"     * passes it to command and returns string"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"     * @param input user input"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"    String getResponse(String input) {"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"        return command.parseToCommand(input);"},{"lineNumber":21,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"jialin7878":19,"-":3}},{"path":"src/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":" * event"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"     * constructor"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"     * @param desc task description"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"     * @param time local date time"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"    public Event(String desc, LocalDateTime time) {"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"        super(desc);"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"        this.sym \u003d EVENT_SYMBOL;"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"        this.time \u003d time;"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":19}},{"path":"src/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import javafx.application.Application;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"public class Launcher {"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"     * launches application"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"     * @param args"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":12}},{"path":"src/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.io.IOException;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.Scene;"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.image.Image;"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"import javafx.stage.Stage;"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"    @Override"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"    public void start(Stage stage) {"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"        try {"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"            stage.setScene(scene);"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"            stage.getIcons().add(new Image(\"/images/heart.png\"));"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"            stage.setTitle(\"Poco\");"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"            stage.show();"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"        } catch (IOException e) {"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"            e.printStackTrace();"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":33}},{"path":"src/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.util.Timer;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"import java.util.TimerTask;"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"import javafx.application.Platform;"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"import javafx.fxml.FXML;"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"import javafx.geometry.Insets;"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.control.Label;"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"    private HBox userInput;"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"    private Duke duke;"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"     * initializes and adds label for opening text"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"    @FXML"},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"    public void initialize() {"},{"lineNumber":34,"author":{"gitId":"jialin7878"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":35,"author":{"gitId":"jialin7878"},"content":"        //hide scrollbar"},{"lineNumber":36,"author":{"gitId":"jialin7878"},"content":"        //scrollPane.hbarPolicyProperty().setValue(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"        scrollPane.vbarPolicyProperty().setValue(ScrollPane.ScrollBarPolicy.NEVER);"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"        String openingMsg \u003d \"hey hey im Poco \\ntype \u0027help\u0027 to view a list of commands\""},{"lineNumber":40,"author":{"gitId":"jialin7878"},"content":"                                + \"\\ntype \u0027format (cmd name)\u0027 to view the correct format \\ntype \u0027bye\u0027 to exit\";"},{"lineNumber":41,"author":{"gitId":"jialin7878"},"content":"        Label text \u003d new Label(openingMsg);"},{"lineNumber":42,"author":{"gitId":"jialin7878"},"content":"        text.setStyle(\"-fx-text-fill: #D0D0D0; -fx-font-family:\\\"consolas\\\";\""},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":"                + \"-fx-font-size:14px; -fx-font-weight:bold;\");"},{"lineNumber":44,"author":{"gitId":"jialin7878"},"content":"        text.setPadding(new Insets(10, 0, 10, 10));"},{"lineNumber":45,"author":{"gitId":"jialin7878"},"content":"        dialogContainer.getChildren().remove(userInput);"},{"lineNumber":46,"author":{"gitId":"jialin7878"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":47,"author":{"gitId":"jialin7878"},"content":"                text,"},{"lineNumber":48,"author":{"gitId":"jialin7878"},"content":"                userInput"},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"        );"},{"lineNumber":50,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":52,"author":{"gitId":"jialin7878"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":"        duke \u003d d;"},{"lineNumber":54,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":56,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":57,"author":{"gitId":"jialin7878"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":59,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"jialin7878"},"content":"    @FXML"},{"lineNumber":61,"author":{"gitId":"jialin7878"},"content":"    private void handleUserInput() {"},{"lineNumber":62,"author":{"gitId":"jialin7878"},"content":"        TextField field \u003d (TextField) userInput.getChildren().get(1);"},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"        String input \u003d field.getText();"},{"lineNumber":64,"author":{"gitId":"jialin7878"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":65,"author":{"gitId":"jialin7878"},"content":"        dialogContainer.getChildren().remove(userInput);"},{"lineNumber":66,"author":{"gitId":"jialin7878"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":67,"author":{"gitId":"jialin7878"},"content":"                DialogBox.getUserDialog(new Label(input)),"},{"lineNumber":68,"author":{"gitId":"jialin7878"},"content":"                DialogBox.getDukeDialog(new Label(response)),"},{"lineNumber":69,"author":{"gitId":"jialin7878"},"content":"                userInput"},{"lineNumber":70,"author":{"gitId":"jialin7878"},"content":"        );"},{"lineNumber":71,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":72,"author":{"gitId":"jialin7878"},"content":"        if (input.equals(\"bye\")) {"},{"lineNumber":73,"author":{"gitId":"jialin7878"},"content":"            TimerTask task \u003d new TimerTask() {"},{"lineNumber":74,"author":{"gitId":"jialin7878"},"content":"                public void run() {"},{"lineNumber":75,"author":{"gitId":"jialin7878"},"content":"                    Platform.exit();"},{"lineNumber":76,"author":{"gitId":"jialin7878"},"content":"                    System.exit(0);"},{"lineNumber":77,"author":{"gitId":"jialin7878"},"content":"                }"},{"lineNumber":78,"author":{"gitId":"jialin7878"},"content":"            };"},{"lineNumber":79,"author":{"gitId":"jialin7878"},"content":"            Timer timer \u003d new Timer(\"Timer\");"},{"lineNumber":80,"author":{"gitId":"jialin7878"},"content":"            timer.schedule(task, 700L);"},{"lineNumber":81,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jialin7878"},"content":"        field.clear();"},{"lineNumber":83,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":84,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":84}},{"path":"src/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.io.BufferedReader;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"import java.io.BufferedWriter;"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"import java.io.FileReader;"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"import java.io.FileWriter;"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"import java.io.IOException;"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"import java.util.ArrayList;"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":" * storage class in charge of loading and saving"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":" * list into file (/data/duke.txt)"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"    private String filePath;"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"     * constructor, intializes file path"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"     * @param filePath file path"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"    public Storage(String filePath) {"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"     * loads file text into array list of task"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"     * @return task list"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"    ArrayList\u003cTask\u003e loadFile() {"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"        initFile();"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"        try {"},{"lineNumber":34,"author":{"gitId":"jialin7878"},"content":"            File f \u003d new File(this.filePath);"},{"lineNumber":35,"author":{"gitId":"jialin7878"},"content":"            BufferedReader reader \u003d new BufferedReader(new FileReader(f));"},{"lineNumber":36,"author":{"gitId":"jialin7878"},"content":"            while (true) {"},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"                String line \u003d reader.readLine();"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":"                if (line \u003d\u003d null || line.isEmpty()) {"},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"                    //no more tasks"},{"lineNumber":40,"author":{"gitId":"jialin7878"},"content":"                    break;"},{"lineNumber":41,"author":{"gitId":"jialin7878"},"content":"                }"},{"lineNumber":42,"author":{"gitId":"jialin7878"},"content":"                Task task \u003d Task.parseToTask(line);"},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":"                if (task !\u003d null) {"},{"lineNumber":44,"author":{"gitId":"jialin7878"},"content":"                    ls.add(task);"},{"lineNumber":45,"author":{"gitId":"jialin7878"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"jialin7878"},"content":"            }"},{"lineNumber":47,"author":{"gitId":"jialin7878"},"content":"            reader.close();"},{"lineNumber":48,"author":{"gitId":"jialin7878"},"content":"        } catch (IOException ex) {"},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"            System.out.println(ex.toString());"},{"lineNumber":50,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":51,"author":{"gitId":"jialin7878"},"content":"        return ls;"},{"lineNumber":52,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":54,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":55,"author":{"gitId":"jialin7878"},"content":"     * saves task list into file"},{"lineNumber":56,"author":{"gitId":"jialin7878"},"content":"     * @param ls task list"},{"lineNumber":57,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":"    void saveFile(TaskList ls) {"},{"lineNumber":59,"author":{"gitId":"jialin7878"},"content":"        System.out.println(\"Saving...\");"},{"lineNumber":60,"author":{"gitId":"jialin7878"},"content":"        File f \u003d new File(this.filePath);"},{"lineNumber":61,"author":{"gitId":"jialin7878"},"content":"        try {"},{"lineNumber":62,"author":{"gitId":"jialin7878"},"content":"            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(f));"},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"            writer.write(ls.toString());"},{"lineNumber":64,"author":{"gitId":"jialin7878"},"content":"            writer.close();"},{"lineNumber":65,"author":{"gitId":"jialin7878"},"content":"        } catch (IOException ex) {"},{"lineNumber":66,"author":{"gitId":"jialin7878"},"content":"            System.out.println(ex.toString());"},{"lineNumber":67,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":68,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":69,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":70,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":71,"author":{"gitId":"jialin7878"},"content":"     * Checks if the directory or file exists"},{"lineNumber":72,"author":{"gitId":"jialin7878"},"content":"     * and if not, creates one"},{"lineNumber":73,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":74,"author":{"gitId":"jialin7878"},"content":"    void initFile() {"},{"lineNumber":75,"author":{"gitId":"jialin7878"},"content":"        File dir \u003d new File (\"data\");"},{"lineNumber":76,"author":{"gitId":"jialin7878"},"content":"        //create dir if not there"},{"lineNumber":77,"author":{"gitId":"jialin7878"},"content":"        if (!dir.isDirectory()) {"},{"lineNumber":78,"author":{"gitId":"jialin7878"},"content":"            if (!dir.mkdir()) {"},{"lineNumber":79,"author":{"gitId":"jialin7878"},"content":"                System.out.println(\"Error creating folder\");"},{"lineNumber":80,"author":{"gitId":"jialin7878"},"content":"            }"},{"lineNumber":81,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":82,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":83,"author":{"gitId":"jialin7878"},"content":"        File f \u003d new File(this.filePath);"},{"lineNumber":84,"author":{"gitId":"jialin7878"},"content":"        //create file if not there"},{"lineNumber":85,"author":{"gitId":"jialin7878"},"content":"        if (!f.exists()) {"},{"lineNumber":86,"author":{"gitId":"jialin7878"},"content":"            try {"},{"lineNumber":87,"author":{"gitId":"jialin7878"},"content":"                if (!f.createNewFile()) {"},{"lineNumber":88,"author":{"gitId":"jialin7878"},"content":"                    System.out.println(\"Error creating file\");"},{"lineNumber":89,"author":{"gitId":"jialin7878"},"content":"                }"},{"lineNumber":90,"author":{"gitId":"jialin7878"},"content":"            } catch (IOException ex) {"},{"lineNumber":91,"author":{"gitId":"jialin7878"},"content":"                System.out.println(ex.toString());"},{"lineNumber":92,"author":{"gitId":"jialin7878"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":95}},{"path":"src/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":" * task"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"public abstract class Task {"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"    protected static final String TODO_SYMBOL \u003d \"[T]\";"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"    protected static final String DEADLINE_SYMBOL \u003d \"[D]\";"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"    protected static final String EVENT_SYMBOL \u003d \"[E]\";"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"    private static DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"    protected String sym \u003d \"\";"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"    protected LocalDateTime time;"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"    private String desc;"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"    private boolean isDone;"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"     * constructor"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"     * @param desc task description"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"    public Task(String desc) {"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"        this.desc \u003d desc;"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"    public String toString() {"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"        String check \u003d isDone ? \"v\" : \"x\";"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"        String timeText \u003d time \u003d\u003d null"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"                        ? \"\""},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"                        : \"/\" + time.format(formatter);"},{"lineNumber":34,"author":{"gitId":"jialin7878"},"content":"        return check + \" \" + sym + \" \" + desc + \" \" + timeText;"},{"lineNumber":35,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":"     * marks task as done"},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"jialin7878"},"content":"    public void done() {"},{"lineNumber":41,"author":{"gitId":"jialin7878"},"content":"        isDone \u003d true;"},{"lineNumber":42,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":44,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"jialin7878"},"content":"     * sets time to new time"},{"lineNumber":46,"author":{"gitId":"jialin7878"},"content":"     * @param newTime user input"},{"lineNumber":47,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"jialin7878"},"content":"    public void postpone(LocalDateTime newTime) {"},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"        this.time \u003d newTime;"},{"lineNumber":50,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":52,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":"     * parses string into task"},{"lineNumber":54,"author":{"gitId":"jialin7878"},"content":"     * @param line string from duke.txt"},{"lineNumber":55,"author":{"gitId":"jialin7878"},"content":"     * @return corresponding task"},{"lineNumber":56,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"jialin7878"},"content":"    public static Task parseToTask(String line) {"},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":"        String c \u003d line.substring(2, 5);"},{"lineNumber":59,"author":{"gitId":"jialin7878"},"content":"        String desc \u003d line.substring(6);"},{"lineNumber":60,"author":{"gitId":"jialin7878"},"content":"        String[] arr;"},{"lineNumber":61,"author":{"gitId":"jialin7878"},"content":"        Task task \u003d null;"},{"lineNumber":62,"author":{"gitId":"jialin7878"},"content":"        switch(c) {"},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"        case TODO_SYMBOL:"},{"lineNumber":64,"author":{"gitId":"jialin7878"},"content":"            task \u003d new ToDo(desc);"},{"lineNumber":65,"author":{"gitId":"jialin7878"},"content":"            break;"},{"lineNumber":66,"author":{"gitId":"jialin7878"},"content":"        case DEADLINE_SYMBOL:"},{"lineNumber":67,"author":{"gitId":"jialin7878"},"content":"            task \u003d parseToTask(desc, TaskType.DEADLINE);"},{"lineNumber":68,"author":{"gitId":"jialin7878"},"content":"            break;"},{"lineNumber":69,"author":{"gitId":"jialin7878"},"content":"        case EVENT_SYMBOL:"},{"lineNumber":70,"author":{"gitId":"jialin7878"},"content":"            task \u003d parseToTask(desc, TaskType.EVENT);"},{"lineNumber":71,"author":{"gitId":"jialin7878"},"content":"            break;"},{"lineNumber":72,"author":{"gitId":"jialin7878"},"content":"        default:"},{"lineNumber":73,"author":{"gitId":"jialin7878"},"content":"            System.out.println(\"Error: could not recognize task symbol\");"},{"lineNumber":74,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":75,"author":{"gitId":"jialin7878"},"content":"        if (task \u003d\u003d null) {"},{"lineNumber":76,"author":{"gitId":"jialin7878"},"content":"            return null;"},{"lineNumber":77,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":78,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":79,"author":{"gitId":"jialin7878"},"content":"        String check \u003d line.substring(0, 1);"},{"lineNumber":80,"author":{"gitId":"jialin7878"},"content":"        if (check.equals(\"v\")) {"},{"lineNumber":81,"author":{"gitId":"jialin7878"},"content":"            task.done();"},{"lineNumber":82,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":83,"author":{"gitId":"jialin7878"},"content":"        return task;"},{"lineNumber":84,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":85,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":87,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":88,"author":{"gitId":"jialin7878"},"content":"     * overloaded method in charge of parsing"},{"lineNumber":89,"author":{"gitId":"jialin7878"},"content":"     * deadline and event tasks"},{"lineNumber":90,"author":{"gitId":"jialin7878"},"content":"     * @param line string from duke.txt"},{"lineNumber":91,"author":{"gitId":"jialin7878"},"content":"     * @param type task type"},{"lineNumber":92,"author":{"gitId":"jialin7878"},"content":"     * @return corresponding task"},{"lineNumber":93,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":94,"author":{"gitId":"jialin7878"},"content":"    public static Task parseToTask(String line, TaskType type) {"},{"lineNumber":95,"author":{"gitId":"jialin7878"},"content":"        if (!line.contains(\"/\")) {"},{"lineNumber":96,"author":{"gitId":"jialin7878"},"content":"            System.out.println(\"Error: invalid task format for deadline/event\");"},{"lineNumber":97,"author":{"gitId":"jialin7878"},"content":"            return null;"},{"lineNumber":98,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":99,"author":{"gitId":"jialin7878"},"content":"        String[] arr \u003d line.split(\"/\", 2);"},{"lineNumber":100,"author":{"gitId":"jialin7878"},"content":"        try {"},{"lineNumber":101,"author":{"gitId":"jialin7878"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(arr[1].trim(), formatter);"},{"lineNumber":102,"author":{"gitId":"jialin7878"},"content":"            return type \u003d\u003d TaskType.DEADLINE ? new Deadline(arr[0], ldt)"},{"lineNumber":103,"author":{"gitId":"jialin7878"},"content":"                                            : new Event(arr[0], ldt);"},{"lineNumber":104,"author":{"gitId":"jialin7878"},"content":"        } catch (Exception e) {"},{"lineNumber":105,"author":{"gitId":"jialin7878"},"content":"            System.out.println(e);"},{"lineNumber":106,"author":{"gitId":"jialin7878"},"content":"            return null;"},{"lineNumber":107,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":108,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":109,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":110,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":110}},{"path":"src/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import java.time.LocalDateTime;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":" * task list class"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"    private ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"    private DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd/MM/yyyy HH:mm\");"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"    public TaskList(ArrayList\u003cTask\u003e ls) {"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"        list.addAll(ls);"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"     * parses string into"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"     * corresponding task"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"     * and adds it to the list"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"     * @param input user input"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"     * @param type task type"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"    String add(String input, TaskType type) {"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"        if (input.isBlank()) {"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"            return \"Blank task\";"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"        Task task;"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"        switch(type) {"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"        case TODO:"},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"            task \u003d new ToDo(input);"},{"lineNumber":34,"author":{"gitId":"jialin7878"},"content":"            list.add(task);"},{"lineNumber":35,"author":{"gitId":"jialin7878"},"content":"            break;"},{"lineNumber":36,"author":{"gitId":"jialin7878"},"content":"        case DEADLINE:"},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"        case EVENT:"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":"            return parseTimedTasks(input, type);"},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"        default:"},{"lineNumber":40,"author":{"gitId":"jialin7878"},"content":"            return \"Error adding task\";"},{"lineNumber":41,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":42,"author":{"gitId":"jialin7878"},"content":"        return \"Poco has added \" + task.toString() + \" to your list\""},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":"                                + \"\\n\" + \"Pending Tasks: \" + list.size();"},{"lineNumber":44,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":45,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":47,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":48,"author":{"gitId":"jialin7878"},"content":"     * parses event and deadline tasks"},{"lineNumber":49,"author":{"gitId":"jialin7878"},"content":"     * @param input user input"},{"lineNumber":50,"author":{"gitId":"jialin7878"},"content":"     * @param type task type"},{"lineNumber":51,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":52,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"jialin7878"},"content":"    private String parseTimedTasks(String input, TaskType type) {"},{"lineNumber":54,"author":{"gitId":"jialin7878"},"content":"        if (!input.contains(\"/\")) {"},{"lineNumber":55,"author":{"gitId":"jialin7878"},"content":"            return \"Error: Specify a time using /\";"},{"lineNumber":56,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":57,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":58,"author":{"gitId":"jialin7878"},"content":"        try {"},{"lineNumber":59,"author":{"gitId":"jialin7878"},"content":"            Task task \u003d null;"},{"lineNumber":60,"author":{"gitId":"jialin7878"},"content":"            String[] arr \u003d input.split(\"/\", 2);"},{"lineNumber":61,"author":{"gitId":"jialin7878"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(arr[1].trim(), formatter);"},{"lineNumber":62,"author":{"gitId":"jialin7878"},"content":"            switch(type) {"},{"lineNumber":63,"author":{"gitId":"jialin7878"},"content":"            case DEADLINE:"},{"lineNumber":64,"author":{"gitId":"jialin7878"},"content":"                task \u003d new Deadline(arr[0], ldt);"},{"lineNumber":65,"author":{"gitId":"jialin7878"},"content":"                list.add(task);"},{"lineNumber":66,"author":{"gitId":"jialin7878"},"content":"                break;"},{"lineNumber":67,"author":{"gitId":"jialin7878"},"content":"            case EVENT:"},{"lineNumber":68,"author":{"gitId":"jialin7878"},"content":"                task \u003d new Event(arr[0], ldt);"},{"lineNumber":69,"author":{"gitId":"jialin7878"},"content":"                list.add(task);"},{"lineNumber":70,"author":{"gitId":"jialin7878"},"content":"                break;"},{"lineNumber":71,"author":{"gitId":"jialin7878"},"content":"            default:"},{"lineNumber":72,"author":{"gitId":"jialin7878"},"content":"                return \"Error adding task\";"},{"lineNumber":73,"author":{"gitId":"jialin7878"},"content":"            }"},{"lineNumber":74,"author":{"gitId":"jialin7878"},"content":"            return \"Poco has added \" + task.toString() + \" to your list\""},{"lineNumber":75,"author":{"gitId":"jialin7878"},"content":"                    + \"\\n\" + \"Pending Tasks: \" + list.size();"},{"lineNumber":76,"author":{"gitId":"jialin7878"},"content":"        } catch (Exception e) {"},{"lineNumber":77,"author":{"gitId":"jialin7878"},"content":"            System.out.println(e);"},{"lineNumber":78,"author":{"gitId":"jialin7878"},"content":"            return \"Error: Invalid time format\";"},{"lineNumber":79,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":82,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":83,"author":{"gitId":"jialin7878"},"content":"     * marks task as done"},{"lineNumber":84,"author":{"gitId":"jialin7878"},"content":"     * @param input index of task"},{"lineNumber":85,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":86,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":87,"author":{"gitId":"jialin7878"},"content":"    String done(String input) {"},{"lineNumber":88,"author":{"gitId":"jialin7878"},"content":"        int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":89,"author":{"gitId":"jialin7878"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {"},{"lineNumber":90,"author":{"gitId":"jialin7878"},"content":"            index++;"},{"lineNumber":91,"author":{"gitId":"jialin7878"},"content":"            return \"Poco cannot find the task: \" + index;"},{"lineNumber":92,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"jialin7878"},"content":"        list.get(index).done();"},{"lineNumber":94,"author":{"gitId":"jialin7878"},"content":"        return \"Good job!\" + \"\\n\""},{"lineNumber":95,"author":{"gitId":"jialin7878"},"content":"                + list.get(index).toString();"},{"lineNumber":96,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":98,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"jialin7878"},"content":"     * deletes task"},{"lineNumber":100,"author":{"gitId":"jialin7878"},"content":"     * @param input index of task"},{"lineNumber":101,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":102,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":103,"author":{"gitId":"jialin7878"},"content":"    String delete(String input) {"},{"lineNumber":104,"author":{"gitId":"jialin7878"},"content":"        int index \u003d Integer.parseInt(input) - 1;"},{"lineNumber":105,"author":{"gitId":"jialin7878"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {"},{"lineNumber":106,"author":{"gitId":"jialin7878"},"content":"            index++;"},{"lineNumber":107,"author":{"gitId":"jialin7878"},"content":"            return \"Poco cannot find the task: \" + index;"},{"lineNumber":108,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"jialin7878"},"content":"        list.remove(index);"},{"lineNumber":110,"author":{"gitId":"jialin7878"},"content":"        return \"Poco has deleted the task\";"},{"lineNumber":111,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":112,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":113,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":114,"author":{"gitId":"jialin7878"},"content":"     * finds tasks with description"},{"lineNumber":115,"author":{"gitId":"jialin7878"},"content":"     * that matches user input"},{"lineNumber":116,"author":{"gitId":"jialin7878"},"content":"     * @param match user input"},{"lineNumber":117,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":118,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":119,"author":{"gitId":"jialin7878"},"content":"    String find(String match) {"},{"lineNumber":120,"author":{"gitId":"jialin7878"},"content":"        String s \u003d \"\";"},{"lineNumber":121,"author":{"gitId":"jialin7878"},"content":"        for (Task task : list) {"},{"lineNumber":122,"author":{"gitId":"jialin7878"},"content":"            if (task.toString().contains(match)) {"},{"lineNumber":123,"author":{"gitId":"jialin7878"},"content":"                s \u003d s.concat(task.toString());"},{"lineNumber":124,"author":{"gitId":"jialin7878"},"content":"                s \u003d s.concat(\"\\n\");"},{"lineNumber":125,"author":{"gitId":"jialin7878"},"content":"            }"},{"lineNumber":126,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":127,"author":{"gitId":"jialin7878"},"content":"        return s;"},{"lineNumber":128,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":129,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":130,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":131,"author":{"gitId":"jialin7878"},"content":"     * displays all tasks in the list"},{"lineNumber":132,"author":{"gitId":"jialin7878"},"content":"     * @param input user input"},{"lineNumber":133,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":134,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":135,"author":{"gitId":"jialin7878"},"content":"    String displayList(String input) {"},{"lineNumber":136,"author":{"gitId":"jialin7878"},"content":"        if (list.size() \u003d\u003d 0) {"},{"lineNumber":137,"author":{"gitId":"jialin7878"},"content":"            return \"Yay, all done!\";"},{"lineNumber":138,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":139,"author":{"gitId":"jialin7878"},"content":"        return this.toString();"},{"lineNumber":140,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":141,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":142,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":143,"author":{"gitId":"jialin7878"},"content":"     * postpones a task to a new date"},{"lineNumber":144,"author":{"gitId":"jialin7878"},"content":"     * @param input user input"},{"lineNumber":145,"author":{"gitId":"jialin7878"},"content":"     * @return output"},{"lineNumber":146,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":147,"author":{"gitId":"jialin7878"},"content":"    String postpone(String input) {"},{"lineNumber":148,"author":{"gitId":"jialin7878"},"content":"        if (!input.contains(\"/\")) {"},{"lineNumber":149,"author":{"gitId":"jialin7878"},"content":"            return \"Error: specify a time using /\";"},{"lineNumber":150,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":151,"author":{"gitId":"jialin7878"},"content":"        String[] arr \u003d input.split(\"/\", 2);"},{"lineNumber":152,"author":{"gitId":"jialin7878"},"content":"        int index \u003d Integer.parseInt(arr[0]) - 1;"},{"lineNumber":153,"author":{"gitId":"jialin7878"},"content":"        if (index \u003c 0 || index \u003e\u003d list.size()) {"},{"lineNumber":154,"author":{"gitId":"jialin7878"},"content":"            index++;"},{"lineNumber":155,"author":{"gitId":"jialin7878"},"content":"            return \"Poco cannot find the task: \" + index;"},{"lineNumber":156,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":157,"author":{"gitId":"jialin7878"},"content":"        Task task \u003d list.get(index);"},{"lineNumber":158,"author":{"gitId":"jialin7878"},"content":"        if (task instanceof ToDo) {"},{"lineNumber":159,"author":{"gitId":"jialin7878"},"content":"            return \"Poco cannot postpone a ToDo task\";"},{"lineNumber":160,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"jialin7878"},"content":"        try {"},{"lineNumber":162,"author":{"gitId":"jialin7878"},"content":"            LocalDateTime ldt \u003d LocalDateTime.parse(arr[1].trim(), formatter);"},{"lineNumber":163,"author":{"gitId":"jialin7878"},"content":"            task.postpone(ldt);"},{"lineNumber":164,"author":{"gitId":"jialin7878"},"content":"        } catch (Exception e) {"},{"lineNumber":165,"author":{"gitId":"jialin7878"},"content":"            System.out.println(e);"},{"lineNumber":166,"author":{"gitId":"jialin7878"},"content":"            return \"Error: Invalid time format\";"},{"lineNumber":167,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":168,"author":{"gitId":"jialin7878"},"content":"        return \"Poco has postponed the task: \" + task.toString();"},{"lineNumber":169,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":170,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":171,"author":{"gitId":"jialin7878"},"content":"    @Override"},{"lineNumber":172,"author":{"gitId":"jialin7878"},"content":"    public String toString() {"},{"lineNumber":173,"author":{"gitId":"jialin7878"},"content":"        String s \u003d \"\";"},{"lineNumber":174,"author":{"gitId":"jialin7878"},"content":"        for (Task task : list) {"},{"lineNumber":175,"author":{"gitId":"jialin7878"},"content":"            s \u003d s.concat(task.toString());"},{"lineNumber":176,"author":{"gitId":"jialin7878"},"content":"            s \u003d s.concat(\"\\n\");"},{"lineNumber":177,"author":{"gitId":"jialin7878"},"content":"        }"},{"lineNumber":178,"author":{"gitId":"jialin7878"},"content":"        return s;"},{"lineNumber":179,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":180,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":180}},{"path":"src/main/java/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":" * enum for the three different"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":" * types of tasks"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"public enum TaskType {"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"    TODO, EVENT, DEADLINE"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":7}},{"path":"src/main/java/ToDo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"/**"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":" * todo"},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":" */"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"public class ToDo extends Task {"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"    /**"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"     * constructor"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"     * @param desc task description"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"     */"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"    public ToDo(String desc) {"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"        super(desc);"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"        this.sym \u003d TODO_SYMBOL;"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":13}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"\u003c?import javafx.geometry.*?\u003e"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"\u003c?import javafx.scene.*?\u003e"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":"\u003c?import javafx.scene.control.*?\u003e"},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"\u003c?import javafx.scene.layout.*?\u003e"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"\u003c?import javafx.scene.text.*?\u003e"},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"510.0\" prefWidth\u003d\"980.0\" style\u003d\"-fx-background-color: black;\" xmlns\u003d\"http://javafx.com/javafx/10.0.2-internal\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"510.0\" prefWidth\u003d\"980.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"            \u003ccontent\u003e"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" focusTraversable\u003d\"true\" prefHeight\u003d\"508.0\" prefWidth\u003d\"979.0\" style\u003d\"-fx-background-color: black;\"\u003e"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"               \u003cchildren\u003e"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":"                  \u003cHBox fx:id\u003d\"userInput\" prefHeight\u003d\"100.0\" prefWidth\u003d\"780.0\"\u003e"},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"                     \u003cchildren\u003e"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"                        \u003cLabel ellipsisString\u003d\"\u0026gt;\" text\u003d\"\u0026gt;\" textAlignment\u003d\"JUSTIFY\" textFill\u003d\"WHITE\"\u003e"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"                           \u003cfont\u003e"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"                              \u003cFont name\u003d\"Consolas Bold\" size\u003d\"14.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"                           \u003c/font\u003e"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"                           \u003copaqueInsets\u003e"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"                              \u003cInsets /\u003e"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"                           \u003c/opaqueInsets\u003e"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":"                           \u003cpadding\u003e"},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":"                              \u003cInsets left\u003d\"10.0\" top\u003d\"5.0\" /\u003e"},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"                           \u003c/padding\u003e"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"                        \u003c/Label\u003e"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"                          \u003cTextField alignment\u003d\"TOP_LEFT\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"940.0\" promptText\u003d\"enter command\" style\u003d\"-fx-background-color: black; -fx-text-inner-color: cyan;\"\u003e"},{"lineNumber":29,"author":{"gitId":"jialin7878"},"content":"                           \u003cfont\u003e"},{"lineNumber":30,"author":{"gitId":"jialin7878"},"content":"                              \u003cFont name\u003d\"Consolas Bold\" size\u003d\"14.0\" /\u003e"},{"lineNumber":31,"author":{"gitId":"jialin7878"},"content":"                           \u003c/font\u003e"},{"lineNumber":32,"author":{"gitId":"jialin7878"},"content":"                           \u003ccursor\u003e"},{"lineNumber":33,"author":{"gitId":"jialin7878"},"content":"                              \u003cCursor fx:constant\u003d\"TEXT\" /\u003e"},{"lineNumber":34,"author":{"gitId":"jialin7878"},"content":"                           \u003c/cursor\u003e"},{"lineNumber":35,"author":{"gitId":"jialin7878"},"content":"                        \u003c/TextField\u003e"},{"lineNumber":36,"author":{"gitId":"jialin7878"},"content":"                     \u003c/children\u003e"},{"lineNumber":37,"author":{"gitId":"jialin7878"},"content":"                  \u003c/HBox\u003e"},{"lineNumber":38,"author":{"gitId":"jialin7878"},"content":"               \u003c/children\u003e"},{"lineNumber":39,"author":{"gitId":"jialin7878"},"content":"               \u003copaqueInsets\u003e"},{"lineNumber":40,"author":{"gitId":"jialin7878"},"content":"                  \u003cInsets /\u003e"},{"lineNumber":41,"author":{"gitId":"jialin7878"},"content":"               \u003c/opaqueInsets\u003e\u003c/VBox\u003e"},{"lineNumber":42,"author":{"gitId":"jialin7878"},"content":"            \u003c/content\u003e"},{"lineNumber":43,"author":{"gitId":"jialin7878"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":44,"author":{"gitId":"jialin7878"},"content":"    \u003c/children\u003e"},{"lineNumber":45,"author":{"gitId":"jialin7878"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"jialin7878":45}},{"path":"src/test/data/test.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"✘ ✏ dance "}],"authorContributionMap":{"jialin7878":1}},{"path":"src/test/java/StorageTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"import org.junit.Test;"},{"lineNumber":2,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":3,"author":{"gitId":"jialin7878"},"content":"import java.io.File;"},{"lineNumber":4,"author":{"gitId":"jialin7878"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":6,"author":{"gitId":"jialin7878"},"content":"import static org.junit.Assert.assertEquals;"},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":8,"author":{"gitId":"jialin7878"},"content":"public class StorageTest {"},{"lineNumber":9,"author":{"gitId":"jialin7878"},"content":"    @Test"},{"lineNumber":10,"author":{"gitId":"jialin7878"},"content":"    public void emptyFileTest() {"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"        Storage store \u003d new Storage(\"data/new.txt\");"},{"lineNumber":12,"author":{"gitId":"jialin7878"},"content":"        ArrayList\u003cTask\u003e ls \u003d store.loadFile();"},{"lineNumber":13,"author":{"gitId":"jialin7878"},"content":"        assertEquals(new ArrayList\u003c\u003e(), ls);"},{"lineNumber":14,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":"    @Test"},{"lineNumber":17,"author":{"gitId":"jialin7878"},"content":"    public void saveAndLoadTest() {"},{"lineNumber":18,"author":{"gitId":"jialin7878"},"content":"        File file \u003d new File(\"data/test.text\");"},{"lineNumber":19,"author":{"gitId":"jialin7878"},"content":"        file.delete();"},{"lineNumber":20,"author":{"gitId":"jialin7878"},"content":"        Storage store \u003d new Storage(\"data/test.txt\");"},{"lineNumber":21,"author":{"gitId":"jialin7878"},"content":"        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"},{"lineNumber":22,"author":{"gitId":"jialin7878"},"content":"        ls.add(new ToDo(\"dance\"));"},{"lineNumber":23,"author":{"gitId":"jialin7878"},"content":"        store.saveFile(new TaskList(ls));"},{"lineNumber":24,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":25,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":26,"author":{"gitId":"jialin7878"},"content":"        assertEquals(\"✘ ✏ dance  \\n\", new TaskList(store.loadFile()).toString());"},{"lineNumber":27,"author":{"gitId":"jialin7878"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"jialin7878"},"content":"}"}],"authorContributionMap":{"jialin7878":28}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"jialin7878"},"content":"bye"}],"authorContributionMap":{"jialin7878":1}},{"path":"text-ui-test/runtest.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"@ECHO OFF"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"if not exist ..\\bin mkdir ..\\bin"},{"lineNumber":4,"author":{"gitId":"-"},"content":""},{"lineNumber":5,"author":{"gitId":"-"},"content":"del ACTUAL.TXT"},{"lineNumber":6,"author":{"gitId":"-"},"content":""},{"lineNumber":7,"author":{"gitId":"jialin7878"},"content":"javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"},{"lineNumber":8,"author":{"gitId":"-"},"content":"IF ERRORLEVEL 1 ("},{"lineNumber":9,"author":{"gitId":"-"},"content":"    echo ********** BUILD FAILURE **********"},{"lineNumber":10,"author":{"gitId":"-"},"content":"    exit /b 1"},{"lineNumber":11,"author":{"gitId":"jialin7878"},"content":"    "},{"lineNumber":12,"author":{"gitId":"-"},"content":")"},{"lineNumber":13,"author":{"gitId":"-"},"content":""},{"lineNumber":14,"author":{"gitId":"-"},"content":"java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":15,"author":{"gitId":"-"},"content":""},{"lineNumber":16,"author":{"gitId":"jialin7878"},"content":""},{"lineNumber":17,"author":{"gitId":"-"},"content":"FC ACTUAL.TXT EXPECTED.TXT"}],"authorContributionMap":{"jialin7878":3,"-":14}}]
