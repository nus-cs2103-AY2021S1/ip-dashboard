[
  {
    "path": "src/main/java/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class AddCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    Task task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public AddCommand(Task task, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        new Duke().print(\"Got it. I\u0027ve added this task:\", \"\\t\" + task,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                         \"Now you have \" + list.size() + \" task(s) in the list\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 18
    }
  },
  {
    "path": "src/main/java/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon!\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        new Duke().print(BYE_MESSAGE);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 8
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    void execute() throws DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 3
    }
  },
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    private String by;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String TASK_TYPE \u003d \"D\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DeadlineTask(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"[%s][%s] %s (by: %s)\", TASK_TYPE, getStatusIcon(), description, by);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 14
    }
  },
  {
    "path": "src/main/java/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    int index; // 0-based"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DeleteCommand(int index, List\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003c 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"That is not a valid item number.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"There are only \" + list.size() +  \" item(s) in the list, try entering a valid item number\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        list.remove(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        new Duke().print(\"The following task has been removed successfully:\", \"\\t\" + task.toString(),"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                         \"Now you have \" + list.size() + \" items(s) left in the list.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 25
    }
  },
  {
    "path": "src/main/java/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    int index; // 0-based"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DoneCommand(int index, List\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003c 0) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"That is not a valid item number.\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(index \u003e\u003d list.size()) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"There are only \" + list.size() +  \" items in the list, try entering a valid item number.\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute() throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Task task \u003d list.get(index);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(task.isDone) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            throw new DukeException(\"The task \\\u0027\" + task.getDescription() + \"\\\u0027 has already been marked as done.\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        new Duke().print(\"Nice, I\u0027ve marked this task as done:\", \"\\t\" + task.toString());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String GREETING \u003d \"Hello! I\u0027m Duke\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String PROMPT \u003d \"What can I do for you?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        new Duke().repl();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void repl() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        boolean isActive \u003d true;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        print(GREETING, PROMPT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        while(isActive) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            String arr[] \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            String command \u003d arr[0];"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            String remainingText \u003d arr.length \u003d\u003d 1 ? null : arr[1].trim();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            isActive \u003d !input.equalsIgnoreCase(\"bye\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"list\": {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if (remainingText !\u003d null) throw new DukeException(\"Did you mean to say \\\u0027list\\\u0027?\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new ListCommand(list).execute();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"todo\": {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if (remainingText \u003d\u003d null) throw new DukeException(\"The description for a task cannot be empty.\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        Task task \u003d new TodoTask(remainingText);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new AddCommand(task, list).execute();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"deadline\": {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if (remainingText \u003d\u003d null) throw new DukeException(\"The description for a task cannot be empty.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        String taskItems[] \u003d remainingText.split(\" /by \");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        String description \u003d taskItems[0].trim();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if(taskItems.length \u003d\u003d 1) throw new DukeException(\"The date for a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        String by \u003d taskItems[1].trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        Task task \u003d new DeadlineTask(description, by);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new AddCommand(task, list).execute();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"event\": {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if (remainingText \u003d\u003d null) throw new DukeException(\"The description for a task cannot be empty.\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        String taskItems[] \u003d remainingText.split(\" /at \");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        String description \u003d taskItems[0].trim();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if(taskItems.length \u003d\u003d 1) throw new DukeException(\"The date for an event cannot be empty.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        String at \u003d taskItems[1].trim();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        Task task \u003d new EventTask(description, at);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new AddCommand(task, list).execute();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"done\": {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if(remainingText \u003d\u003d null) throw new DukeException(\"Please specify an item number.\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        int index \u003d Integer.parseInt(remainingText) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new DoneCommand(index, list).execute();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"delete\": {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if(remainingText \u003d\u003d null) throw new DukeException(\"Please specify an item number.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        int index \u003d Integer.parseInt(remainingText) - 1;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new DeleteCommand(index, list).execute();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    case \"bye\": {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        if (remainingText !\u003d null) throw new DukeException(\"Did you mean to say \\\u0027bye\\\u0027?\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        new ByeCommand().execute();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    default: {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            } catch(DukeException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "                print(e.getMessage());"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public static void print(List\u003cString\u003e strings) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        final String INDENT \u003d \"\\t\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        final String SEPARATOR \u003d \"_\".repeat(69);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        System.out.println(INDENT + SEPARATOR);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        for(String s: strings) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            System.out.println(INDENT + INDENT + s);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        System.out.println(INDENT + SEPARATOR + \"\\n\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public static void print(String ...strings) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        print(Arrays.asList(strings));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "mkeoliya": 100
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 5
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String TASK_TYPE \u003d \"E\";"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public EventTask(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"[%s][%s] %s (at: %s)\", TASK_TYPE, getStatusIcon(), description, at);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 14
    }
  },
  {
    "path": "src/main/java/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public ListCommand(List\u003cTask\u003e list){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void execute() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        if(list.isEmpty()) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            new Duke().print(\"There are no items in the list right now.\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            new Duke().print(itemize());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    private List\u003cString\u003e itemize() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        List\u003cString\u003e itemizedList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        itemizedList.add(\"Here are the items in your list:\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        for(int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "            itemizedList.add((i + 1) + \". \" + list.get(i));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return itemizedList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 28
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        this.isDone \u003d true; // TODO: exception handling + checking if task is already done."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 21
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    static final String TASK_TYPE \u003d \"T\";"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public TodoTask(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "        return String.format(\"[%s][%s] %s\", TASK_TYPE, getStatusIcon(), description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 12
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "blah"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 10
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "# set UTF-8 encoding"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "if"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "  )"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "mkeoliya": 8
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/ByeCommand.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/ListCommand.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/TodoTask.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/EventTask.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/Command.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/AddCommand.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/DeadlineTask.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/DoneCommand.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "mkeoliya"
        },
        "content": "../src/main/java/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "mkeoliya": 11
    }
  }
]
