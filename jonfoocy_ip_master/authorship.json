[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "sourceSets {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    java {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        sourceSets.main.java.srcDirs \u003d [\u0027src\u0027]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//jar {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    manifest {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//        attributes \u0027Main-Class\u0027: \u0027sparrow.Sparrow\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "//}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    archiveBaseName \u003d \"sparrow\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    enableAssertions(true)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 31,
      "-": 45
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Sparrow is a **desktop app for managing tasks and vocabulary, optimized for use via a Command Line Interface** (CLI) while still having the benefits of a Graphical User Interface (GUI)."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- [Quick start](#quick-start)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- [Features](#features)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Viewing help : `help`](#viewing-help)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Adding a task](#adding-a-task)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    + [Adding a Todo : `todo`](#adding-a-todo)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    + [Adding an Event : `event`](#adding-an-event)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    + [Adding a deadline : `deadline`](#adding-a-deadline)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Locating task by name : `find`](#locating-task-by-name)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Marking a task as completed : `done`](#marking-a-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Deleting a task : `delete`](#deleting-a-task)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Adding a vocab : `vocab`](#adding-a-vocab)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Defining a word : `define`](#defining-a-word)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Listing all tasks/vocab : `list`](#listing)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Exiting the program : `bye`](#exiting-the-program)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "  * [Saving the data](#saving-the-data)"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- [Command summary](#command-summary)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "--------------------"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"quick-start\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "## Quick start"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "1. Ensure you have Java `11` or above installed in your computer."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "2. Download the latest `Sparrow.jar` from [here](https://github.com/jonfoocy/ip/releases)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "3. Copy the file to the folder you want to use as the _home folder_ for Sparrow."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "4. Double-click the file to start the app. The GUI similar to the one shown below should appear in a few seconds."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "![Ui](images/SparrowStartScreen.png)"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "--------------------"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"features\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Notes about the command format:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- Words within `\u003c \u003e` are the parameters to be supplied by the user."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "e.g. in `todo \u003cDESCRIPTION\u003e`, `DESCRIPTION` is a parameter to be supplied as `todo buy monkey`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"viewing-help\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Viewing help : `help`"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Shows a message explaining how to access the help page."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `help`"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"adding-a-task\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Adding a task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "3 kinds of tasks can be added: Todo, Event, Deadline."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"adding-a-todo\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "#### Adding a Todo : `todo`"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Adds a todo to the task list."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `todo \u003cDESCRIPTION\u003e`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `todo Find crew for ship`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `todo find out where all the rum has gone to`"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"adding-an-event\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "#### Adding an Event : `event`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Adds an event to the task list. An event must contain the event date."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e`"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Note the `/at` and date format `YYYY-MM-DD`."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `event Attend Brethren Court meeting /at 2020-10-31`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `event Rum deal /at 2020-09-25`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"adding-a-deadline\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "#### Adding a deadline : `deadline`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Adds a deadline to the task list. A deadline must contain a due date."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Note the `/by` and date format `YYYY-MM-DD`."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Examples: "
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `deadline Find fountain of youth /by 2020-12-31`"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `deadline Repay debt to Davy Jones /by 2015-12-31`"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"locating-task-by-name\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Locating task by name : `find`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Searches task list for tasks containing the given keyword."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `find \u003cKEYWORD\u003e`"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Example: `find rum`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"marking-a-task-as-completed\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Marking a task as completed : `done`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Marks a task as done. Task number corresponds to the latest view of the task list."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `done \u003cTASK NUMBER\u003e`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Example: `done 2`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"deleting-a-task\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Deleting a task : `delete`"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Deletes a task from the task list. Task number corresponds to the latest view of the task list."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `delete \u003cTASK NUMBER\u003e`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Example: `delete 1`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"adding-a-vocab\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Adding a vocab : `vocab`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Adds a word to the vocabulary list. Accompanying definition is optional."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `vocab \u003cWORD\u003e \u003cDEFINITION\u003e`"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `vocab pirate`"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `vocab rum an alcholic spirit distilled from sugar-cane residues or molasses`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"defining-a-word\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Defining a word : `define`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Returns definition of a word in the vocab list."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `define \u003cWORD\u003e`"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Example: `define rum`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"listing\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Listing all tasks/vocab : `list`"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Displays all tasks/vocab (depending on argument specified)."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `list \u003cCATEGORY\u003e`"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `list tasks`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "- `list vocab"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"exiting-the-program\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Exiting the program : `bye`"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"saving-the-data\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "### Saving the data"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Sparrow data will be saved in the hard disk automatically after any command that changes the data. There is no need to save manually."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "--------------------"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003ca name\u003d\"command-summary\"\u003e\u003c/a\u003e"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "## Command summary"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Action           | Format, Examples"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "---------------- | ----------------------------------------------------------------------------------------------"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Add todo         | `todo \u003cDESCRIPTION\u003e` \u003cbr\u003e e.g., `todo buy ship`"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Add event        | `event \u003cDESCRIPTION\u003e /at \u003cDATE\u003e` \u003cbr\u003e e.g., `event Appointment with the gallows /at 2003-06-28`"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Add deadline     | `deadline \u003cDESCRIPTION\u003e /by \u003cDATE\u003e` \u003cbr\u003e e.g., `deadline finalize plan /by 2020-09-30`"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Add vocab        | `vocab \u003cWORD\u003e \u003cDEFINITION\u003e` \u003cbr\u003e e.g., `vocab buccaneer a pirate`"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Done             | `done \u003cTASK NUMBER\u003e` \u003cbr\u003e e.g., `done 2`"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Delete           | `delete \u003cTASK NUMBER\u003e` \u003cbr\u003e e.g., `delete 1`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Find             | `find \u003cKEYWORD\u003e` \u003cbr\u003e e.g., `find ship`"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "List tasks/vocab | `list \u003cCATEGORY\u003e` \u003cbr\u003e e.g., `list tasks` or `list vocab`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "Help             | help"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 152,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.Background;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.BackgroundFill;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.CornerRadii;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private DialogBox(String text, Image img, String role) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author jonfoocy-reused"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        //Reused from https://github.com/lye-jw/duke with minor modifications"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        if (role.equals(\"User\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setBackground(new Background(new BackgroundFill(Color.LIGHTSKYBLUE, new CornerRadii(20.0),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "                    new Insets(5, 5, 5, 5))));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "        } else if (role.equals(\"Sparrow\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "            this.setBackground(new Background(new BackgroundFill(Color.DARKGRAY, new CornerRadii(20.0),"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "                    new Insets(5, 5, 5, 5))));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new DialogBox(text, img, \"User\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        var db \u003d new DialogBox(text, img, \"Sparrow\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 65,
      "-": 10
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.Sparrow;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Sparrow sparrow \u003d new Sparrow();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            stage.setTitle(\"Sparrow\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setSparrow(sparrow);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().welcome();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.animation.PauseTransition;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.Sparrow;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Sparrow sparrow;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/WillTurner.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Image sparrowImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/JackSparrow.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void setSparrow(Sparrow s) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sparrow \u003d s;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Sends welcome message to user in Gui window."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void welcome() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String welcomeText \u003d \"Welcome to Sparrow!\\n What can I do for ye?\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(welcomeText, sparrowImage));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Sparrow\u0027s reply"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String response \u003d sparrow.getResponse(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                DialogBox.getDukeDialog(response, sparrowImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (response.equals(ExitCommand.MESSAGE_EXIT)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Stage stage \u003d (Stage) sendButton.getScene().getWindow();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "            //@@author jonfoocy-reused"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "            //Reused from https://stackoverflow.com/a/27334614/ with minor modifications"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            PauseTransition delay \u003d new PauseTransition(Duration.seconds(1));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            delay.setOnFinished((event) -\u003e stage.close());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "            delay.play();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "            //@@author"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 66,
      "-": 6
    }
  },
  {
    "path": "src/main/java/sparrow/Sparrow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.parser.Parser;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Sparrow {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private VocabList vocabList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates an instance of Sparrow, with data stored in the file specified by the path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param filePath Path to file for saving data."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Sparrow(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            tasks \u003d storage.loadTaskListFromFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            vocabList \u003d storage.loadVocabListFromFile();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates an instance of Sparrow, with data stored at the default file path."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Sparrow() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage \u003d new Storage();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            tasks \u003d storage.loadTaskListFromFile();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            vocabList \u003d storage.loadVocabListFromFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Driver method of the app."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Command c \u003d parser.parseCommand(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String result \u003d c.execute(tasks, vocabList, ui, storage);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            ui.replyToUser(result);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            isExit \u003d c.getIsExit();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Generates a reply based on the user\u0027s input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param userInput User\u0027s text input."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Reply to user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getResponse(String userInput) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Command c \u003d parser.parseCommand(userInput);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return c.execute(tasks, vocabList, ui, storage);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Entry point into the application."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Sparrow sparrow \u003d new Sparrow(\"Sparrow.txt\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sparrow.run();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 85
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddDeadlineCommand(Deadline toAdd) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 12
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"event\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddEventCommand(Event toAdd) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 12
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.FileErrorException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddTaskCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_SUCCESS \u003d \"Aye Aye Captain! I\u0027ve added this task: \\n\\t%s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Task toAdd;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates an AddTaskCommand with the Task specified."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param toAdd Task to add to the TaskList."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddTaskCommand(Task toAdd) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.toAdd \u003d toAdd;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            tasks.addTask(toAdd);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveTaskListToFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveVocabListToFile(vocabList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_SUCCESS, toAdd);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (FileErrorException fee) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return fee.getMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 36
    }
  },
  {
    "path": "src/main/java/sparrow/commands/AddTodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Todo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class AddTodoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"todo\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public AddTodoCommand(Todo toAdd) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(toAdd);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 12
    }
  },
  {
    "path": "src/main/java/sparrow/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected int targetIndex \u003d -1;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Command(int targetIndex) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.setTargetIndex(targetIndex);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected Command() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        throw new UnsupportedOperationException(\"This method is to be implemented by child classes!\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void setTargetIndex(int targetIndex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.targetIndex \u003d targetIndex;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public int getTargetIndex() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.targetIndex;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public boolean getIsExit() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 36
    }
  },
  {
    "path": "src/main/java/sparrow/commands/DefineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.Vocabulary;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class DefineCommand extends Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"define\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String NO_WORD_FOUND \u003d \"Ye \u0027ave nah added this word t\u0027 yer list.\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final String targetWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a DefineCommand with the word specified."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param word Word to define."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public DefineCommand(String word) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.targetWord \u003d word;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Vocabulary word: vocabList.getVocabList()) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (word.getWord().equals(targetWord)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                return word.define();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return NO_WORD_FOUND;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 35
    }
  },
  {
    "path": "src/main/java/sparrow/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.FileErrorException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"delete\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_DELETE_TASK_SUCCESS \u003d"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \"Jolly riddance! I\u0027ve deleted this task: \\n\\t%s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public DeleteCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(indexToDelete);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Task deletedTask \u003d tasks.deleteTask(getTargetIndex());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveTaskListToFile(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_DELETE_TASK_SUCCESS, deletedTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return \"INDEX OUT OF BOUNDS\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (FileErrorException fee) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return fee.getMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 33
    }
  },
  {
    "path": "src/main/java/sparrow/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.FileErrorException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"done\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_COMPLETED_TASK_SUCCESS \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \"Great job! I\u0027ve marked this task as completed: \\n\\t%s\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public DoneCommand(int indexToDelete) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(indexToDelete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Task completedTask \u003d tasks.markAsDone(getTargetIndex());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveTaskListToFile(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveVocabListToFile(vocabList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_COMPLETED_TASK_SUCCESS, completedTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return \"INDEX OUT OF BOUNDS\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (FileErrorException fee) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return fee.getMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 33
    }
  },
  {
    "path": "src/main/java/sparrow/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"bye\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_EXIT \u003d \"Bye. Hope t\u0027 see ye again soon!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates an ExitCommand to terminate the program."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isExit \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return MESSAGE_EXIT;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 25
    }
  },
  {
    "path": "src/main/java/sparrow/commands/FilterCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class FilterCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"filter\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_SUCCESS \u003d \"I found tasks matching your search: \\n%s\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_FAILURE \u003d \"I didn\u0027t find any matching tasks :(\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a FilterCommand with the date specified."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param date Date to filter by."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public FilterCommand(LocalDate date) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.filterList(date);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return MESSAGE_FIND_FAILURE;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String matchingTasksAsString \u003d ui.taskListToString(matchingTasks);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_FIND_SUCCESS, matchingTasksAsString);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 42
    }
  },
  {
    "path": "src/main/java/sparrow/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"find\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_SUCCESS \u003d \"I found tasks matching your search: \\n%s\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String MESSAGE_FIND_FAILURE \u003d \"I didn\u0027t find any matching tasks :(\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a FindCommand with the given keyword."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param keyword Term to search for."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d tasks.findTasks(keyword);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return MESSAGE_FIND_FAILURE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String matchingTasksAsString \u003d ui.taskListToString(matchingTasks);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(MESSAGE_FIND_SUCCESS, matchingTasksAsString);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 40
    }
  },
  {
    "path": "src/main/java/sparrow/commands/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"help\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: implement proper help documentation"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return \"You asked for help?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 17
    }
  },
  {
    "path": "src/main/java/sparrow/commands/IncorrectCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class IncorrectCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public final String feedbackToUser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public IncorrectCommand(String feedbackToUser) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.feedbackToUser \u003d feedbackToUser;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return feedbackToUser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 21
    }
  },
  {
    "path": "src/main/java/sparrow/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String TASK_MESSAGE_SUCCESS \u003d \"Here are the tasks in your list: \\n%s\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String VOCAB_MESSAGE_SUCCESS \u003d \"Here are the words in your list: \\n%s\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final String data;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ListCommand(String data) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.data \u003d data;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (data.equals(\"tasks\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String tasksAsString \u003d ui.taskListToString(tasks.getTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(TASK_MESSAGE_SUCCESS, tasksAsString);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else if (data.equals(\"vocab\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String vocabsAsString \u003d ui.vocabListToString(vocabList.getVocabList());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return String.format(VOCAB_MESSAGE_SUCCESS, vocabsAsString);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return \"No matching data found\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 32
    }
  },
  {
    "path": "src/main/java/sparrow/commands/VocabCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.FileErrorException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.Vocabulary;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class VocabCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String COMMAND_WORD \u003d \"vocab\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String ADD_VOCAB_SUCCESS \u003d \" has been added t\u0027 yer vocabulary list.\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Vocabulary newVocab;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public VocabCommand(String newWord) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.newVocab \u003d new Vocabulary(newWord);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public VocabCommand(String newWord, String definition) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.newVocab \u003d new Vocabulary(newWord, definition);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String execute(TaskList tasks, VocabList vocabList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            vocabList.getVocabList().add(newVocab);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveTaskListToFile(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            storage.saveVocabListToFile(vocabList);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return newVocab.getWord() + ADD_VOCAB_SUCCESS;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (FileErrorException fee) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return fee.getMessage();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 36
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/EmptyDeadlineDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyDeadlineDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyDeadlineDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/EmptyEventDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyEventDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyEventDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/EmptyTodoDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class EmptyTodoDescriptionException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public EmptyTodoDescriptionException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/FileErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class FileErrorException extends SparrowException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public FileErrorException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/InvalidDeadlineByException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class InvalidDeadlineByException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public InvalidDeadlineByException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/InvalidEventAtException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class InvalidEventAtException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public InvalidEventAtException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/MissingTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class MissingTaskNumberException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public MissingTaskNumberException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 7
    }
  },
  {
    "path": "src/main/java/sparrow/data/exceptions/SparrowException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class SparrowException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /** Emoji to be pre-pended to an exception message.*/"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String STANDARD_EXCEPTION_MESSAGE \u003d \"ARR!\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F️ \";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public SparrowException(String message, Throwable cause) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(message, cause);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 11
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents a Deadline in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected LocalDate dueDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Deadline."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description details of deadline"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param dueDate when deadline is due"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public LocalDate getDueDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return dueDate;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.dueDate.format(formatter));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 31
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents an Event in the task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates an Event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description Details of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param date When the event occurs."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.date.format(formatter));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 31
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents a Task in the task list. Child classes include Todo, Deadline and Event."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Task object with the given description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description Details of the Task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), this.description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 39
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Encapsulates task list with operations to be carried out on list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Constructs an empty task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Constructs a task list with the input list."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param tasks input task list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void addTask(Task toAdd) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        tasks.add(toAdd);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Returns a task list matching the inputted date filter."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param dateFilter User\u0027s command and date to filter by."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Filtered list based on input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws DateTimeParseException if date passed cannot be converted to a LocalDate object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ArrayList\u003cTask\u003e filterList(LocalDate dateFilter) throws DateTimeParseException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e filteredList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate taskDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            // Get date from Deadline/Event"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                taskDate \u003d ((Deadline) task).getDueDate();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                taskDate \u003d ((Event) task).getDate();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            // Check if task\u0027s date is on date specified"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (taskDate.isEqual(dateFilter)) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                filteredList.add(task);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return filteredList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Marks a task in the task list as completed."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param taskNum Task number corresponding to completed task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task markAsDone(int taskNum) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Task completedTask \u003d tasks.get(taskNum - 1);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        completedTask.markAsDone();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return completedTask;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param taskNum Task number corresponding to the task to be deleted."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Searches TaskList for tasks matching keyword."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param taskStr Keyword to search for."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return List of tasks matching keyword."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public ArrayList\u003cTask\u003e findTasks(String taskStr) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (task.getDescription().contains(taskStr)) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return matchingTasks;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 97
    }
  },
  {
    "path": "src/main/java/sparrow/data/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents a Todo."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param description Details of the todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 19
    }
  },
  {
    "path": "src/main/java/sparrow/data/trivia/VocabList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.trivia;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class VocabList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final List\u003cVocabulary\u003e vocabList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public VocabList() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.vocabList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public VocabList(List\u003cVocabulary\u003e vocabList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.vocabList \u003d vocabList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public List\u003cVocabulary\u003e getVocabList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return vocabList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 20
    }
  },
  {
    "path": "src/main/java/sparrow/data/trivia/Vocabulary.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.data.trivia;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Vocabulary {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final String DICTIONARY_PREFIX \u003d \"https://dictionary.cambridge.org/dictionary/english/\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final String word;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private String definition;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private boolean hasDefinition;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Vocabulary object without a definition."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Vocabulary(String word) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.hasDefinition \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Creates a Vocabulary object with a definition."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Vocabulary(String word, String definition) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.word \u003d word;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.definition \u003d definition;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.hasDefinition \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String getWord() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return word;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void setDefinition(String definition) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.definition \u003d definition;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this.hasDefinition \u003d true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public boolean hasDefinition() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return hasDefinition;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String define() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return hasDefinition ? definition : DICTIONARY_PREFIX + word;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return String.format(\"%s: %s\", word, define());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 49
    }
  },
  {
    "path": "src/main/java/sparrow/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.AddDeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.AddEventCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.AddTodoCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.DefineCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.DoneCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.ExitCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.FilterCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.FindCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.HelpCommand;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.IncorrectCommand;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.ListCommand;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.commands.VocabCommand;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Event;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Todo;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Parses user input and calls the relevant methods."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern BASIC_COMMAND_FORMAT \u003d Pattern.compile(\"(?\u003ccommandWord\u003e\\\\S+)(?\u003carguments\u003e.*)\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern TASK_INDEX_ARGS_FORMAT \u003d Pattern.compile(\"(?\u003ctargetIndex\u003e.+)\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern TODO_FORMAT \u003d Pattern.compile(\"(?\u003cdescription\u003e.+)\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern DEADLINE_FORMAT \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003cdescription\u003e.+)\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    + \" /by (?\u003cdeadlineDate\u003e[0-9-]+)\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern EVENT_FORMAT \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003cdescription\u003e.+)\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    + \" /at (?\u003ceventDate\u003e[0-9-]+)\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern KEYWORDS_ARGS_FORMAT \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003ckeyword\u003e\\\\S+(?:\\\\s+\\\\S+)*)\"); // one or more keywords separated by whitespace"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern FILTER_ARGS_FORMAT \u003d"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Pattern.compile(\"(?\u003ckeywords\u003e\\\\S+) (?\u003cdateFilter\u003e[0-9-]+)\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public static final Pattern VOCAB_FORMAT \u003d Pattern.compile(\"(?\u003cword\u003e\\\\S+)( (?\u003cdefinition\u003e.*))?\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Parses user input to generate a command based on the first word + arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param userInput Text entered by user."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Command to be executed."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Command parseCommand(String userInput) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !userInput.isBlank() : \"No input entered\"; // do I need this assertion?"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author jonfoocy-reused"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "        //Reused from https://github.com/se-edu/addressbook-level2 with modifications,"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "        //including idea of preparing Commands."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "        final Matcher matcher \u003d BASIC_COMMAND_FORMAT.matcher(userInput.trim());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "            // doesn\u0027t seem to enter this block"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "            return new IncorrectCommand(\"Unknown Command\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "        final String commandWord \u003d matcher.group(\"commandWord\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "        final String arguments \u003d matcher.group(\"arguments\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": "        switch (commandWord) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddTodoCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareAddTodo(arguments);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddDeadlineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareAddDeadline(arguments);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "        case AddEventCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareAddEvent(arguments);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "        case DeleteCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareDelete(arguments);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "-"
        },
        "content": "        case DoneCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareDone(arguments);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "-"
        },
        "content": "        case ListCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ListCommand(arguments.trim());"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": "        case FindCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareFind(arguments);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "-"
        },
        "content": "        case FilterCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareFilter(arguments);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": "        case VocabCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareVocab(arguments);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "-"
        },
        "content": "        case DefineCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": "            return prepareDefine(arguments);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "-"
        },
        "content": "        case ExitCommand.COMMAND_WORD:"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "-"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "-"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "-"
        },
        "content": "            //todo"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "        //@@author"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareAddTodo(String args) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d TODO_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Description of a Todo can\u0027t be empty.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Todo todo \u003d new Todo(matcher.group(\"description\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new AddTodoCommand(todo);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: trim whitespace from end of deadline description"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareAddDeadline(String args) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d DEADLINE_FORMAT.matcher((args.trim()));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Wrong deadline format.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate dueDate \u003d LocalDate.parse(matcher.group(\"deadlineDate\"));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Deadline deadline \u003d new Deadline(matcher.group(\"description\"), dueDate);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new AddDeadlineCommand(deadline);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getParsedString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: trim whitespace from end of event description"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareAddEvent(String args) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d EVENT_FORMAT.matcher((args.trim()));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Wrong event format.\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate eventDate \u003d LocalDate.parse(matcher.group(\"eventDate\"));"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Event event \u003d new Event(matcher.group(\"description\"), eventDate);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new AddEventCommand(event);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getParsedString());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareDelete(String args) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            int targetIndex \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new DeleteCommand(targetIndex);"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareDone(String args) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            int targetIndex \u003d Integer.parseInt(args.trim());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new DoneCommand(targetIndex);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(e.getMessage());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    // TODO: add functionality to search by \u003e1 keyword"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareFind(String args) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d KEYWORDS_ARGS_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please pass a keyword to search for.\");"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new FindCommand(matcher.group(\"keyword\"));"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareFilter(String args) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert !args.isEmpty();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d FILTER_ARGS_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"Wrong filter format\");"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please pass a proper date to filter by.\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate dateFilter \u003d LocalDate.parse(matcher.group(\"dateFilter\"));"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new FilterCommand(dateFilter);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please pass a proper date to filter by.\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareDefine(String args) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d KEYWORDS_ARGS_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Please enter a word to define.\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new DefineCommand(matcher.group(\"keyword\"));"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private Command prepareVocab(String args) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        final Matcher matcher \u003d VOCAB_FORMAT.matcher(args.trim());"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!matcher.matches()) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new IncorrectCommand(\"Wrong format for new vocabulary.\");"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (matcher.group(\"definition\") \u003d\u003d null) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"no definition provided\");"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new VocabCommand(matcher.group(\"word\"));"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"definition provided\");"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new VocabCommand(matcher.group(\"word\"), matcher.group(\"definition\"));"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 172,
      "-": 52
    }
  },
  {
    "path": "src/main/java/sparrow/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.nio.file.StandardOpenOption;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.FileErrorException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Deadline;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Event;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.TaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Todo;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.VocabList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.Vocabulary;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Represents the file used to store the task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private static final String DEFAULT_FILE_PATH \u003d \"Sparrow.txt\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private final Path path;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Storage() throws Exception {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        this(DEFAULT_FILE_PATH);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Initialises a Storage object with the path specified."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param filePath Path to file."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws Exception If path does not end with .txt.\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Storage(String filePath) throws Exception {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        path \u003d Path.of(filePath);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (!isValidPath(path)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            throw new Exception(\"Invalid file extension\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author jonfoocy-reused"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    //Reused from https://github.com/se-edu/addressbook-level2"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    private boolean isValidPath(Path filePath) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "        return filePath.toString().endsWith(\".txt\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Returns list of tasks loaded from hard disk."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * If no file found, returns an empty list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return TaskList."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList loadTaskListFromFile() throws FileErrorException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        File f \u003d new File(path.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                List\u003cString\u003e allLines \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                for (String line : allLines) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    if (line.equals(\"---\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    encodedTaskList.add(line);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                return decodeTaskList(encodedTaskList);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                throw new FileErrorException(\"Error loading task list.\", e.getCause());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                return new TaskList();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                throw new FileErrorException(\"Error creating text file.\", e.getCause());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Saves input TaskList to file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param tasks TaskList to be saved."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws FileErrorException if error writing to file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void saveTaskListToFile(TaskList tasks) throws FileErrorException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assert isValidPath(path);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Files.write(path, encodeTaskList(tasks));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            throw new FileErrorException(\"Error saving task list to file.\", e.getCause());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts task list from formatted version to a TaskList object."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param encodedTaskList Task list saved in file."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return TaskList"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public TaskList decodeTaskList(List\u003cString\u003e encodedTaskList) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (String encodedTask : encodedTaskList) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (!encodedTask.isBlank()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                tasks.add(stringToTask(encodedTask));"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new TaskList(tasks);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts TaskList object to a List of Strings."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param tasks TaskList object to be converted."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return List of formatted tasks."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public List\u003cString\u003e encodeTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        List\u003cString\u003e encodedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Task task : tasks.getTasks()) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            encodedTaskList.add(taskToString(task));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return encodedTaskList;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts input into a Task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param input Input to be converted."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Task object."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Task stringToTask(String input) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String[] inputArr \u003d input.split(\"\\\\s+\\\\|\\\\s+\", 4);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        boolean isTaskDone \u003d Integer.parseInt(inputArr[1]) \u003d\u003d 1;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        switch (inputArr[0]) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Todo todo \u003d new Todo(inputArr[2]);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (isTaskDone) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                todo.markAsDone();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            task \u003d todo;"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate dueDate \u003d stringToDate(inputArr[3]);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Deadline deadline \u003d new Deadline(inputArr[2], dueDate);"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (isTaskDone) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                deadline.markAsDone();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            task \u003d deadline;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            LocalDate date \u003d stringToDate(inputArr[3]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Event event \u003d new Event(inputArr[2], date);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (isTaskDone) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                event.markAsDone();"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            task \u003d event;"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"No matching task found, shouldn\u0027t end up here\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"No task created\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts a Task into a String for storage."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param task Task to be converted."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return String representation of Task."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String taskToString(Task task) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(task.getDescription());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (task.getIsDone()) {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"1 | \");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"0 | \");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"T | \");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"D | \");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(\" | \").append(((Deadline) task).getDueDate());"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.insert(0, \"E | \");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(\" | \").append(((Event) task).getDate());"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts String representation of date to LocalDate."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param dateStr String representation of a date."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return LocalDate object."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws DateTimeParseException If input String cannot be parsed."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public LocalDate stringToDate(String dateStr) throws DateTimeParseException {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts a Vocabulary object into a String for storage."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param vocab Vocabulary to be converted."
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return String representation of Vocabulary."
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String vocabToString(Vocabulary vocab) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder(vocab.getWord());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (vocab.hasDefinition()) {"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(\" | \").append(vocab.define());"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts input into a Vocabulary."
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param input Input to be converted."
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return Vocabulary object."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public Vocabulary stringToVocab(String input) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String[] inputArr \u003d input.split(\"\\\\s+\\\\|\\\\s+\", 2);"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (inputArr.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new Vocabulary(inputArr[0], inputArr[1]);"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else if (inputArr.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return new Vocabulary(inputArr[0]);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(\"No vocab created\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts vocabulary list from formatted version to a VocabList object."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param encodedVocabList Vocabulary list saved in file."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return VocabList object."
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public VocabList decodeVocabList(List\u003cString\u003e encodedVocabList) {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        ArrayList\u003cVocabulary\u003e vocabs \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (String encodedVocab : encodedVocabList) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            if (!encodedVocab.isBlank()) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                vocabs.add(stringToVocab(encodedVocab));"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new VocabList(vocabs);"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts VocabList object to a List of Strings."
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param vocabs VocabList object to be converted."
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return List of formatted vocabularies."
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public List\u003cString\u003e encodeVocabList(VocabList vocabs) {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        List\u003cString\u003e encodedVocabList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Vocabulary vocab : vocabs.getVocabList()) {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            encodedVocabList.add(vocabToString(vocab));"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return encodedVocabList;"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Returns list of vocabularies loaded from hard disk."
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * If no file found, returns an empty list."
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @return VocabList."
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public VocabList loadVocabListFromFile() throws FileErrorException {"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        File f \u003d new File(path.toString());"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        if (f.exists()) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                List\u003cString\u003e allLines \u003d Files.readAllLines(path);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                List\u003cString\u003e encodedVocabList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                boolean isVocabYet \u003d false;"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                for (String line : allLines) {"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    if (line.equals(\"---\")) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        isVocabYet \u003d true;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    if (isVocabYet) {"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                        encodedVocabList.add(line);"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                }"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                return decodeVocabList(encodedVocabList);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                throw new FileErrorException(\"Error loading vocab list.\", e.getCause());"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                throw new FileErrorException(\"Error creating text file.\", e.getCause());"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return new VocabList();"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Saves input VocabList to file."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param vocabs VocabList to be saved."
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @throws FileErrorException if error writing to file."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void saveVocabListToFile(VocabList vocabs) throws FileErrorException {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Files.write(path, Arrays.asList(\"---\"), StandardOpenOption.APPEND);"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            Files.write(path, encodeVocabList(vocabs), StandardOpenOption.APPEND);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            throw new FileErrorException(\"Error saving vocab list to file\", e.getCause());"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 312,
      "-": 6
    }
  },
  {
    "path": "src/main/java/sparrow/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.trivia.Vocabulary;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " * Responsible for sending messages to the user."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private static final String DIVIDER \u003d \"    ________________________________________\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    private static final String MESSAGE_PREFIX \u003d \"    \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Welcomes the user to the program."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        String welcome \u003d \"  _  _ _   ___ _                    \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \" | || (_) |_ _( )_ __               \\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \" | __ | |  | ||/| \u0027  \\\\              \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \" |_||_|_| |___| |_|_|_|             \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \" / __|_ __  __ _ _ _ _ _ _____ __ __\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \" \\\\__ \\\\ \u0027_ \\\\/ _` | \u0027_| \u0027_/ _ \\\\ V  V /\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \" |___/ .__/\\\\__,_|_| |_| \\\\___/\\\\_/\\\\_/ \\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                + \"     |_|                            \";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        replyToUser(\"How can I help ye?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Sends a reply to the user in a standard format."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * @param message Reply to be formatted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void replyToUser(String message) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        Scanner sc \u003d new Scanner(message);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            System.out.println(MESSAGE_PREFIX + line);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts input task list to string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String taskListToString(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String temp \u003d String.format(\"%d. %s\\n\", i + 1, tasks.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(temp);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     * Converts input task list to string."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public String vocabListToString(List\u003cVocabulary\u003e vocabList) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        for (Vocabulary vocabulary : vocabList) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            String temp \u003d String.format(\"%s\\n\", vocabulary.getWord());"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            sb.append(temp);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        return sb.toString();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 75
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" \u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003cclip\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \u003cCircle centerX\u003d\"48.0\" centerY\u003d\"48.0\" radius\u003d\"48.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003c/clip\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 27
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 19
    }
  },
  {
    "path": "src/test/java/sparrow/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 6
    }
  },
  {
    "path": "src/test/java/sparrow/SparrowTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "package sparrow;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "import sparrow.data.exceptions.SparrowException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "public class SparrowTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    public void exceptionMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "        assertEquals(\"ARR!\\uD83C\\uDFF4\\u200D\\u2620\\uFE0F️ \", SparrowException.STANDARD_EXCEPTION_MESSAGE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo buy ship"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo sail to Tortuga"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "wrong command"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "todo find treasure"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew /by"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "deadline find a crew /by end of Aug"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting /at"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "event brethren\u0027s court meeting /at next Wed 2-4pm"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done -5"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done 1000"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete -99"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete 999"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "bye"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 24
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "jonfoocy"
        },
        "content": "java -classpath ../bin Sparrow \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "jonfoocy": 2,
      "-": 36
    }
  }
]
