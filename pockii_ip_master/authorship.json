[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task with a deadline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Deadline(String desc) throws MissingDeadlineException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"D\", desc.split(\" /by \", 2)[0]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] temp \u003d desc.split(\" /by \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingDeadlineException(\"deadline\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String date \u003d desc.split(\" /by \", 2)[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "            this.deadline \u003d containsTime(date)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "                                ? formatDateTime(date)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "                                : formatDate(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Deadline(String desc, String date) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"D\", desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "        deadline \u003d date;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formatTaskForFile() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return taskType + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "                description + \" | \" + deadline;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"[D]\" + getStatusIcon() + description + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 36
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a Duke chat bot that helps the user to keep track of their tasks, such as todos,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " * events and deadlines."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private  Ui ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "            tasks \u003d new TaskList(storage.loadFile());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "            ui.showLoadError();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    void handleInput(String[] input) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "            switch (input[0]) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "                ui.list(tasks.formattedList());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "                storage.saveFile(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "                ui.exit();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "                ui.completeTask(tasks.completeTask(Integer.valueOf(input[1])));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "                ui.deleteTask(tasks.deleteTask(Integer.valueOf(input[1])), tasks.getLength());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "                ui.find(tasks.findTasks(input[1]));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "                // Fallthrough"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "                if (input.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "                    throw new MissingDescriptionException(input[0]);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "                    ui.addTask(tasks.addTask(input[0], input[1]), tasks.getLength());"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "                throw new UnknownCommandException();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "            ui.showDukeError(e);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "            ui.showSaveError();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Runs the chat bot by accepting user inputs and handling it through"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * other classes like TaskList and Ui."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String[] input \u003d Parser.parse(sc.nextLine());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": "            handleInput(input);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "-": 4,
      "pockii": 79
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents an exception that can be thrown by the Duke chatbot."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "abstract class DukeException extends Exception {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String message;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.message \u003d \"Something went wrong... \\n \" + message;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "pockii": 16
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task that is occurring at a specific time."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String eventTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Event(String desc) throws MissingDeadlineException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"E\", desc.split(\" /at \", 2)[0]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] temp \u003d desc.split(\" /at \", 2);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (temp.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingDeadlineException(\"event\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String date \u003d desc.split(\" /at \", 2)[1];"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "            eventTime \u003d containsTime(date)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "                            ? formatDateTime(date)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "                            : formatDate(date);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Event(String desc, String eventTime) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"E\", desc);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.eventTime \u003d eventTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formatTaskForFile() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return taskType + \" | \" + (isDone ? \"1\" : \"0\") + \" | \" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "                description + \" | \" + eventTime;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"[E]\" + getStatusIcon() + description + \" (at: \" + eventTime + \")\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 35
    }
  },
  {
    "path": "src/main/java/MissingDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user forgets to write or format"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " * the deadline for Deadline and Event tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MissingDeadlineException extends DukeException{"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    MissingDeadlineException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"The deadline of the \" + taskType + \" is missing (¬ ¬ )\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 9
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user forgets to write the description"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " * for the tasks."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MissingDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    MissingDescriptionException(String taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"The description of the \" + taskType + \" is missing (¬ ¬ )\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 9
    }
  },
  {
    "path": "src/main/java/MissingTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user is trying to complete or delete a"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " * task that does not exist."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class MissingTaskException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    MissingTaskException(int taskIndex) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"There\u0027s no task with the tag \" + taskIndex + \" (・・;)ゞ\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 9
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents an interpreter for user input and formats the input such that"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " * the chat bot is able to understand and handle it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Formats the user input given such that the Duke chat bot is able to"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * handle it."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param str The user input."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The user input formatted for Duke chat bot handling."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public static String[] parse(String str) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return str.split(\" \", 2);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 18
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the area where the data file for the Duke chat bot is stored."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    void createFile() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        File directory \u003d file.getParentFile();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (!(directory.exists())) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Loads the saved tasks from the data file and returns them."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The list of tasks saved in the data file."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public List\u003cTask\u003e loadFile() throws IOException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "                tasks.add(readData(s.nextLine()));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "            s.close();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "            createFile();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Task readData(String s) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] arr \u003d s.split(\" \\\\| \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (arr[0].equals(\"T\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task \u003d new Todo(arr[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else if (arr[0].equals(\"D\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task \u003d new Deadline(arr[2], arr[3]);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task \u003d new Event(arr[2], arr[3]);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (arr[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task.completeTask();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Saves the current task list to the data file for future retrieval."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param tasks The current task list."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void saveFile(TaskList tasks) throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String textToAdd \u003d \"\";"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (Task task: tasks.getList()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": "            textToAdd +\u003d task.formatTaskForFile() + \"\\n\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pockii"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 88
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task with a description that can be marked as done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Task(String taskType, String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected boolean containsTime(String str) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Pattern p \u003d Pattern.compile(\".* ([01]?[0-9]|2[0-3])[0-5][0-9]\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Matcher m \u003d p.matcher(str);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return m.matches();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String formatDate(String str) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "        LocalDate ld \u003d LocalDate.parse(str);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return ld.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String formatDateTime(String str) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"d/MM/yyyy HHmm\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "        LocalDateTime ldt \u003d LocalDateTime.parse(str, formatter);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return ldt.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HH:mm\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected void completeTask() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return isDone ? \"[✓] \" : \"[✗] \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Formats the task to be stored in the text file."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return A string representing the task in a format to be stored in the text file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "    abstract public String formatTaskForFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "    protected boolean match(String keyword) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return getStatusIcon() + description;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 61
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Returns the list of tasks stored in the object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The current list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Returns the number of tasks in the list stored in the object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The size of the current list of tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public int getLength() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Task createTask(String taskType, String desc) throws MissingDeadlineException{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return new Todo(desc);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return new Deadline(desc);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return new Event(desc);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Adds a task with a description and if applicable, a deadline to the task list"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * and returns it."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param taskType The type of task to be added."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param desc The description of task to be added."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The task added to the task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws MissingDeadlineException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Task addTask(String taskType, String desc) throws MissingDeadlineException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task \u003d createTask(taskType, desc);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "    String formatTask(int num, List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String lineBreak \u003d num !\u003d tasks.size() - 1 ? \"\\n  \" : \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return (num + 1) + \".\" + tasks.get(num) + lineBreak;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Returns the tasks in a numbered order as a String that can be printed out."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The String containing the tasks in a numbered order."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formattedList() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "            list +\u003d formatTask(i, tasks);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Marks the task at the given index as completed and returns it."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param num The index of the task in the list."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The completed task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws MissingTaskException"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Task completeTask(int num) throws MissingTaskException {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Task task \u003d tasks.get(num - 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pockii"
        },
        "content": "            task.completeTask();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingTaskException(num);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Deletes the task at the given index and returns it."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param num The index of the task in the list."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @return The deleted task."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @throws MissingTaskException"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public Task deleteTask(int num) throws MissingTaskException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pockii"
        },
        "content": "        if (num \u003e 0 \u0026\u0026 num \u003c\u003d tasks.size()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pockii"
        },
        "content": "            Task task \u003d tasks.remove(num - 1);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pockii"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pockii"
        },
        "content": "            throw new MissingTaskException(num);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pockii"
        },
        "content": "    String findTasks(String keyword) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pockii"
        },
        "content": "            if (task.match(keyword)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pockii"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pockii"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"\";"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pockii"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pockii"
        },
        "content": "            list +\u003d formatTask(i, matchingTasks);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 124
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents a task to be done without a deadline."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    Todo(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"T\", desc);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String formatTaskForFile() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return taskType + \" | \" + (isDone ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "                    + \" | \" + description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return \"[T]\" + getStatusIcon() + description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 20
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the user interface of the Duke chat bot."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "    private String wrapMessage(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String line \u003d \"----------------------------------------------\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        return line + \"\\n \" + message + \"\\n\" + line;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Greets the user when they start up the Duke chat bot."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String greeting \u003d \"Hello! I\u0027m Duke\\n What can I do for you? (◠  ◠✿)\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(greeting));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Bids farewell to the user when they exit the Duke chat bot."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void exit() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String byeMessage \u003d \"Bye! ( ´ ▽ ` )/\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(byeMessage));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.exit(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that the task has been added to the list and the number of tasks"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * currently in the list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param task The task to be added."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param size The number of tasks in the current list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void addTask(Task task, int size) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task: \\n  \" + task +"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pockii"
        },
        "content": "                \"\\n Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(message));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that the task has been marked as done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param task The task to be completed."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void completeTask(Task task) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String message \u003d \"Nice! I\u0027ve marked this task as done: \\n  \" + task;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(message));"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that the task has been deleted and the number of tasks currently"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * in the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param task The task to be deleted."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param size The number of tasks in the current list."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void deleteTask(Task task, int size) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String message \u003d \"Noted. I\u0027ve removed this task: \\n \" + task +"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pockii"
        },
        "content": "                \"\\n Now you have \" + size + \" tasks in the list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(message));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Lists out all the tasks in the current task list in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * numbered order."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param formattedList The formatted task list."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void list(String formattedList) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"Here are the tasks in your list: \\n  \";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pockii"
        },
        "content": "        list +\u003d formattedList;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(list));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user of the error that has occurred while using the Duke"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * chat bot."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pockii"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * @param e The error caught."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void showDukeError(DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(e.toString()));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that an error occurred while trying to save their tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void showSaveError() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(\"Something went wrong while saving your tasks...\"));"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pockii"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pockii"
        },
        "content": "     * Informs the user that an error occurred while trying to load their tasks."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pockii"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void showLoadError() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(\"Something went wrong while loading your tasks...\"));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void find(String matchingTasks) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String list \u003d \"Here are the matching tasks in your list: \\n  \";"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pockii"
        },
        "content": "        list +\u003d matchingTasks;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pockii"
        },
        "content": "        System.out.println(wrapMessage(list));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 108
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": " * Represents the exception when the user enters a command that the Duke chat bot"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": " * is unable to recognise."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class UnknownCommandException extends DukeException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    UnknownCommandException() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "        super(\"I don\u0027t know what that means ┐(\u0027～`;)┌\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 9
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertArrayEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void testParse() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        String[] arr \u003d new String[]{\"todo\", \"return book\"};"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertArrayEquals(arr, p.parse(\"todo return book\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 13
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void addTask_presentDeadline_success() throws MissingDeadlineException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task \u003d tasks.addTask(\"event\", \"project meeting /at 2020-08-27\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(\"[E][✗] project meeting (at: Aug 27 2020)\", task.toString());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void completeTask_negativeIndex_exceptionThrown() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pockii"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pockii"
        },
        "content": "        TaskList tasks \u003d new TaskList(list);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pockii"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pockii"
        },
        "content": "            assertEquals(0, tasks.completeTask(-1));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pockii"
        },
        "content": "        } catch (MissingTaskException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pockii"
        },
        "content": "            String message \u003d \"Something went wrong... \\n \" + \"There\u0027s no task with the tag -1 (・・;)ゞ\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "            assertEquals(message, e.toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pockii"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 29
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "    public void testContainsTime() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pockii"
        },
        "content": "        Task task \u003d new Todo(\"desc\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(true, task.containsTime(\"desc 2359\"));"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(true, task.containsTime(\"desc 0000\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(false, task.containsTime(\"desc 0761\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pockii"
        },
        "content": "        assertEquals(false, task.containsTime(\"desc 2401\"));"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pockii"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pockii"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pockii": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pockii"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pockii"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pockii"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pockii"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pockii"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pockii"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pockii"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "pockii": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pockii"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pockii"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 32,
      "pockii": 2
    }
  }
]
