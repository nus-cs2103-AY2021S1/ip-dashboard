[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"5.1.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "test {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 40
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wireseo"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wireseo"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wireseo"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "wireseo": 84
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Implements a version of Duke called Wyre"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": " *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * @author Eryn Seo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private boolean isRunning \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private String filePath \u003d \"./task_list.txt\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        //ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            System.out.println(ui.showNewSaveFileMessage()); // TODO: fix this system print"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            System.out.println(new DukeException(\"loading failed lah.\")); // TODO: fix this system print"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Creates bot object while initializing necessary components / classes"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param filePath relative path to the task list text file"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Duke(String filePath) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        //ui.showWelcomeMessage();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tasks \u003d storage.load();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            ui.showNewSaveFileMessage();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException | ClassNotFoundException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"loading failed lah.\"); // when to catch and when to throw exception?"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Runs the bot while there is user input \u0026 the user has not ended the session"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        while(sc.hasNextLine() \u0026\u0026 isRunning) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Command c \u003d p.parseCommand(sc.nextLine());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                this.isRunning \u003d !c.isExitCommand();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public static void main(String[] args) throws DukeException {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        new Duke(\"./task_list.txt\").run();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Runs the bot while there is user input \u0026 the user has not ended the session (GUI version)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            Command c \u003d p.parseCommand(input);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 87,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents any Exception specific to the Duke program"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"Paiseh ah, \" + super.toString();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 16
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * A launcher class to workaround classpath issues"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 31
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        );"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 52
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Implements a Parser to parse user commands or dates"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Parses the user command"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param command given user input in string format"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Command parseCommand(String command) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        String[] simpleSplitArgs \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        String commandType \u003d simpleSplitArgs[0];"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        if (commandType.equals(CommandType.BYE.getName())) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.LIST.getName())) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.DONE.getName())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return new DoneCommand(Integer.parseInt(simpleSplitArgs[1]));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.DELETE.getName())) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (simpleSplitArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return new DeleteCommand(Integer.parseInt(simpleSplitArgs[1]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"you need index for deleting (hint: delete \u003cindex\u003e)!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.FIND.getName())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (simpleSplitArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return new FindCommand(simpleSplitArgs[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"you need keyword for filtering (hint: find \u003cindex\u003e)!\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.TODO.getName())) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (simpleSplitArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return new AddCommand(CommandType.TODO, simpleSplitArgs[1], null);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"you need description for todo (hint: todo \u003csome description\u003e)!\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.DEADLINE.getName())) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            String[] allSplitArgs \u003d simpleSplitArgs[1].split(\" /by \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (allSplitArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return new AddCommand(CommandType.DEADLINE, allSplitArgs[0], parseDateAndTime(allSplitArgs[1]));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"you need date and time for deadline (hint: deadline something /by YYYY-MM-DD)!\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else if (commandType.equals(CommandType.EVENT.getName())) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            String[] allSplitArgs \u003d simpleSplitArgs[1].split(\" /at \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (allSplitArgs.length \u003e 1) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return new AddCommand(CommandType.EVENT, allSplitArgs[0], parseDateAndTime(allSplitArgs[1]));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"you need date and time for event (hint: event something /at YYY-MM-DD)!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"Uncle Roger dunno any command like that!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Parses the date and time String into a LocalDate object"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param dateAndTime string containing date and time info"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @return date LocalDate object corresponding to input String"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private LocalDate parseDateAndTime (String dateAndTime) throws DukeException {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return LocalDate.parse(dateAndTime, DateTimeFormatter.ISO_DATE);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch(DateTimeParseException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"wrong date format lah! Use YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 77
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Implements Storage to handle data read and write"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Loads task list text file from relative file path provided"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public TaskList load() throws IOException, ClassNotFoundException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        FileInputStream fis \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ObjectInputStream ois \u003d new ObjectInputStream(fis);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        TaskList lst \u003d (TaskList) ois.readObject();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ois.close();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return lst;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Saves task list text file to relative file path provided"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param lst version of list to be saved onto the text file"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void save(TaskList lst) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        FileOutputStream fos \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        ObjectOutputStream oos \u003d new ObjectOutputStream(fos);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        oos.writeObject(lst);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        oos.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 39
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    List\u003cTask\u003e tList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        tList \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public TaskList(List\u003cTask\u003e t) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        tList \u003d t;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public List\u003cTask\u003e filter(String keyword) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return tList.stream().filter(task -\u003e task.getName().contains(keyword)).collect(Collectors.toList()); // Cast correctly?"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 24
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /*String logo \u003d \" _       _ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"| |  _  | |_   _ ____ ___\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"| | | | | | |_/ |  _ \\\\  _ \\\\ \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"| |_| |_| |\\\\___ |    \u003c  __/\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            + \"\\\\___/\\\\___/ \\\\____|_| \\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String border \u003d \"\\n^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^-^\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    String availableCommands \u003d \"Available commands: bye, list, done, delete, todo, deadline, event\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void showWelcomeMessage() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        //System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        System.out.println(\"Hullo! I Wyre, your Personal Assistant Chatbot! :\u003e\\nWhat you want me to do?\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }*/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showByeMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"Bye bye niece and nephews!\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showNewSaveFileMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"You new mah? Or your save file corrupted? Uncle Roger create new task list for you, don\u0027t worry lah.\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showDoneMessage(Task t) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"Uncle Roger mark this task done:\\t\" + t;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showDeleteMessage(TaskList tList, Task t) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"Uncle Roger remove task:\\t\" + t + \"\\nNow you have \" + (tList.size()) + \" task(s) in the list lah!\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showAddTaskMessage(TaskList tList, Task t) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"Uncle Roger add task:\\n\\t\" + t + \"\\nNow you have \" + tList.size() + \" task(s) in the list lah!\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showFilterMessage(boolean isFound, TaskList filteredTasks) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        if (isFound) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return \"Here the matching tasks lah:\\n\" + printList(filteredTasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return \"Paiseh, no tasks found with that name!\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String showTaskList(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return \"Your list empty lah!\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return \"Here the list lah:\\n\" + printList(tasks);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String printList(TaskList tasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            s +\u003d \"\\t\" + (i + 1) + \". \" + tasks.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return s;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 65
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents the add commands that adds different types of tasks to the task list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final CommandType commandType;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final LocalDate timeOfTask;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Initializes the add command"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param commandType The type of add task; todo deadline or event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param description The description of the task by the user"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param timeOfTask The time for the task (if given)"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public AddCommand(CommandType commandType, String description, LocalDate timeOfTask) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.commandType \u003d commandType;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.timeOfTask \u003d timeOfTask;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Adds and then displays the task from the task list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Then writes the updated task list to computer"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        switch(commandType) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"Todo description cannot be empty lah!\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            Task todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return addThenSave(tasks, ui, storage, todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"Deadline description cannot be empty lah!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else if (timeOfTask.equals(\"\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"Date and time of deadline cannot be empty lah!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Task deadline \u003d new Deadline(description, timeOfTask);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return addThenSave(tasks, ui, storage, deadline);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"Event description cannot be empty lah!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else if (timeOfTask.equals(\"\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                throw new DukeException(\"Date and time of event cannot be empty lah!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                Task event \u003d new Event(description, timeOfTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                return addThenSave(tasks, ui, storage, event);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"Unknown add command lah!\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Adds then saves the task to the task list while showing an appropriate message"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private String addThenSave(TaskList tasks, Ui ui, Storage storage, Task task) throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tasks.add(task);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return ui.showAddTaskMessage(tasks, task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"cannot save due to exception lah!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 80
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents a command that can be interpreted by the system"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Executes the command"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param tasks Current list of tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param ui User interaction object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param storage Storage object for saving the list of tasks"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @throws DukeException Exception handling duke-related matters"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Returns if the command is an exit command terminating the session"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @return false if it is not an exit command, true if it is an exit command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents the different types of commands that the system can interpret"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    EVENT(\"event\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    CommandType(String name) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 25
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents the delete command that removes a task from the task list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final int idx;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Initializes delete command with the input as the index from where the task should be deleted"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param i index of the task to be deleted"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public DeleteCommand(int i) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        idx \u003d i;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Deletes and then displays the task from the task list at the appropriate index"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Then writes the updated task list to computer"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException { // TODO: FIX THIS"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            Task t \u003d tasks.remove(idx - 1);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return ui.showDeleteMessage(tasks, t);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"cannot save data due to unexpected error lah.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 36
    }
  },
  {
    "path": "src/main/java/duke/commands/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final int idx; // NEED TO ALL CAP THIS?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Initializes done command with given index"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param i The index of the task that has been completed"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public DoneCommand(int i) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        idx \u003d i;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Marks task as done and then displays result to user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Then writes the updated task list to computer"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws DukeException{"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            tasks.get(idx).setAsDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            return ui.showDoneMessage(tasks.get(idx));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            throw new DukeException(\"cannot save data due to unexpected error lah.\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents the exit command"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Shows the user the goodbye message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return ui.showByeMessage();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public boolean isExitCommand() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 24
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents the find command to search for task with specific keyword in its description"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private final String keyword; // Also need to ALLCAP this?"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Initializes command with given keyword"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * @param keyword The string to be used when filtering tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Filters and prints the tasks containing the keyword"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) { // TODO: FIX THIS!"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        TaskList filteredTasks \u003d new TaskList(tasks.filter(keyword));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return ui.showFilterMessage(filteredTasks.size() \u003e 0, filteredTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 29
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Represents the list command to display all tasks in task list."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     * Lists tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return ui.showTaskList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 20
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Deadline extends Task implements Serializable {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private LocalDate end;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Deadline(String s, LocalDate e) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        end \u003d e;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public LocalDate getEnd() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return end;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void setEnd(LocalDate e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        end \u003d e;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"[D]\" + \"[\" + (super.isDone() ? \"O\" : \"X\") + \"] \" + super.getName() + \" (by: \""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                + end.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")) + \")\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 28
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class Event extends Task implements Serializable{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Event(String s, LocalDate t) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        time \u003d t;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"[E]\" + \"[\" + (super.isDone() ? \"O\" : \"X\") + \"] \" + super.getName() + \" (at: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                + time.format(DateTimeFormatter.ofPattern(\"MMM dd, yyyy\")) + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 20
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": " * Implements a task that can be completed"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public abstract class Task implements Serializable {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    private Boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Task (String s) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        name \u003d s;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public Boolean isDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void setAsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 29
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class ToDo extends Task implements Serializable {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public ToDo(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        return \"[T]\" + \"[\" + (super.isDone() ? \"O\" : \"X\") + \"] \" + super.getName();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 15
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wireseo": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            \u003cfont\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                \u003cFont size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wireseo"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wireseo"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wireseo"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wireseo": 23
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wireseo"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wireseo"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wireseo"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wireseo"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "        assertEquals(3, 2);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wireseo"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wireseo"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wireseo": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wireseo"
        },
        "content": "javac  -cp ..\\src\\main\\java\\duke -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wireseo": 1,
      "-": 20
    }
  }
]
