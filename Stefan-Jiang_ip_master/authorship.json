[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Deadline(String taskname, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(taskname);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + deadline + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    enum Instruction {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        BYE, LIST, DONE, DELETE, DEADLINE, EVENT, TODO, OTHERS;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Instruction thisInstruction;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisTaskname;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String thisTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        Task thisTask;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        int number;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \"     ____        _        \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"    |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"    Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    Hey there! This is Duke here~\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    How may I help you today?\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        while(!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.LIST;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.DONE;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.DELETE;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.DEADLINE;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.EVENT;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.TODO;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                thisInstruction \u003d Instruction.OTHERS;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                if (thisInstruction \u003d\u003d Instruction.LIST) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTask \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        System.out.println(\"     \" + i + \".\" + thisTask.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.DONE) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    number \u003d Character.getNumericValue(input.charAt(input.length() - 1));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTask.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.set(number - 1, thisTask);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"       \" + thisTask.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else if (thisInstruction \u003d\u003d Instruction.DELETE) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    number \u003d Character.getNumericValue(input.charAt(input.length() - 1));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"     Sure! I\u0027ve removed this task for you:\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    thisTask \u003d list.get(number - 1);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    list.remove(number - 1);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"       \" + thisTask.toString());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    if (thisInstruction \u003d\u003d Instruction.DEADLINE) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (input.length() \u003c 10) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            throw new EmptyTaskNameException(\"     The taskname of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        System.out.println(\"     No problem! I\u0027ve added this task to the list:\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTaskname \u003d input.substring(9, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTime \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        list.add(new Deadline(thisTaskname, thisTime));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    } else if (thisInstruction \u003d\u003d Instruction.EVENT) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (input.length() \u003c 7) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            throw new EmptyTaskNameException(\"     The taskname of a event cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        System.out.println(\"     No problem! I\u0027ve added this task to the list:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTaskname \u003d input.substring(6, input.indexOf(\u0027/\u0027) - 1);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTime \u003d input.substring(input.indexOf(\u0027/\u0027) + 4);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        list.add(new Event(thisTaskname, thisTime));"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    } else if (thisInstruction \u003d\u003d Instruction.TODO) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        if (input.length() \u003c 6) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                            throw new EmptyTaskNameException(\"     The taskname of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        System.out.println(\"     No problem! I\u0027ve added this task to the list:\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        thisTaskname \u003d input.substring(5);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        list.add(new Todo(thisTaskname));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                        throw new UnknownInstructionException(\"     I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"       \" + list.get(list.size() - 1));"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                    System.out.println(\"     Now you have \" + list.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            } catch (DukeException ex) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "                System.out.println(ex.getMessage());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    Bye bye~ See ya!\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        System.out.println(\"    -x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-x-\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 100,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    DukeException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 5
    }
  },
  {
    "path": "src/main/java/EmptyTaskNameException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class EmptyTaskNameException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    EmptyTaskNameException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Event(String taskname, String time) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(taskname);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 13
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String taskname;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected boolean status;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Task(String taskname) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.taskname \u003d taskname;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return (status ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    protected void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        this.status \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.taskname;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 22
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class Todo extends Task  {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public Todo(String taskname) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(taskname);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 10
    }
  },
  {
    "path": "src/main/java/UnknownInstructionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "public class UnknownInstructionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    UnknownInstructionException(String s) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 5
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "todo heyyy"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Stefan-Jiang"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "Stefan-Jiang": 1,
      "-": 20
    }
  }
]
