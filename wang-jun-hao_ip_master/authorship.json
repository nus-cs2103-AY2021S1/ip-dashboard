[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# clippy.clippy project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/clippy.clippy.java` file, right-click it, and choose `Run clippy.clippy.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.23\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 17,
      "-": 45
    }
  },
  {
    "path": "data/jUnitInputTest.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "T|0|run"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 1
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# Clippy User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Clippy is a desktop app for managing tasks, optimized for use via a Command Line Interface (CLI). You can keep track of "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "your day-to-day tasks, search for specific tasks by keywords and update details of tasks. If you can type fast, Clippy "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "can help you keep track of your tasks faster than traditional GUI apps."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# Table of Content"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "1. About this document"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "2. Quick start"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "3. Features"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    1. Viewing help : `help`"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    2. Adding a task: `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        1. Adding a todo task: `todo`"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        2. Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        3. Adding an event task: `event`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    3. Listing all tasks : `list`"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    4. Updating a task : `update`"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    5. Marking a task as done: `done`"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    6. Searching for a task by keyword: `find`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    7. Deleting a task : `delete`"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    8. Exiting the program : `bye`"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    9. Saving the data"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "4. FAQ"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "5. Command Summary"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# 1. About this document"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "This document shows you all the features in Clippy and helps you familiarise with the commands. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Note the following symbols and formatting used in this document:"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![Note Icon](./UG%20images/info.png): This symbol indicates important information"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`list`: Words in grey mark-up indicates that this is a command that you can type into the command line and executed."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`\u003ctask description\u003e`: Words in grey mark-up and within angled brackets are the parameters to be supplied by you."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "e.g. in `find \u003ckeyword\u003e`, `\u003ckeyword\u003e` is a parameter which can be used as `find exercise`."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Items separated by `|` are alternatives, and the usage depends on the scenario."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "e.g `update \u003ctask index\u003e \u003cnew task description\u003e [/by|/at \u003cnew time/date\u003e]` can be used as "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`update 2 java workshop /at Tuesday 6-7pm` if the 2nd task in the list is an event, "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "or"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`update 3 sign up for lesson /by 2020-09-30` if the 3rd task in the list is a deadline."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cbr/\u003e\u003cbr/\u003e\u003cbr/\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Items in square brackets are optional."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "e.g `update \u003ctask index\u003e \u003cnew task description\u003e [/at \u003cnew time/date\u003e]` can be used as "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`update 2 java workshop`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "or "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`update 2 java workshop /at Tuesday 6-7pm`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# 2. Quick start"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "1. Ensure you have Java 11 or above installed in your Computer."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "2. Download the latest clippy.jar from https://github.com/wang-jun-hao/ip."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "3. Copy the file to the folder you want to use as the home folder for your Clippy."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "4. Double-click the file to start the app. The GUI similar to the below should appear in a few seconds. \u003cbr\u003e ![start up](./UG images/quick-start-illustration.png)"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "5. Type the command in the command box and press Enter to execute it. \u003cbr\u003ee.g. typing `help` and pressing Enter will open the help window."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "6. Refer to the Features below for details of each command."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# 3. Features "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.1 Viewing help: `help`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Displays a message explaining how to access the user guide."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![help outcome](./UG images/help%20command.png)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.2 Adding a task: `todo`, `deadline`, `event`"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Adds a task for Clippy to keep track of."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.2.1 Adding a todo task: `todo`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Adds a todo task for Clippy to keep track of. You should add a task as a todo when the task does not have a date/time attached to it."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`todo \u003ctask description\u003e`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `todo exercise at the gym`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/todo%20EO.png)"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.2.2 Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Adds a deadline task for Clippy to keep track of. You should add a task as a deadline when the task needs to be done "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "before a specific date."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD\u003e`"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![Note Icon](./UG%20images/info.png): You have to provide the date in the exact `YYYY-MM-DD` format."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `deadline sign up for hackathon /by 2020-09-30`"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/deadline%20EO.png)"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.2.3 Adding an event task: `event`"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Adds an event task for Clippy to keep track of. You should add a task as an event when the task occurs "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "at a specific date/time period."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`event \u003ctask description\u003e /at \u003cdate/time period\u003e`"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![Note Icon](./UG%20images/info.png): You do not have to follow any format for `\u003cdate/time period\u003e`."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `event java workshop /at Tuesday 6-7pm`"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/event%20EO.png)"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.3 Listing all tasks: `list`"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Shows a list of all tasks being managed by Clippy."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/list%20EO.png)"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.4 Updating a task: `update`"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Updates the details of an existing task being managed by Clippy. Suppose you made a mistake when entering the description of an event. You can use `update` to edit the event’s description."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`update \u003cindex\u003e \u003cnew task description\u003e [/by|/at \u003cnew time/date\u003e] `"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Updates the task at the specified `index`. "
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The `index` refers to the index number shown in the displayed tasks list after using the list command. "
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The `index` must be a positive integer 1, 2, 3, ..."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Existing description will be updated to the input description."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Optional: `/by` or `/at` command can be added at the end, followed by `\u003cnew date/time\u003e`, if you want to update the description and date/time of a deadline or event task."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* ![Note Icon](./UG%20images/info.png) Note the following:"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "  * A todo task does not have a date/time and the `/by` or `/at` command cannot be used when updating a todo"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "  * Use `/by` command when the task is a deadline"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "  * Use `/at` command when the task is an event"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `event birthday party /at 25 Nov 1-4pm` \u003cbr\u003e `update 1 19th birthday party` \u003cbr\u003e updates the description of the 1st task in the list to 19th birthday party."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/update%201%20EO.png)"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `update 1 19th birthday party /at 25 Nov 5-10pm` \u003cbr\u003e updates the description and date/time of the 1st task in the list to 19th birthday party at 25 Nov 5-10pm."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/update%202%20EO.png)"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.5 Marking a task as done: `done`"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Marks a task as done when you have completed the task. This helps you to keep track of which tasks are done and not done."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Marks the task at the specified `index` as done. "
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The `index` refers to the index number shown in the displayed tasks list after using the list command. "
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The `index` must be a positive integer 1, 2, 3, ..."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Clippy will change the status icon of the specified task from [✗] to [✓]"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `done 2` marks the 2nd task in the list as completed"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/mark%20as%20done%20EO.png)"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.6 Searching for a task by keyword: `find`"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Finds tasks whose description contains the given keyword."
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The search is case-sensitive. e.g. if ‘exercise’ tasks exists, `find Exercise` will not be able to find this task. `find exercise` will return the task."
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Searches through only the description of tasks."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Words that contain the keyword as a prefix will be matched e.g. `exer` will match `exercise`."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* All tasks matching the keyword prefix will be returned."
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `todo buy xbox` \u003cbr\u003e `todo buy ps5` \u003cbr\u003e `find buy` \u003cbr\u003e returns 2 tasks with description ‘buy xbox’ and ‘buy ps5’"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/find%20EO.png)"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.7 Deleting a task: `delete`"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Deletes the specified task from Clippy."
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* Deletes the task at the specified `index`."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The `index` refers to the index number shown in the displayed tasks list after using the list command. "
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* The `index` must be a positive integer 1, 2, 3, …​"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Usage"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "* `list` followed by `delete 2` deletes the 2nd task in the task list."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "![todoEO](./UG%20images/delete%20EO.png)"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.8 Exiting the program: `bye`"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "### Format"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "## 3.9 Saving the data"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Clippy’s data is saved in the hard disk automatically after any command that changes the data. There is no need to save manually."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# 4. FAQ"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Q: How do I transfer my data to another Computer?"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "A: Install the app in the other computer and overwrite the empty data file it creates with the file that contains the data of your previous Clippy home folder."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "# 5. Command Summary"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Action | Format, Example usage"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "------ | ------"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Add | `todo \u003ctask description\u003e` \u003cbr\u003e `deadline \u003ctask description\u003e /by \u003cYYYY-MM-DD\u003e` \u003cbr\u003e `event \u003ctask description\u003e /at \u003cdate/time period\u003e` \u003cbr\u003e e.g. `event java workshop​ /at Tuesday 6-7pm`"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "List | `list`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Update | `update \u003ctask index\u003e \u003cnew task description\u003e [/by (OR) /at \u003cnew time/date\u003e]` \u003cbr\u003e e.g. `update 1 19th birthday party /at 25 Nov 5-10pm`"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Mark as done | `done \u003cindex\u003e` \u003cbr\u003e e.g. `done 2`"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Find | `find \u003ckeyword\u003e` \u003cbr\u003e e.g. `find workshop`"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Delete | `delete \u003cindex\u003e` \u003cbr\u003e e.g. `delete 5`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "Help | `help`"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 237,
      "-": 17
    }
  },
  {
    "path": "src/main/java/clippy/Clippy.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.ClippyException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.parser.Parser;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Represents a task-tracking chat bot with Clippy.Command Line Interface."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Clippy {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs Clippy.Clippy object which represents a chat bot and loads saved tasks if save file exists."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param filePath relative path of save file for saved tasks as specified by user"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Clippy(String filePath) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks.updateAllTaskIndices();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (ClippyException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs Clippy.Clippy object and loads saved tasks (from a pre-defined default path) if save file exists."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Clippy() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String filePath \u003d \"./data/savefile.txt\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks.updateAllTaskIndices();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (ClippyException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ui.showError(e);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (ClippyException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 59,
      "-": 1
    }
  },
  {
    "path": "src/main/java/clippy/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Main;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 13
    }
  },
  {
    "path": "src/main/java/clippy/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Represents command that adds tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class AddCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs command object that adds tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param taskDescription literal description of the task"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddCommand(String taskDescription) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Returns whether the command is an exit command by user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @return true if command is exit command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 25
    }
  },
  {
    "path": "src/main/java/clippy/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.InvalidDateFormatException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Represents command that adds deadline-typed tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class AddDeadlineCommand extends AddCommand {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Constructs command object that adds deadline-typed tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param taskDescription literal description of the task"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param by date in YYYY-MM-DD format as a String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddDeadlineCommand(String taskDescription, String by) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param tasks TaskList instance used by Clippy in this session"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param ui Ui instance used by Clippy in this session"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @param storage Storage instance used by Clippy in this session"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * @throws DateTimeParseException"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws "
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            InvalidDateFormatException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Task newTask \u003d new Deadline(taskDescription, by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks.add(newTask);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String output \u003d ui.showAdded(newTask, tasks.size());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            tasks.updateAllTaskIndices();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            storage.save(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new InvalidDateFormatException();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 52
    }
  },
  {
    "path": "src/main/java/clippy/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class AddEventCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddEventCommand(String taskDescription, String at) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task newTask \u003d new Event(taskDescription, at);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showAdded(newTask, tasks.size());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.updateAllTaskIndices();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 28
    }
  },
  {
    "path": "src/main/java/clippy/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class AddToDoCommand extends AddCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public AddToDoCommand(String taskDescription) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(taskDescription);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task newTask \u003d new ToDo(taskDescription);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.add(newTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showAdded(newTask, tasks.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.updateAllTaskIndices();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 25
    }
  },
  {
    "path": "src/main/java/clippy/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.ClippyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.UpdateToDoTimeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage) throws ClippyException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    abstract boolean isExit();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 13
    }
  },
  {
    "path": "src/main/java/clippy/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DeleteCommand extends Command{"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected int indexOfTaskToDelete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public DeleteCommand(int indexOfTaskToDelete) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.indexOfTaskToDelete \u003d indexOfTaskToDelete;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToDelete \u003d tasks.getTask(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.delete(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showDeleted(taskToDelete, tasks.size());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        tasks.updateAllTaskIndices();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 31
    }
  },
  {
    "path": "src/main/java/clippy/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected int indexOfDoneTask;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public DoneCommand(int indexOfDoneTask) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.indexOfDoneTask \u003d indexOfDoneTask;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task doneTask \u003d tasks.getTask(indexOfDoneTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        doneTask.markAsDone();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d ui.showDone(doneTask);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 30
    }
  },
  {
    "path": "src/main/java/clippy/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return ui.showExit();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (o instanceof ExitCommand) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 29
    }
  },
  {
    "path": "src/main/java/clippy/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final String searchString;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public FindCommand(String searchString) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.searchString \u003d searchString;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"Negative number of tasks in Tasklist\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ArrayList\u003cTask\u003e matchedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Task currTask \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String currDesc \u003d currTask.getDesc();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (currDesc.contains(searchString)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                matchedTasks.add(currTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (matchedTasks.isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output \u003d ui.showNoMatch();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output +\u003d ui.showMatchingTaskHeader() + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int i \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            for (Task t : matchedTasks) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                output +\u003d ui.showTaskWithIndex(i, t) "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        + \" at List Index: \" + t.getTaskIndexInList() + \"\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                i++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 51
    }
  },
  {
    "path": "src/main/java/clippy/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.ClippyException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws ClippyException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return ui.showHelp();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 18
    }
  },
  {
    "path": "src/main/java/clippy/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String output;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"Negative number of tasks in Clippy.TaskList\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output \u003d ui.showListNoTasks();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            output \u003d ui.showListWithTasksHeader() + \"\\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                output +\u003d ui.showTaskWithIndex(i, tasks.getTask(i)) + \"\\n\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (o instanceof ListCommand) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 41
    }
  },
  {
    "path": "src/main/java/clippy/command/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected final int indexOfTaskToUpdate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public UpdateCommand(int indexOfTaskToUpdate) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.indexOfTaskToUpdate \u003d indexOfTaskToUpdate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    boolean isExit() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 14
    }
  },
  {
    "path": "src/main/java/clippy/command/UpdateDescriptionAndTimeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.UpdateToDoTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class UpdateDescriptionAndTimeCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String newDescription;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String newTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public UpdateDescriptionAndTimeCommand(int indexOfTaskToUpdate, String newDescription, String newTime) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(indexOfTaskToUpdate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.newDescription \u003d newDescription;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.newTime \u003d newTime;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws UpdateToDoTimeException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToUpdate \u003d tasks.getTask(indexOfTaskToUpdate);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskToUpdate.updateTime(newTime);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskToUpdate.updateDescription(newDescription);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return ui.showUpdated(indexOfTaskToUpdate, taskToUpdate);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 29
    }
  },
  {
    "path": "src/main/java/clippy/command/UpdateDescriptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class UpdateDescriptionCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    final String newDescription;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public UpdateDescriptionCommand(int indexOfTaskToUpdate, String newDescription) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(indexOfTaskToUpdate);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.newDescription \u003d newDescription;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToUpdate \u003d tasks.getTask(indexOfTaskToUpdate);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskToUpdate.updateDescription(newDescription);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return ui.showUpdated(indexOfTaskToUpdate, taskToUpdate);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 25
    }
  },
  {
    "path": "src/main/java/clippy/command/UpdateTimeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.UpdateToDoTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class UpdateTimeCommand extends UpdateCommand {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    String newTime;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public UpdateTimeCommand(int indexOfTaskToUpdate, String newTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(indexOfTaskToUpdate);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.newTime \u003d newTime;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) throws UpdateToDoTimeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task taskToUpdate \u003d tasks.getTask(indexOfTaskToUpdate);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskToUpdate.updateTime(newTime);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        storage.save(tasks);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return ui.showUpdated(indexOfTaskToUpdate, taskToUpdate);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 26
    }
  },
  {
    "path": "src/main/java/clippy/exception/ClippyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ClippyException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public ClippyException(String msg) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return super.getMessage();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 12
    }
  },
  {
    "path": "src/main/java/clippy/exception/CorruptedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class CorruptedFileException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public CorruptedFileException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Save file is corrupted, unable to load tasks.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/EmptyDateTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class EmptyDateTimeException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public EmptyDateTimeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Date/Time cannot be empty! Please retry with given date/time.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/EmptyDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class EmptyDescriptionException extends ClippyException {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public EmptyDescriptionException(TaskType taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Oh no! The description of a \" + getTaskTypeString(taskType) + \" cannot be empty.\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static String getTaskTypeString(TaskType taskType) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return \"todo\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return \"event\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 22
    }
  },
  {
    "path": "src/main/java/clippy/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class InvalidCommandException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public InvalidCommandException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Oops! I\u0027m sorry, but I don\u0027t know what that means. :(\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/InvalidDateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class InvalidDateFormatException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public InvalidDateFormatException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Incorrect date format. Retry with YYYY-MM-DD.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/NoFolderException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class NoFolderException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public NoFolderException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Folder does not exists yet, new \u0027data\u0027 folder created under root\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/NoSavedFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class NoSavedFileException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public NoSavedFileException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"No save file for tasks found. Automatically created new save file under root/data\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/UnableToCreateSaveFileException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class UnableToCreateSaveFileException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public UnableToCreateSaveFileException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"Unable to create save file.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/exception/UpdateToDoTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class UpdateToDoTimeException extends ClippyException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public UpdateToDoTimeException() {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(\"ToDos do not have a date or time! Please retry with only task description.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "src/main/java/clippy/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskType;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static final int TO_DO_MIN_LENGTH \u003d 6;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static final int DEADLINE_MIN_LENGTH \u003d 10;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static final int EVENT_MIN_LENGTH \u003d 7;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static final int BY_GAP \u003d 4;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static final int AT_GAP \u003d 4;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static Command parse(String input) throws EmptyDescriptionException,"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            InvalidCommandException, EmptyDateTimeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.equals(\"help\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return new HelpCommand();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfTaskToDelete \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new DeleteCommand(indexOfTaskToDelete);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfDoneTask \u003d Integer.parseInt(input.substring(5));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new DoneCommand(indexOfDoneTask);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new FindCommand(input.substring(5));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"update\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String[] subInputs \u003d input.split(\" \");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int length \u003d subInputs.length;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfTaskToBeUpdated \u003d Integer.parseInt(subInputs[1]);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (containsBackSlash(subInputs)) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                // update description of Deadline/Event OR update description of Deadline/Event + time"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                int indexOfBackSlash \u003d findIndexOfBackSlash(subInputs);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String[] timeInArray \u003d Arrays.copyOfRange(subInputs, indexOfBackSlash + 1, length);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String time \u003d String.join(\" \", timeInArray);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                if (indexOfBackSlash \u003d\u003d 2) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    // update time only"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    return new UpdateTimeCommand(indexOfTaskToBeUpdated, time);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    // update description and time"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    String[] descriptionInArray \u003d Arrays.copyOfRange(subInputs, 2, indexOfBackSlash);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    String description \u003d String.join(\" \", descriptionInArray);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    return new UpdateDescriptionAndTimeCommand(indexOfTaskToBeUpdated, description, time);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                // update description of To-Do/Deadline/Event only"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String[] descriptionInArray \u003d Arrays.copyOfRange(subInputs, 2,  length);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String description \u003d String.join(\" \", descriptionInArray);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return new UpdateDescriptionCommand(indexOfTaskToBeUpdated, description);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c TO_DO_MIN_LENGTH) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EmptyDescriptionException(TaskType.TODO);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return new AddToDoCommand(input.substring(TO_DO_MIN_LENGTH - 1));"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c DEADLINE_MIN_LENGTH) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EmptyDescriptionException(TaskType.DEADLINE);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfSeparator \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String taskDescription \u003d input.substring(DEADLINE_MIN_LENGTH - 1, indexOfSeparator - 1);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String by \u003d input.substring(indexOfSeparator + BY_GAP);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (by.isBlank()) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EmptyDateTimeException();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new AddDeadlineCommand(taskDescription, by);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (input.length() \u003c EVENT_MIN_LENGTH) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EmptyDescriptionException(TaskType.EVENT);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int indexOfSeparator \u003d input.indexOf(\"/\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String taskDescription \u003d input.substring(EVENT_MIN_LENGTH - 1, indexOfSeparator - 1);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String at \u003d input.substring(indexOfSeparator + AT_GAP);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (at.isBlank()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new EmptyDateTimeException();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return new AddEventCommand(taskDescription, at);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static int findIndexOfBackSlash(String[] subInputs) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int length \u003d subInputs.length;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String subInput \u003d subInputs[i];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (subInput.charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return i;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return -1;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static boolean containsBackSlash(String[] subInputs) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int length \u003d subInputs.length;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String subInput \u003d subInputs[i];"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (subInput.charAt(0) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 111
    }
  },
  {
    "path": "src/main/java/clippy/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.CorruptedFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.NoSavedFileException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.UnableToCreateSaveFileException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws CorruptedFileException, UnableToCreateSaveFileException, NoSavedFileException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ArrayList\u003cTask\u003e savedTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            String folderPath \u003d getFolderPath();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            assert !folderPath.isBlank() : \"Folder path is blank\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File folder \u003d new File(folderPath);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!folder.exists()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            assert folder.exists() : \"Folder is not created before attempting to save a file in it\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Scanner fileReader \u003d new Scanner(saveFile);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            while (fileReader.hasNextLine()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                String taskData \u003d fileReader.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Task currTask \u003d TaskGenerator.generateTask(taskData);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                savedTaskList.add(currTask);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return savedTaskList;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            } catch (IOException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                throw new UnableToCreateSaveFileException();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new NoSavedFileException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void save(TaskList tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            File folder \u003d new File(getFolderPath());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!folder.exists()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                folder.mkdir();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (!saveFile.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                saveFile.createNewFile();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            BufferedWriter bfWriter \u003d new BufferedWriter(new FileWriter(saveFile));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            int numOfTasks \u003d tasks.size();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            for (int i \u003d 1; i \u003c\u003d numOfTasks; i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                Task task \u003d tasks.getTask(i);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                bfWriter.write(task.generateSaveFileData());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                bfWriter.newLine();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            bfWriter.close();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String getFolderPath() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int indexOfLastSlash \u003d 0;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d filePath.length() - 1; i \u003e\u003d 0; i--) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            if (filePath.charAt(i) \u003d\u003d \u0027/\u0027) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                indexOfLastSlash \u003d i;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return filePath.substring(0, indexOfLastSlash);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 84
    }
  },
  {
    "path": "src/main/java/clippy/storage/TaskGenerator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.CorruptedFileException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class TaskGenerator {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static Task generateTask(String taskData) throws CorruptedFileException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String[] taskSubData \u003d taskData.split(\"\\\\|\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String taskTypeLetter \u003d taskSubData[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Boolean isDone \u003d taskSubData[1].equals(\"1\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String taskDesc \u003d taskSubData[2];"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (taskTypeLetter.equals(\"T\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task \u003d new ToDo(taskDesc);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (taskTypeLetter.equals(\"D\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task \u003d new Deadline(taskDesc, taskSubData[3]);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (taskTypeLetter.equals(\"E\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task \u003d new Event(taskDesc, taskSubData[3]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            throw new CorruptedFileException();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 34
    }
  },
  {
    "path": "src/main/java/clippy/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.time.format.TextStyle;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Locale;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Deadline(String desc, String byString) throws DateTimeParseException {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.by \u003d LocalDate.parse(byString);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskType \u003d TaskType.DEADLINE;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void updateTime(String newTime) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.by \u003d LocalDate.parse(newTime);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int day \u003d by.getDayOfMonth();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String month \u003d by.getMonth().getDisplayName(TextStyle.SHORT_STANDALONE, Locale.ENGLISH);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        int year \u003d by.getYear();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString() + \" (by: \" "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                + month + \" \" + day + \" \" + year + \")\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String generateSaveFileData() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"D|\" + (isDone ? \"1\" : \"0\") + \"|\" + desc + \"|\" + by;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 35
    }
  },
  {
    "path": "src/main/java/clippy/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Event(String desc, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskType \u003d TaskType.EVENT;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void updateTime(String newTime) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.at \u003d newTime;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString() +  \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String generateSaveFileData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"E|\" + (isDone ? \"1\" : \"0\") + \"|\" + desc + \"|\" + at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 25
    }
  },
  {
    "path": "src/main/java/clippy/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.UpdateToDoTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected String desc;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    protected TaskType taskType;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final String SYMBOL_TICK \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final String SYMBOL_CROSS \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Task(String desc) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.desc \u003d desc;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void setIndex(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public int getTaskIndexInList() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return (isDone ? SYMBOL_TICK : SYMBOL_CROSS); //return tick or X symbols"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void updateDescription(String newDescription) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.desc \u003d newDescription;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public abstract void updateTime(String newTime) throws UpdateToDoTimeException;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public abstract String generateSaveFileData();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String getDesc() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return desc;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + desc;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 51
    }
  },
  {
    "path": "src/main/java/clippy/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ArrayList\u003cTask\u003e innerList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList \u003d tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void add(Task newTask) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList.add(newTask);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void delete(int indexOfTaskToDelete) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        innerList.remove(indexOfTaskToDelete - 1);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return innerList.size();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public Task getTask(int i) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assert i \u003e\u003d 1 : \"Trying to get task with invalid task index\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return innerList.get(i - 1);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void updateAllTaskIndices() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        for (int i \u003d 0; i \u003c innerList.size(); i++) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Task t \u003d innerList.get(i);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            t.setIndex(i + 1);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return innerList.isEmpty();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 44
    }
  },
  {
    "path": "src/main/java/clippy/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    TODO(\"T\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    DEADLINE(\"D\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    EVENT(\"E\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String letter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    TaskType(String letter) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.letter \u003d letter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return letter;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 21
    }
  },
  {
    "path": "src/main/java/clippy/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.exception.UpdateToDoTimeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public ToDo(String desc) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        super(desc);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        taskType \u003d TaskType.TODO;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"[\" + taskType + \"]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String generateSaveFileData() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return \"T|\" + (isDone ? \"1\" : \"0\") + \"|\" + desc;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void updateTime(String newTime) throws UpdateToDoTimeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        throw new UpdateToDoTimeException();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public boolean equals(Object o) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (this \u003d\u003d o) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (o instanceof ToDo) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            ToDo other \u003d (ToDo) o;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return this.desc.equals(other.desc) \u0026\u0026 this.isDone \u003d\u003d other.isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 37
    }
  },
  {
    "path": "src/main/java/clippy/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 61
    }
  },
  {
    "path": "src/main/java/clippy/ui/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.Clippy;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * A GUI for clippy.Clippy using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Clippy clippy \u003d new Clippy();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setClippy(clippy);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 32
    }
  },
  {
    "path": "src/main/java/clippy/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.Clippy;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " * Controller for Clippy.MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private Clippy clippy;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final Image clippyImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/clippy.jpg\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private static final int exitDelayInSeconds \u003d 2000;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                DialogBox.getDukeDialog(\"Hello! I\u0027m Clippy \\n\" +"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                        \"What can I do for you?\\n\", clippyImage)"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void setClippy(Clippy clippy) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        this.clippy \u003d clippy;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Clippy.Clippy\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String response \u003d clippy.getResponse(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assert !response.isBlank() : \"Clippy.Clippy response is blank\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                DialogBox.getDukeDialog(response, clippyImage)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        );"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        "
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            new Timer().schedule(new TimerTask() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                public void run () { "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                    System.exit(0); "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            }, exitDelayInSeconds);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 72
    }
  },
  {
    "path": "src/main/java/clippy/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "package clippy.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_GREET \u003d \"Hello! I\u0027m Clippy.Clippy \\n\" +"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            \"What can I do for you today?\\n\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_EXIT \u003d \"Bye! Hope to see you again soon!\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_ADDED_TASK \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_LIST_TASK_NO_TASK \u003d \"You have no tasks in your list.\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_LIST_TASK_HAVE_TASK \u003d \"Here are the tasks in your list:\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_MARK_DONE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_DELETED_TASK \u003d \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_FOUND_MATCHING_TASK \u003d \"Here are the matching tasks in your list:\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_NO_MATCHING_TASK \u003d \"No matching tasks are found in your list.\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_UPDATED_TASK \u003d \"Ok! I have updated the task as follows:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_NOW_NO_TASK \u003d \"Now you have no tasks in the list.\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_NOW_ONE_TASK \u003d \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private final static String MSG_HELP \u003d \"Refer to the user guide at https://https://wang-jun-hao.github.io/ip/\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showWelcome() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_GREET;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showExit() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_EXIT;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showError(Exception e) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return e.getMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showHelp() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_HELP;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showListWithTasksHeader() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_LIST_TASK_HAVE_TASK;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showListNoTasks() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_LIST_TASK_NO_TASK;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showTaskWithIndex(int i, Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return i + \".\" + task;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showDeleted(Task task, int numOfRemainingTasks) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_DELETED_TASK + task + \"\\n\" + generateNumOfTasksRemainingSentence(numOfRemainingTasks);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    private String generateNumOfTasksRemainingSentence(int numOfRemainingTasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assert numOfRemainingTasks \u003e\u003d 0 : \"Negative number of remaining tasks\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        switch (numOfRemainingTasks) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        case 0:"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return MSG_NOW_NO_TASK;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        case 1:"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return MSG_NOW_ONE_TASK;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            return \"Now you have \" + numOfRemainingTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showDone(Task task) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_MARK_DONE + task;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showAdded(Task task, int numOfTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assert numOfTasks \u003e\u003d 0 : \"Negative number of tasks\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        String numOfTaskDescription;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        if (numOfTasks \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            numOfTaskDescription \u003d \"Now you have no tasks in the list.\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else if (numOfTasks \u003d\u003d 1) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            numOfTaskDescription \u003d \"Now you have 1 task in the list.\";"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            numOfTaskDescription \u003d \"Now you have \" + numOfTasks + \" tasks in the list.\";"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_ADDED_TASK + task + \"\\n\" + numOfTaskDescription;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showNoMatch() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_NO_MATCHING_TASK;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showMatchingTaskHeader() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_FOUND_MATCHING_TASK;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public String showUpdated(int indexOfUpdatedTask, Task updatedTask) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        return MSG_UPDATED_TASK + showTaskWithIndex(indexOfUpdatedTask, updatedTask);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 97
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"clippy.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 19
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.command.ExitCommand;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.command.ListCommand;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.parser.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void parse_byeInput_exitCommand() throws Exception {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assertEquals(new ExitCommand(), Parser.parse(\"bye\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void parse_listInput_listCommand() throws Exception {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assertEquals(new ListCommand(), Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 17
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import clippy.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    public void load_fileWithToDoRunUndoneTask_arrayListContainingUndoneRunToDoTask() throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "        assertEquals(new ArrayList\u003cTask\u003e(Arrays.asList(new ToDo(\"run\"))), "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "                new Storage(\"./data/jUnitInputTest.txt\").load());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 17
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "deadline return book /by Apr 10th"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "event team meeting /at Tomorrow 1-2pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "todo study"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "done 2"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\clippy.clippy.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "java -classpath ..\\bin clippy.clippy \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "export LC_ALL\u003den_GB.UTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wang-jun-hao"
        },
        "content": "java -classpath ../bin Clippy \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wang-jun-hao": 3,
      "-": 36
    }
  }
]
