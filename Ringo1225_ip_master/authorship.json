[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"repositories {"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"    mavenCentral()"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"dependencies {"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"mainClassName \u003d \"main.java.Launcher\""},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"shadowJar {"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"    archiveBaseName \u003d \"duke\""},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"    archiveClassifier \u003d null"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"run{"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"    standardInput \u003d System.in"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"version \u003d \"0.2\""}],"authorContributionMap":{"Ringo1225":41}},{"path":"command.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"D|1| play |2020-09-08"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":"D|0| read this |2020-09-08"},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"F|1|  read that |4.00"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"F|0| read book |2.00"}],"authorContributionMap":{"Ringo1225":4}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"### Feature "},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"#### Duke"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"A robot named Duke who helps you to manage your tasks."},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"You can simply type in your command, ask Duke to add a task, set a deadline or record a event timing. "},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"## Usage"},{"lineNumber":9,"author":{"gitId":"-"},"content":""},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"### `list` - list all the tasks in your todo list"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"Duke will list all the tasks in your todo list."},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"`list`"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"`Here are the tasks in your list:`"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"`1.[T][✓] read book`"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"`2.[D][✓] return book (by: Oct 10 2020)`"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"`3.[E][✘] project meeting (at: Aug 6th 2-4pm)`"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"### `done` - mark your corresponding tasks as done"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"Duke will mark your corresponding tasks as done"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"`done 3`"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"`Nice! I\u0027ve marked this task as done:`"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"`[E][✓] project meeting (at: Aug 6th 2-4pm)`"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"### `delete` - delete a task from your todo list"},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"Duke will delete a task from your todo list"},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"`delete 3`"},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"`Noted! I\u0027ve removed this task:`"},{"lineNumber":52,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":53,"author":{"gitId":"Ringo1225"},"content":"`[E][✘] project meeting (at: Aug 6th 2-4pm)`"},{"lineNumber":54,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":55,"author":{"gitId":"Ringo1225"},"content":"`Now you have 3 tasks in the list.`"},{"lineNumber":56,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":57,"author":{"gitId":"Ringo1225"},"content":" "},{"lineNumber":58,"author":{"gitId":"Ringo1225"},"content":"### `todo` - simply add a task "},{"lineNumber":59,"author":{"gitId":"Ringo1225"},"content":"Duke will simply add a task "},{"lineNumber":60,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":61,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":62,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":63,"author":{"gitId":"Ringo1225"},"content":"`todo read book`"},{"lineNumber":64,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":65,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":66,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":67,"author":{"gitId":"Ringo1225"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":68,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":69,"author":{"gitId":"Ringo1225"},"content":"   `[T][✘] read book`"},{"lineNumber":70,"author":{"gitId":"Ringo1225"},"content":"   "},{"lineNumber":71,"author":{"gitId":"Ringo1225"},"content":"`Now you have 1 tasks in the list.`"},{"lineNumber":72,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":73,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":74,"author":{"gitId":"Ringo1225"},"content":"### `deadline` - add a task with a specific deadline"},{"lineNumber":75,"author":{"gitId":"Ringo1225"},"content":"Duke will add a task with a specific deadline"},{"lineNumber":76,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":77,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":78,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":79,"author":{"gitId":"Ringo1225"},"content":"`deadline return book /by 2020-10-10`"},{"lineNumber":80,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":81,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":82,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":83,"author":{"gitId":"Ringo1225"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":84,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":85,"author":{"gitId":"Ringo1225"},"content":"`[D][✘] return book (by: Oct 10 2020)`"},{"lineNumber":86,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":87,"author":{"gitId":"Ringo1225"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":88,"author":{"gitId":"Ringo1225"},"content":" "},{"lineNumber":89,"author":{"gitId":"Ringo1225"},"content":" "},{"lineNumber":90,"author":{"gitId":"Ringo1225"},"content":"### `event` - add a task that happens at the time you give"},{"lineNumber":91,"author":{"gitId":"Ringo1225"},"content":"Duke will add a task that happens at the time you give"},{"lineNumber":92,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":93,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":94,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":95,"author":{"gitId":"Ringo1225"},"content":"`event return book /at tonight`"},{"lineNumber":96,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":97,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":98,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":99,"author":{"gitId":"Ringo1225"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":100,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":101,"author":{"gitId":"Ringo1225"},"content":"`[E][✘] return book (at: tonight)`"},{"lineNumber":102,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":103,"author":{"gitId":"Ringo1225"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":104,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":105,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":106,"author":{"gitId":"Ringo1225"},"content":"### `FDTask` - add a task with a fixed duration"},{"lineNumber":107,"author":{"gitId":"Ringo1225"},"content":"Duke will add a task with a fixed duration"},{"lineNumber":108,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":109,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":110,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":111,"author":{"gitId":"Ringo1225"},"content":"`FDTask read book /for 2`"},{"lineNumber":112,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":113,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":114,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":115,"author":{"gitId":"Ringo1225"},"content":"`Got it. I\u0027ve added this task:`"},{"lineNumber":116,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":117,"author":{"gitId":"Ringo1225"},"content":"`[F][✘] read book (needs 2.00 hours)`"},{"lineNumber":118,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":119,"author":{"gitId":"Ringo1225"},"content":"`Now you have 2 tasks in the list.`"},{"lineNumber":120,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":121,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":122,"author":{"gitId":"Ringo1225"},"content":"### `find` - find the task with the given keyword"},{"lineNumber":123,"author":{"gitId":"Ringo1225"},"content":"Duke will find the task with the given keyword"},{"lineNumber":124,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":125,"author":{"gitId":"Ringo1225"},"content":"Example of usage: "},{"lineNumber":126,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":127,"author":{"gitId":"Ringo1225"},"content":"`find book`"},{"lineNumber":128,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":129,"author":{"gitId":"Ringo1225"},"content":"Expected outcome:"},{"lineNumber":130,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":131,"author":{"gitId":"Ringo1225"},"content":"`Here are the matching tasks in your list:`"},{"lineNumber":132,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":133,"author":{"gitId":"Ringo1225"},"content":"`1.[F][✘] read book (needs 2.00 hours)`"},{"lineNumber":134,"author":{"gitId":"-"},"content":""},{"lineNumber":135,"author":{"gitId":"-"},"content":""},{"lineNumber":136,"author":{"gitId":"Ringo1225"},"content":"### `bye` - say goodbye to Duke."},{"lineNumber":137,"author":{"gitId":"Ringo1225"},"content":"Duke will update you background memory with your current todo list"},{"lineNumber":138,"author":{"gitId":"-"},"content":""},{"lineNumber":139,"author":{"gitId":"-"},"content":"Example of usage: "},{"lineNumber":140,"author":{"gitId":"-"},"content":""},{"lineNumber":141,"author":{"gitId":"Ringo1225"},"content":"`bye`"},{"lineNumber":142,"author":{"gitId":"-"},"content":""},{"lineNumber":143,"author":{"gitId":"-"},"content":"Expected outcome:"},{"lineNumber":144,"author":{"gitId":"-"},"content":""},{"lineNumber":145,"author":{"gitId":"Ringo1225"},"content":"`Bye. Hope to see you again soon!`"}],"authorContributionMap":{"Ringo1225":132,"-":13}},{"path":"gradlew.bat","fileType":"bat","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":"@rem Copyright 2015 the original author or authors."},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"@rem Licensed under the Apache License, Version 2.0 (the \"License\");"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"@rem you may not use this file except in compliance with the License."},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"@rem You may obtain a copy of the License at"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"@rem      https://www.apache.org/licenses/LICENSE-2.0"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"@rem Unless required by applicable law or agreed to in writing, software"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"@rem distributed under the License is distributed on an \"AS IS\" BASIS,"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"@rem See the License for the specific language governing permissions and"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"@rem limitations under the License."},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"@rem ##########################################################################"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"@rem  Gradle startup script for Windows"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"@rem"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"@rem ##########################################################################"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"@rem Set local scope for the variables with windows NT shell"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"set DIRNAME\u003d%~dp0"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"set APP_BASE_NAME\u003d%~n0"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"set APP_HOME\u003d%DIRNAME%"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"@rem Find java.exe"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"if defined JAVA_HOME goto findJavaFromJavaHome"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"set JAVA_EXE\u003djava.exe"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"echo."},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"echo."},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":"echo location of your Java installation."},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":"goto fail"},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":":findJavaFromJavaHome"},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"},{"lineNumber":52,"author":{"gitId":"Ringo1225"},"content":"set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"},{"lineNumber":53,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":54,"author":{"gitId":"Ringo1225"},"content":"if exist \"%JAVA_EXE%\" goto init"},{"lineNumber":55,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":56,"author":{"gitId":"Ringo1225"},"content":"echo."},{"lineNumber":57,"author":{"gitId":"Ringo1225"},"content":"echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"},{"lineNumber":58,"author":{"gitId":"Ringo1225"},"content":"echo."},{"lineNumber":59,"author":{"gitId":"Ringo1225"},"content":"echo Please set the JAVA_HOME variable in your environment to match the"},{"lineNumber":60,"author":{"gitId":"Ringo1225"},"content":"echo location of your Java installation."},{"lineNumber":61,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":62,"author":{"gitId":"Ringo1225"},"content":"goto fail"},{"lineNumber":63,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":64,"author":{"gitId":"Ringo1225"},"content":":init"},{"lineNumber":65,"author":{"gitId":"Ringo1225"},"content":"@rem Get command-line arguments, handling Windows variants"},{"lineNumber":66,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":67,"author":{"gitId":"Ringo1225"},"content":"if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"},{"lineNumber":68,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":69,"author":{"gitId":"Ringo1225"},"content":":win9xME_args"},{"lineNumber":70,"author":{"gitId":"Ringo1225"},"content":"@rem Slurp the command line arguments."},{"lineNumber":71,"author":{"gitId":"Ringo1225"},"content":"set CMD_LINE_ARGS\u003d"},{"lineNumber":72,"author":{"gitId":"Ringo1225"},"content":"set _SKIP\u003d2"},{"lineNumber":73,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":74,"author":{"gitId":"Ringo1225"},"content":":win9xME_args_slurp"},{"lineNumber":75,"author":{"gitId":"Ringo1225"},"content":"if \"x%~1\" \u003d\u003d \"x\" goto execute"},{"lineNumber":76,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":77,"author":{"gitId":"Ringo1225"},"content":"set CMD_LINE_ARGS\u003d%*"},{"lineNumber":78,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":79,"author":{"gitId":"Ringo1225"},"content":":execute"},{"lineNumber":80,"author":{"gitId":"Ringo1225"},"content":"@rem Setup the command line"},{"lineNumber":81,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":82,"author":{"gitId":"Ringo1225"},"content":"set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"},{"lineNumber":83,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":84,"author":{"gitId":"Ringo1225"},"content":"@rem Execute Gradle"},{"lineNumber":85,"author":{"gitId":"Ringo1225"},"content":"\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"},{"lineNumber":86,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":87,"author":{"gitId":"Ringo1225"},"content":":end"},{"lineNumber":88,"author":{"gitId":"Ringo1225"},"content":"@rem End local scope for the variables with windows NT shell"},{"lineNumber":89,"author":{"gitId":"Ringo1225"},"content":"if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"},{"lineNumber":90,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":91,"author":{"gitId":"Ringo1225"},"content":":fail"},{"lineNumber":92,"author":{"gitId":"Ringo1225"},"content":"rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"},{"lineNumber":93,"author":{"gitId":"Ringo1225"},"content":"rem the _cmd.exe /c_ return code!"},{"lineNumber":94,"author":{"gitId":"Ringo1225"},"content":"if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"},{"lineNumber":95,"author":{"gitId":"Ringo1225"},"content":"exit /b 1"},{"lineNumber":96,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":97,"author":{"gitId":"Ringo1225"},"content":":mainEnd"},{"lineNumber":98,"author":{"gitId":"Ringo1225"},"content":"if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"},{"lineNumber":99,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":100,"author":{"gitId":"Ringo1225"},"content":":omega"}],"authorContributionMap":{"Ringo1225":100}},{"path":"src/main/java/main/java/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":" * A kind of the tasks, which has a specific deadline"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"public class Deadline extends Task {"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"    protected LocalDate deadline;"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"    public Deadline(String description, LocalDate deadline) {"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"        super(description);"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"    public Deadline(String description, LocalDate deadline, boolean isDone) {"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"        super(description, isDone);"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"        this.deadline \u003d deadline;"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"     * gives the String representing the deadline"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"     * @return a String representing the deadline"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"    private String getDeadline() {"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"        return deadline.format(DateTimeFormatter.ofPattern(\" MMM dd yyyy\"));"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"    public String getDescription() {"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"        return \"[D][\" + getStatusIcon()"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"                + \"]\" + description + \"(by:\" + getDeadline() + \")\";"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"    public void printDescription() {"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(getDescription());"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":41}},{"path":"src/main/java/main/java/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"//@@author {Ringo1225}-reused"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"//{reused code from https://se-education.org/guides/tutorials/javaFx.html}"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":" * An example of a custom control using FXML."},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":" * containing text from the speaker."},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"public class DialogBox extends HBox {"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"    private Label dialog;"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"    private ImageView displayPicture;"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"            fxmlLoader.load();"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"        } catch (IOException e) {"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"            e.printStackTrace();"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"        dialog.setText(text);"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"        displayPicture.setImage(img);"},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"    private void flip() {"},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":"        Collections.reverse(tmp);"},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":52,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":54,"author":{"gitId":"Ringo1225"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":55,"author":{"gitId":"Ringo1225"},"content":"        return new DialogBox(text, img);"},{"lineNumber":56,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":58,"author":{"gitId":"Ringo1225"},"content":"    public static DialogBox getDukeDialog(String text, Image img) {"},{"lineNumber":59,"author":{"gitId":"Ringo1225"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":60,"author":{"gitId":"Ringo1225"},"content":"        db.flip();"},{"lineNumber":61,"author":{"gitId":"Ringo1225"},"content":"        return db;"},{"lineNumber":62,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":64,"author":{"gitId":"Ringo1225"},"content":"//@@author"}],"authorContributionMap":{"Ringo1225":64}},{"path":"src/main/java/main/java/Duke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":" * Represents a robot who can help the user to make todo list."},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":" * A \u003ccode\u003eDuke\u003c/code\u003e object is an instance of such robots."},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"public class Duke {"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"    private Storage storage;"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    private TaskList tasks;"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"    private Ui ui;"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"    public Duke() {"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"        ui \u003d new Ui();"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"        storage \u003d new Storage(\"./command.txt\");"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"            tasks \u003d new TaskList(storage.load());"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"        } catch (DukeException e) {"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"            ui.showLoadingError();"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"            tasks \u003d new TaskList();"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    public String getResponse(String input) {"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"        Parser parser \u003d new Parser(tasks, true);"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"        return parser.handleCommand(input);"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"-"},"content":"}"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":""}],"authorContributionMap":{"Ringo1225":27,"-":1}},{"path":"src/main/java/main/java/DukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":" * Exceptions which are specific to Duke"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"public class DukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"    public DukeException(String ErrorMessage) {"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"        super(ErrorMessage);"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":10}},{"path":"src/main/java/main/java/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":" * A kind of the tasks, which has a specific time period"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"public class Event extends Task {"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"    protected String time;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    public Event(String description, String time) {"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"        this.time \u003d time;"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"    public Event(String description, String time, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"        super(description, isDone);"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"        this.time \u003d time;"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    public String getDescription() {"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"        return \"[E][\" + getStatusIcon()"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"                + \"]\" + description + \"(at:\" + time + \")\";"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"    public void printDescription() {"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(getDescription());"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":29}},{"path":"src/main/java/main/java/FixedDurationTasks.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":" * A kind of the tasks, which has a specific deadline"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"public class FixedDurationTasks extends Task {"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"    protected double hours;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    public FixedDurationTasks(String description, double hours) {"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"        super(description);"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"        this.hours \u003d hours;"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"    public FixedDurationTasks(String description, double hours, boolean isDone) {"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"        super(description, isDone);"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"        this.hours \u003d hours;"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"     * gives a String representing the time needed for the task"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"     * @return a String representing the time needed for the task"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"    String getHours() {"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"        return String.format(\"%.2f\", hours);"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"    public String getDescription() {"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"        return \"[F][\" + getStatusIcon()"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"                + \"]\" + description + \"(needs \" + getHours() + \" hours)\";"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"    public void printDescription() {"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(getDescription());"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":38}},{"path":"src/main/java/main/java/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":12}},{"path":"src/main/java/main/java/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"import javafx.stage.Stage;"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":" * A GUI for Duke using FXML."},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"public class Main extends Application {"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"    private Duke duke \u003d new Duke();"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    //@@author {Ringo1225}-reused"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"    //{reused code from https://se-education.org/guides/tutorials/javaFx.html}"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    public void start(Stage stage) {"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"            stage.setScene(scene);"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"            stage.setTitle(\"Duke\");"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"            stage.setResizable(false);"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"    //@@author"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":36}},{"path":"src/main/java/main/java/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.control.Label;"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"import main.java.DialogBox;"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"import main.java.Duke;"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"//@@author {Ringo1225}-reused"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"//{reused code from https://se-education.org/guides/tutorials/javaFx.html}"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":" * Controller for MainWindow. Provides the layout for the other controls."},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    private VBox dialogContainer;"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"    private TextField userInput;"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"    private Button sendButton;"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"    private Duke duke;"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"    public void initialize() {"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"        Ui ui \u003d new Ui();"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"        String greet \u003d ui.greet();"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"        dialogContainer.getChildren().addAll(DialogBox.getDukeDialog(greet, dukeImage));"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"    public void setDuke(Duke d) {"},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"        duke \u003d d;"},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":"     * the dialog container. Clears the user input after processing."},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":"    @FXML"},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"    private void handleUserInput() {"},{"lineNumber":52,"author":{"gitId":"Ringo1225"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":53,"author":{"gitId":"Ringo1225"},"content":"        String response \u003d duke.getResponse(input);"},{"lineNumber":54,"author":{"gitId":"Ringo1225"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":55,"author":{"gitId":"Ringo1225"},"content":"                DialogBox.getUserDialog(\"ME: \" + input + \"    \", userImage),"},{"lineNumber":56,"author":{"gitId":"Ringo1225"},"content":"                DialogBox.getDukeDialog(response, dukeImage)"},{"lineNumber":57,"author":{"gitId":"Ringo1225"},"content":"        );"},{"lineNumber":58,"author":{"gitId":"Ringo1225"},"content":"        userInput.clear();"},{"lineNumber":59,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":60,"author":{"gitId":"Ringo1225"},"content":"}"},{"lineNumber":61,"author":{"gitId":"Ringo1225"},"content":"//@@author"}],"authorContributionMap":{"Ringo1225":61}},{"path":"src/main/java/main/java/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import java.io.FileWriter;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"import java.io.IOException;"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"import java.time.LocalDate;"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":" * Represents a handler of the commands."},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":" * It parses the command the user types in and handles the instructions given"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"public class Parser {"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"    Scanner sc;"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    TaskList taskList;"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"    boolean flag;"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    public Parser(TaskList taskList, boolean flag) {"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"        this.sc \u003d new Scanner(System.in);"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"        this.taskList \u003d taskList;"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"        this.flag \u003d flag;"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"     * parses anf handles the command the user passes into duke"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"     * @param input"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"     * @return the String to print out"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"    public String handleCommand(String input) {"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"        sc \u003d new Scanner(input);"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"        String command \u003d sc.next();"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"        switch (command) {"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"            case \"bye\":"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"                return handleBye();"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"            case \"list\":"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"                return handleList();"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"            case \"done\":"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"                    return handleDone();"},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"            case \"delete\":"},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":"                    return handleDelete();"},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":52,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":53,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":54,"author":{"gitId":"Ringo1225"},"content":"            case \"todo\":"},{"lineNumber":55,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":56,"author":{"gitId":"Ringo1225"},"content":"                    return handleTodo();"},{"lineNumber":57,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":58,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":59,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":60,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":61,"author":{"gitId":"Ringo1225"},"content":"            case \"deadline\":"},{"lineNumber":62,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":63,"author":{"gitId":"Ringo1225"},"content":"                    return handleDeadline();"},{"lineNumber":64,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":65,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":66,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":67,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":68,"author":{"gitId":"Ringo1225"},"content":"            case \"FDTask\":"},{"lineNumber":69,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":70,"author":{"gitId":"Ringo1225"},"content":"                    return handleFDTask();"},{"lineNumber":71,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":72,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":73,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":74,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":75,"author":{"gitId":"Ringo1225"},"content":"            case \"event\":"},{"lineNumber":76,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":77,"author":{"gitId":"Ringo1225"},"content":"                    return handleEvent();"},{"lineNumber":78,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":79,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":80,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":81,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":82,"author":{"gitId":"Ringo1225"},"content":"            case \"find\":"},{"lineNumber":83,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":84,"author":{"gitId":"Ringo1225"},"content":"                    return handleFind();"},{"lineNumber":85,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":86,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":87,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":88,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":89,"author":{"gitId":"Ringo1225"},"content":"            default:"},{"lineNumber":90,"author":{"gitId":"Ringo1225"},"content":"                try {"},{"lineNumber":91,"author":{"gitId":"Ringo1225"},"content":"                    return handleDefault();"},{"lineNumber":92,"author":{"gitId":"Ringo1225"},"content":"                } catch (DukeException e) {"},{"lineNumber":93,"author":{"gitId":"Ringo1225"},"content":"                    return \"     \" + e.getMessage();"},{"lineNumber":94,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":95,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":96,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":97,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":98,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":99,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"bye\""},{"lineNumber":100,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":101,"author":{"gitId":"Ringo1225"},"content":"    public String handleBye() {"},{"lineNumber":102,"author":{"gitId":"Ringo1225"},"content":"        flag \u003d false;"},{"lineNumber":103,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":104,"author":{"gitId":"Ringo1225"},"content":"            this.updateFile();"},{"lineNumber":105,"author":{"gitId":"Ringo1225"},"content":"        } catch (IOException e) {"},{"lineNumber":106,"author":{"gitId":"Ringo1225"},"content":"            System.out.println(e);"},{"lineNumber":107,"author":{"gitId":"Ringo1225"},"content":"            System.out.println(\"IOException from FileWriter!!\");"},{"lineNumber":108,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":109,"author":{"gitId":"Ringo1225"},"content":"        return \"     Bye. Hope to see you again soon!\";"},{"lineNumber":110,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":111,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":112,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":113,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"list\""},{"lineNumber":114,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":115,"author":{"gitId":"Ringo1225"},"content":"    public String handleList() {"},{"lineNumber":116,"author":{"gitId":"Ringo1225"},"content":"        String listOutput \u003d \"\";"},{"lineNumber":117,"author":{"gitId":"Ringo1225"},"content":"        listOutput +\u003d \"     Here are the tasks in your list:\\n\";"},{"lineNumber":118,"author":{"gitId":"Ringo1225"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":119,"author":{"gitId":"Ringo1225"},"content":"            listOutput +\u003d \"     \" + (i + 1) + \".\" + taskList.get(i).getDescription() + \"\\n\";"},{"lineNumber":120,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":121,"author":{"gitId":"Ringo1225"},"content":"        return listOutput;"},{"lineNumber":122,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":123,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":124,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":125,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"done\""},{"lineNumber":126,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":127,"author":{"gitId":"Ringo1225"},"content":"    public String handleDone() throws DukeException {"},{"lineNumber":128,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":129,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I need to know the index of the task to be done!\");"},{"lineNumber":130,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":131,"author":{"gitId":"Ringo1225"},"content":"        assert sc.hasNextLine();"},{"lineNumber":132,"author":{"gitId":"Ringo1225"},"content":"        String doneCommand \u003d sc.nextLine();"},{"lineNumber":133,"author":{"gitId":"Ringo1225"},"content":"        int index \u003d 0;"},{"lineNumber":134,"author":{"gitId":"Ringo1225"},"content":"        if (doneCommand.isEmpty()) {"},{"lineNumber":135,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I need to know the index of the task to be done!\");"},{"lineNumber":136,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":137,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":138,"author":{"gitId":"Ringo1225"},"content":"            index \u003d Integer.parseInt(doneCommand.stripLeading());"},{"lineNumber":139,"author":{"gitId":"Ringo1225"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":140,"author":{"gitId":"Ringo1225"},"content":"            return \"     \\u2639 Please enter a valid integer!!\";"},{"lineNumber":141,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":142,"author":{"gitId":"Ringo1225"},"content":"        if (index \u003e taskList.size()) {"},{"lineNumber":143,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 Your number is too large!!\");"},{"lineNumber":144,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":145,"author":{"gitId":"Ringo1225"},"content":"        Task currentTask \u003d taskList.get(index - 1);"},{"lineNumber":146,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":147,"author":{"gitId":"Ringo1225"},"content":"        String doneOutput \u003d \"\";"},{"lineNumber":148,"author":{"gitId":"Ringo1225"},"content":"        currentTask.markAsDone();"},{"lineNumber":149,"author":{"gitId":"Ringo1225"},"content":"        doneOutput +\u003d \"     Nice! I\u0027ve marked this task as done:\\n     \";"},{"lineNumber":150,"author":{"gitId":"Ringo1225"},"content":"        doneOutput +\u003d currentTask.getDescription();"},{"lineNumber":151,"author":{"gitId":"Ringo1225"},"content":"        return doneOutput;"},{"lineNumber":152,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":153,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":154,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":155,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"delete\""},{"lineNumber":156,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":157,"author":{"gitId":"Ringo1225"},"content":"    public String handleDelete() throws DukeException {"},{"lineNumber":158,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":159,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I need to know the index of the task to be deleted!\");"},{"lineNumber":160,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":161,"author":{"gitId":"Ringo1225"},"content":"        assert sc.hasNextLine();"},{"lineNumber":162,"author":{"gitId":"Ringo1225"},"content":"        String deleteCommand \u003d sc.nextLine();"},{"lineNumber":163,"author":{"gitId":"Ringo1225"},"content":"        int index \u003d 0;"},{"lineNumber":164,"author":{"gitId":"Ringo1225"},"content":"        if (deleteCommand.isEmpty()) {"},{"lineNumber":165,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I need to know the index of the task to be deleted!\");"},{"lineNumber":166,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":167,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":168,"author":{"gitId":"Ringo1225"},"content":"            index \u003d Integer.parseInt(deleteCommand.stripLeading());"},{"lineNumber":169,"author":{"gitId":"Ringo1225"},"content":"        } catch (NumberFormatException e) {"},{"lineNumber":170,"author":{"gitId":"Ringo1225"},"content":"            return \"     \\u2639 Please enter a valid integer!!\";"},{"lineNumber":171,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":172,"author":{"gitId":"Ringo1225"},"content":"        if (index \u003e taskList.size()) {"},{"lineNumber":173,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 Your number is too large!!\");"},{"lineNumber":174,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":175,"author":{"gitId":"Ringo1225"},"content":"        assert index \u003c\u003d taskList.size();"},{"lineNumber":176,"author":{"gitId":"Ringo1225"},"content":"        Task currentTask \u003d taskList.get(index - 1);"},{"lineNumber":177,"author":{"gitId":"Ringo1225"},"content":"        taskList.remove(index - 1);"},{"lineNumber":178,"author":{"gitId":"Ringo1225"},"content":"        String deleteOutput \u003d \"\";"},{"lineNumber":179,"author":{"gitId":"Ringo1225"},"content":"        deleteOutput +\u003d \"     Noted! I\u0027ve removed this task:\\n     \";"},{"lineNumber":180,"author":{"gitId":"Ringo1225"},"content":"        deleteOutput +\u003d currentTask.getDescription();"},{"lineNumber":181,"author":{"gitId":"Ringo1225"},"content":"        deleteOutput +\u003d \"\\n     Now you have \" + taskList.size() + \" tasks in the list.\";"},{"lineNumber":182,"author":{"gitId":"Ringo1225"},"content":"        return deleteOutput;"},{"lineNumber":183,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":184,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":185,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":186,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"find\""},{"lineNumber":187,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":188,"author":{"gitId":"Ringo1225"},"content":"    public String handleFind() throws DukeException {"},{"lineNumber":189,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":190,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I need to know the keyword!!\");"},{"lineNumber":191,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":192,"author":{"gitId":"Ringo1225"},"content":"        assert sc.hasNextLine();"},{"lineNumber":193,"author":{"gitId":"Ringo1225"},"content":"        String input \u003d sc.nextLine();"},{"lineNumber":194,"author":{"gitId":"Ringo1225"},"content":"        if (input.isEmpty()) {"},{"lineNumber":195,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! I need to know the keyword!!\");"},{"lineNumber":196,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":197,"author":{"gitId":"Ringo1225"},"content":"        String keyword \u003d input.replaceFirst(\" \", \"\");"},{"lineNumber":198,"author":{"gitId":"Ringo1225"},"content":"        String output \u003d \"\";"},{"lineNumber":199,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"     Here are the matching tasks in your list:\\n\";"},{"lineNumber":200,"author":{"gitId":"Ringo1225"},"content":"        for (int i \u003d 0, count \u003d 1; i \u003c taskList.size(); i++) {"},{"lineNumber":201,"author":{"gitId":"Ringo1225"},"content":"            if (taskList.get(i).description.contains(keyword)) {"},{"lineNumber":202,"author":{"gitId":"Ringo1225"},"content":"                output +\u003d \"     \" + count + \".\" + taskList.get(i).getDescription() + \"\\n\";"},{"lineNumber":203,"author":{"gitId":"Ringo1225"},"content":"                count++;"},{"lineNumber":204,"author":{"gitId":"Ringo1225"},"content":"            }"},{"lineNumber":205,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":206,"author":{"gitId":"Ringo1225"},"content":"        return output;"},{"lineNumber":207,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":208,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":209,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":210,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"todo\""},{"lineNumber":211,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":212,"author":{"gitId":"Ringo1225"},"content":"    public String handleTodo() throws DukeException {"},{"lineNumber":213,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":214,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":215,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":216,"author":{"gitId":"Ringo1225"},"content":"        assert sc.hasNextLine();"},{"lineNumber":217,"author":{"gitId":"Ringo1225"},"content":"        String todoDescription \u003d sc.nextLine();"},{"lineNumber":218,"author":{"gitId":"Ringo1225"},"content":"        if (todoDescription.isEmpty()) {"},{"lineNumber":219,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"},{"lineNumber":220,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":221,"author":{"gitId":"Ringo1225"},"content":"        Todo todo \u003d new Todo(todoDescription);"},{"lineNumber":222,"author":{"gitId":"Ringo1225"},"content":"        taskList.add(todo);"},{"lineNumber":223,"author":{"gitId":"Ringo1225"},"content":"        String output \u003d \"\";"},{"lineNumber":224,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"Got it. I\u0027ve added this task:       \\n\" + todo.getDescription();"},{"lineNumber":225,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"},{"lineNumber":226,"author":{"gitId":"Ringo1225"},"content":"        return output;"},{"lineNumber":227,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":228,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":229,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":230,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"deadline\""},{"lineNumber":231,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":232,"author":{"gitId":"Ringo1225"},"content":"    public String handleDeadline() throws DukeException {"},{"lineNumber":233,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":234,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":235,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":236,"author":{"gitId":"Ringo1225"},"content":"        assert sc.hasNextLine();"},{"lineNumber":237,"author":{"gitId":"Ringo1225"},"content":"        String deadlineCommand \u003d sc.nextLine();"},{"lineNumber":238,"author":{"gitId":"Ringo1225"},"content":"        if (deadlineCommand.isEmpty()) {"},{"lineNumber":239,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"},{"lineNumber":240,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":241,"author":{"gitId":"Ringo1225"},"content":"        if (!deadlineCommand.contains(\"/by\")) {"},{"lineNumber":242,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The timing of a deadline cannot be empty.\");"},{"lineNumber":243,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":244,"author":{"gitId":"Ringo1225"},"content":"        String[] strings \u003d deadlineCommand.split(\"/by\");"},{"lineNumber":245,"author":{"gitId":"Ringo1225"},"content":"        String deadlineDescription \u003d strings[0];"},{"lineNumber":246,"author":{"gitId":"Ringo1225"},"content":"        String time \u003d strings[1];"},{"lineNumber":247,"author":{"gitId":"Ringo1225"},"content":"        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\" yyyy-MM-dd\");"},{"lineNumber":248,"author":{"gitId":"Ringo1225"},"content":"        LocalDate date \u003d LocalDate.parse(time, formatter);"},{"lineNumber":249,"author":{"gitId":"Ringo1225"},"content":"        Deadline deadline \u003d new Deadline(deadlineDescription, date);"},{"lineNumber":250,"author":{"gitId":"Ringo1225"},"content":"        taskList.add(deadline);"},{"lineNumber":251,"author":{"gitId":"Ringo1225"},"content":"        String output \u003d \"\";"},{"lineNumber":252,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"Got it. I\u0027ve added this task:        \\n\" + deadline.getDescription();"},{"lineNumber":253,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"},{"lineNumber":254,"author":{"gitId":"Ringo1225"},"content":"        return output;"},{"lineNumber":255,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":256,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":257,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":258,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"FDTask\""},{"lineNumber":259,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":260,"author":{"gitId":"Ringo1225"},"content":"    public String handleFDTask() throws DukeException{"},{"lineNumber":261,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":262,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a FDTask cannot be empty.\");"},{"lineNumber":263,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":264,"author":{"gitId":"Ringo1225"},"content":"        String FDCommand \u003d sc.nextLine();"},{"lineNumber":265,"author":{"gitId":"Ringo1225"},"content":"        if (FDCommand.isEmpty()) {"},{"lineNumber":266,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a FDTask cannot be empty.\");"},{"lineNumber":267,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":268,"author":{"gitId":"Ringo1225"},"content":"        if (!FDCommand.contains(\"/for\")) {"},{"lineNumber":269,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The duration of a FDTask cannot be empty.\");"},{"lineNumber":270,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":271,"author":{"gitId":"Ringo1225"},"content":"        String[] strings \u003d FDCommand.split(\"/for\");"},{"lineNumber":272,"author":{"gitId":"Ringo1225"},"content":"        String FDDescription \u003d strings[0];"},{"lineNumber":273,"author":{"gitId":"Ringo1225"},"content":"        String period \u003d strings[1];"},{"lineNumber":274,"author":{"gitId":"Ringo1225"},"content":"        double hours \u003d Double.valueOf(period);"},{"lineNumber":275,"author":{"gitId":"Ringo1225"},"content":"        FixedDurationTasks fixedDurationTasks \u003d new FixedDurationTasks(FDDescription, hours);"},{"lineNumber":276,"author":{"gitId":"Ringo1225"},"content":"        taskList.add(fixedDurationTasks);"},{"lineNumber":277,"author":{"gitId":"Ringo1225"},"content":"        String output \u003d \"\";"},{"lineNumber":278,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"Got it. I\u0027ve added this task:        \\n\" + fixedDurationTasks.getDescription();"},{"lineNumber":279,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"\\nNow you have \" + taskList.size() + \" tasks in the list.\";"},{"lineNumber":280,"author":{"gitId":"Ringo1225"},"content":"        return output;"},{"lineNumber":281,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":282,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":283,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":284,"author":{"gitId":"Ringo1225"},"content":"     * handles instruction \"event\""},{"lineNumber":285,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":286,"author":{"gitId":"Ringo1225"},"content":"    public String handleEvent() throws DukeException{"},{"lineNumber":287,"author":{"gitId":"Ringo1225"},"content":"        if (!sc.hasNextLine()) {"},{"lineNumber":288,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of a event cannot be empty.\");"},{"lineNumber":289,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":290,"author":{"gitId":"Ringo1225"},"content":"        assert sc.hasNextLine();"},{"lineNumber":291,"author":{"gitId":"Ringo1225"},"content":"        String eventCommand \u003d sc.nextLine();"},{"lineNumber":292,"author":{"gitId":"Ringo1225"},"content":"        if (eventCommand.isEmpty()) {"},{"lineNumber":293,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"},{"lineNumber":294,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":295,"author":{"gitId":"Ringo1225"},"content":"        if (!eventCommand.contains(\"/at\")) {"},{"lineNumber":296,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"\\u2639 OOPS!!! The timing of an event cannot be empty.\");"},{"lineNumber":297,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":298,"author":{"gitId":"Ringo1225"},"content":"        String[] strings \u003d eventCommand.split(\"/at\");"},{"lineNumber":299,"author":{"gitId":"Ringo1225"},"content":"        String eventDescription \u003d strings[0];"},{"lineNumber":300,"author":{"gitId":"Ringo1225"},"content":"        String date \u003d strings[1];"},{"lineNumber":301,"author":{"gitId":"Ringo1225"},"content":"        Event event \u003d new Event(eventDescription, date);"},{"lineNumber":302,"author":{"gitId":"Ringo1225"},"content":"        taskList.add(event);"},{"lineNumber":303,"author":{"gitId":"Ringo1225"},"content":"        String output \u003d \"\";"},{"lineNumber":304,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d \"Got it. I\u0027ve added this task:        \\n\";"},{"lineNumber":305,"author":{"gitId":"Ringo1225"},"content":"        output +\u003d event.getDescription() + \"Now you have \" + taskList.size() + \" tasks in the list.\";"},{"lineNumber":306,"author":{"gitId":"Ringo1225"},"content":"        return output;"},{"lineNumber":307,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":308,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":309,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":310,"author":{"gitId":"Ringo1225"},"content":"     * throws exceptions when the command is wrongly typed"},{"lineNumber":311,"author":{"gitId":"Ringo1225"},"content":"     * @throws DukeException"},{"lineNumber":312,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":313,"author":{"gitId":"Ringo1225"},"content":"    public String handleDefault() throws DukeException {"},{"lineNumber":314,"author":{"gitId":"Ringo1225"},"content":"        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"},{"lineNumber":315,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":316,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":317,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":318,"author":{"gitId":"Ringo1225"},"content":"     * updates the task list in the local hard disk"},{"lineNumber":319,"author":{"gitId":"Ringo1225"},"content":"     * @throws IOException"},{"lineNumber":320,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":321,"author":{"gitId":"Ringo1225"},"content":"    public void updateFile() throws IOException {"},{"lineNumber":322,"author":{"gitId":"Ringo1225"},"content":"        FileWriter fw \u003d new FileWriter(\"./command.txt\");"},{"lineNumber":323,"author":{"gitId":"Ringo1225"},"content":"        FileWriter fwAppend \u003d new FileWriter(\"./command.txt\", true);"},{"lineNumber":324,"author":{"gitId":"Ringo1225"},"content":"        for (int i \u003d 0; i \u003c taskList.size(); i++) {"},{"lineNumber":325,"author":{"gitId":"Ringo1225"},"content":"            Task task \u003d taskList.get(i);"},{"lineNumber":326,"author":{"gitId":"Ringo1225"},"content":"            String line;"},{"lineNumber":327,"author":{"gitId":"Ringo1225"},"content":"            if(task instanceof Todo) {"},{"lineNumber":328,"author":{"gitId":"Ringo1225"},"content":"                int done \u003d task.isDone? 1:0;"},{"lineNumber":329,"author":{"gitId":"Ringo1225"},"content":"                line \u003d \"T|\" + done + \"|\" + task.description;"},{"lineNumber":330,"author":{"gitId":"Ringo1225"},"content":"            } else if(task instanceof Deadline) {"},{"lineNumber":331,"author":{"gitId":"Ringo1225"},"content":"                int done \u003d task.isDone? 1:0;"},{"lineNumber":332,"author":{"gitId":"Ringo1225"},"content":"                line \u003d \"D|\" + done + \"|\" + task.description + \"|\" +"},{"lineNumber":333,"author":{"gitId":"Ringo1225"},"content":"                        ((Deadline) task).deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"},{"lineNumber":334,"author":{"gitId":"Ringo1225"},"content":"            } else if(task instanceof FixedDurationTasks) {"},{"lineNumber":335,"author":{"gitId":"Ringo1225"},"content":"                int done \u003d task.isDone? 1:0;"},{"lineNumber":336,"author":{"gitId":"Ringo1225"},"content":"                line \u003d \"F|\" + done + \"|\" + task.description + \"|\" + ((FixedDurationTasks) task).getHours();"},{"lineNumber":337,"author":{"gitId":"Ringo1225"},"content":"            } else {"},{"lineNumber":338,"author":{"gitId":"Ringo1225"},"content":"                int done \u003d task.isDone? 1:0;"},{"lineNumber":339,"author":{"gitId":"Ringo1225"},"content":"                line \u003d \"T|\" + done + \"|\" + task.description + \"|\" + ((Event) task).time;"},{"lineNumber":340,"author":{"gitId":"Ringo1225"},"content":"            }"},{"lineNumber":341,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":342,"author":{"gitId":"Ringo1225"},"content":"            if (i \u003d\u003d 0) {"},{"lineNumber":343,"author":{"gitId":"Ringo1225"},"content":"                fw.write(line + \u0027\\n\u0027);"},{"lineNumber":344,"author":{"gitId":"Ringo1225"},"content":"            } else if (i \u003c taskList.size() - 1) {"},{"lineNumber":345,"author":{"gitId":"Ringo1225"},"content":"                fwAppend.write(line + \u0027\\n\u0027);"},{"lineNumber":346,"author":{"gitId":"Ringo1225"},"content":"            } else {"},{"lineNumber":347,"author":{"gitId":"Ringo1225"},"content":"                fwAppend.write(line);"},{"lineNumber":348,"author":{"gitId":"Ringo1225"},"content":"            }"},{"lineNumber":349,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":350,"author":{"gitId":"Ringo1225"},"content":"        fw.close();"},{"lineNumber":351,"author":{"gitId":"Ringo1225"},"content":"        fwAppend.close();"},{"lineNumber":352,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":353,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":354,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":354}},{"path":"src/main/java/main/java/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"import java.io.File;"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"import java.util.Scanner;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"import java.io.FileNotFoundException;"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":" * Represents the local storage of the task list"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"public class Storage {"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    ArrayList\u003cTask\u003e taskArrayList;"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"    String filePath;"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    public Storage(String filePath) {"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"        this.taskArrayList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"        this.filePath \u003d filePath;"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"     * fills the arraylist with the tasks in the hard disk"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"     * @throws IOException"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"    public void fill() throws IOException {"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"        File f \u003d new File(filePath);"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"        Scanner sc;"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"            sc \u003d new Scanner(f);"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"        } catch (FileNotFoundException e) {"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"            f.createNewFile();"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"            sc \u003d new Scanner(f);"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"        while (sc.hasNext()) {"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"            String next \u003d sc.nextLine();"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"            String[] token \u003d next.split(\"\\\\|\");"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"            String first \u003d token[0];"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"            boolean isDone \u003d (Integer.parseInt(token[1])) \u003d\u003d 1? true: false;"},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"            switch(first) {"},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"                case \"T\": {"},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"                    String description \u003d token[2];"},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":"                    taskArrayList.add(new Todo(description, isDone));"},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"                    break;"},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":"                case \"D\": {"},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":"                    String description \u003d token[2];"},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"                    String time \u003d token[3];"},{"lineNumber":52,"author":{"gitId":"Ringo1225"},"content":"                    LocalDate date \u003d LocalDate.parse(time);"},{"lineNumber":53,"author":{"gitId":"Ringo1225"},"content":"                    taskArrayList.add(new Deadline(description, date, isDone));"},{"lineNumber":54,"author":{"gitId":"Ringo1225"},"content":"                    break;"},{"lineNumber":55,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"Ringo1225"},"content":"                case \"E\": {"},{"lineNumber":57,"author":{"gitId":"Ringo1225"},"content":"                    String description \u003d token[2];"},{"lineNumber":58,"author":{"gitId":"Ringo1225"},"content":"                    String time \u003d token[3];"},{"lineNumber":59,"author":{"gitId":"Ringo1225"},"content":"                    taskArrayList.add(new Event(description, time, isDone));"},{"lineNumber":60,"author":{"gitId":"Ringo1225"},"content":"                    break;"},{"lineNumber":61,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":62,"author":{"gitId":"Ringo1225"},"content":"                case \"F\": {"},{"lineNumber":63,"author":{"gitId":"Ringo1225"},"content":"                    String description \u003d token[2];"},{"lineNumber":64,"author":{"gitId":"Ringo1225"},"content":"                    String period \u003d token[3];"},{"lineNumber":65,"author":{"gitId":"Ringo1225"},"content":"                    double hours \u003d Double.valueOf(period);"},{"lineNumber":66,"author":{"gitId":"Ringo1225"},"content":"                    taskArrayList.add(new FixedDurationTasks(description, hours, isDone));"},{"lineNumber":67,"author":{"gitId":"Ringo1225"},"content":"                    break;"},{"lineNumber":68,"author":{"gitId":"Ringo1225"},"content":"                }"},{"lineNumber":69,"author":{"gitId":"Ringo1225"},"content":"            }"},{"lineNumber":70,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":71,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":72,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":73,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":74,"author":{"gitId":"Ringo1225"},"content":"     * loads the task list from local hard disk"},{"lineNumber":75,"author":{"gitId":"Ringo1225"},"content":"     * @return the arraylist that contains the tasks loaded from the local hard disk"},{"lineNumber":76,"author":{"gitId":"Ringo1225"},"content":"     * @throws DukeException"},{"lineNumber":77,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":78,"author":{"gitId":"Ringo1225"},"content":"    public ArrayList\u003cTask\u003e load() throws DukeException {"},{"lineNumber":79,"author":{"gitId":"Ringo1225"},"content":"        try{"},{"lineNumber":80,"author":{"gitId":"Ringo1225"},"content":"            fill();"},{"lineNumber":81,"author":{"gitId":"Ringo1225"},"content":"        } catch (IOException e) {"},{"lineNumber":82,"author":{"gitId":"Ringo1225"},"content":"            throw new DukeException(\"Cannot find the file!!\");"},{"lineNumber":83,"author":{"gitId":"Ringo1225"},"content":"        }"},{"lineNumber":84,"author":{"gitId":"Ringo1225"},"content":"        return taskArrayList;"},{"lineNumber":85,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":86,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":86}},{"path":"src/main/java/main/java/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":" * Tasks that Duke can do for the users"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"public class Task {"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"    protected String description;"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"    protected boolean isDone;"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"    public Task(String description) {"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"        this.description \u003d description;"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"        this.isDone \u003d false;"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    public Task(String description, boolean isDone) {"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"        this.description \u003d description;"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"        this.isDone \u003d isDone;"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"     * Visualizes the isDone() to a String"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"     * @return the icon that represents whether the task is done"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"    public String getStatusIcon() {"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\");"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"     * marks the task as done"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"    public void markAsDone() {"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"        this.isDone \u003d true;"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"     * prints the task in a easy-read manner"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"    public void printDescription() {"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"[\" + getStatusIcon() + \"] \" + description);"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"    public String getDescription() {"},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"        return \"[\" + getStatusIcon() + \"] \" + description;"},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":45}},{"path":"src/main/java/main/java/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":" * Represents a container that holds the tasks"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"public class TaskList {"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    ArrayList\u003cTask\u003e tasks;"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"    TaskList() {"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    public TaskList(ArrayList\u003cTask\u003e tasks) {"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"     * gives the size of the arraylist"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"     * @return the size of the task list"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    public int size() {"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"        return tasks.size();"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":"     * returns a task corresponding to the index given"},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"     * @param i index of the wanted task"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"     * @return the task corresponding to the index i"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":"    public Task get(int i) {"},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"        return tasks.get(i);"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"     * adds a new task to the task list"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"     * @param task a new task to be added to the task list"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":"    protected void add(Task task) {"},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"        tasks.add(task);"},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"     * Deletes a task from the task list"},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":"     * @param i index of the task to be removed"},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":48,"author":{"gitId":"Ringo1225"},"content":"    protected void remove(int i) {"},{"lineNumber":49,"author":{"gitId":"Ringo1225"},"content":"        tasks.remove(i);"},{"lineNumber":50,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":51}},{"path":"src/main/java/main/java/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":" * A kind of the tasks, which contains simply a description"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"    public Todo(String description) {"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"        super(description);"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"    public Todo(String description, boolean isDone) {"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"        super(description, isDone);"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"    public void printDescription() {"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"[T][\" + getStatusIcon() + \"]\" + description);"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"    public String getDescription() {"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"        return \"[T][\" + getStatusIcon() + \"]\" + description;"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":24}},{"path":"src/main/java/main/java/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"package main.java;"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"//@@author {Ringo1225}-reused"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"//{reused code from nus-cs2103-AY2021S1/ip"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"// url: https://github.com/nus-cs2103-AY2021S1/ip}"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":" * The User Interface of the robot"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":" * It prints the greeting message and remind user to input"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":" */"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"public class Ui {"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"    String logo \u003d \" ____        _        \\n\""},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"            + \"|  _ \\\\ _   _| | _____\\n\""},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"            + \"| | | | | | | |/ / _ \\\\\\n\""},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"            + \"| |_| | |_| |   \u003c  __/\\n\""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"//@@author"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":"     * prints out the logo and greeting message"},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":"    public void start() {"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"Hello from\\n\" + logo);"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"    ____________________________________________________________\");"},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"    ____________________________________________________________\\n\");"},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"    public String greet() {"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":"        return \"Hello from\\n\" + logo + \"     Hello! I\u0027m Duke\\n     What can I do for you?\";"},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"    /**"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":"     * prints out the loading error message"},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":"    protected void showLoadingError() {"},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"        System.out.println(\"Oops!! There is a Loading error!!\");"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":"    }"},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"}"}],"authorContributionMap":{"Ringo1225":39}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"    \u003cchildren\u003e"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"    \u003c/children\u003e"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"    \u003cpadding\u003e"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"    \u003c/padding\u003e"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"Ringo1225":16}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"705.0\" prefWidth\u003d\"494.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"main.java.MainWindow\"\u003e"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"412.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"413.0\" layoutY\u003d\"663.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"81.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" layoutX\u003d\"1.0\" layoutY\u003d\"2.0\" prefHeight\u003d\"659.0\" prefWidth\u003d\"488.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":"            \u003ccontent\u003e"},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"657.0\" prefWidth\u003d\"480.0\" /\u003e"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":"            \u003c/content\u003e"},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":"    \u003c/children\u003e"},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"Ringo1225":19}},{"path":"text-ui-test/input.txt","fileType":"txt","lines":[{"lineNumber":1,"author":{"gitId":"Ringo1225"},"content":"todo read book"},{"lineNumber":2,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":3,"author":{"gitId":"Ringo1225"},"content":"deadline return book /by 2020-10-10"},{"lineNumber":4,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":5,"author":{"gitId":"Ringo1225"},"content":"event project meeting /at Aug 6th 2-4pm"},{"lineNumber":6,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":7,"author":{"gitId":"Ringo1225"},"content":"done 1"},{"lineNumber":8,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":9,"author":{"gitId":"Ringo1225"},"content":"list"},{"lineNumber":10,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":11,"author":{"gitId":"Ringo1225"},"content":"done 3"},{"lineNumber":12,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":13,"author":{"gitId":"Ringo1225"},"content":"list"},{"lineNumber":14,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":15,"author":{"gitId":"Ringo1225"},"content":"todo buy bread"},{"lineNumber":16,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":17,"author":{"gitId":"Ringo1225"},"content":"list"},{"lineNumber":18,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":19,"author":{"gitId":"Ringo1225"},"content":"todo"},{"lineNumber":20,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":21,"author":{"gitId":"Ringo1225"},"content":"blah"},{"lineNumber":22,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"deadline"},{"lineNumber":24,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":25,"author":{"gitId":"Ringo1225"},"content":"deadline take a nap"},{"lineNumber":26,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":27,"author":{"gitId":"Ringo1225"},"content":"event"},{"lineNumber":28,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":29,"author":{"gitId":"Ringo1225"},"content":"event have dinner"},{"lineNumber":30,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":31,"author":{"gitId":"Ringo1225"},"content":"delete 3"},{"lineNumber":32,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":33,"author":{"gitId":"Ringo1225"},"content":"list"},{"lineNumber":34,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":35,"author":{"gitId":"Ringo1225"},"content":"done"},{"lineNumber":36,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":37,"author":{"gitId":"Ringo1225"},"content":"done 5"},{"lineNumber":38,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":39,"author":{"gitId":"Ringo1225"},"content":"done this"},{"lineNumber":40,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":41,"author":{"gitId":"Ringo1225"},"content":"delete"},{"lineNumber":42,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":43,"author":{"gitId":"Ringo1225"},"content":"delete 6"},{"lineNumber":44,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":45,"author":{"gitId":"Ringo1225"},"content":"delete this"},{"lineNumber":46,"author":{"gitId":"Ringo1225"},"content":""},{"lineNumber":47,"author":{"gitId":"Ringo1225"},"content":"bye"}],"authorContributionMap":{"Ringo1225":47}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"-"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"Ringo1225"},"content":"java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# convert to UNIX format"},{"lineNumber":26,"author":{"gitId":"-"},"content":"cp EXPECTED.TXT EXPECTED-UNIX.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":28,"author":{"gitId":"-"},"content":""},{"lineNumber":29,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":30,"author":{"gitId":"-"},"content":"diff ACTUAL.TXT EXPECTED-UNIX.TXT"},{"lineNumber":31,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":32,"author":{"gitId":"-"},"content":"then"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":34,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":35,"author":{"gitId":"-"},"content":"else"},{"lineNumber":36,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":37,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":38,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"Ringo1225":1,"-":37}}]
