[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private String due;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public Deadline(String description, String due) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.due \u003d due;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + due + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private static final String DIVIDER \u003d \"________________________________________________________\\n\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    enum Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        EXIT(\"bye\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        LIST(\"list\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        DONE(\"done\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        TODO(\"todo\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        EVENT(\"event\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        DELETE(\"delete\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        private final String keyword;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        Command(String keyword) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        public static Command findCommand(String keyword) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            for (Command c : values()) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                if (keyword.equals(c.keyword)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    return c;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            throw new DukeException(\"Wakarimasen~\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    // TODO: Consider moving prependIndent to utils class/package for usage in other classes."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private static String prependIndent(String content, int indent) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String spaces \u003d \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        for (int i \u003d 0; i \u003c indent; i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            spaces +\u003d \" \";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String[] contentArray \u003d content.split(\"\\n\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        for (int i \u003d 0; i \u003c contentArray.length; i++) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            result +\u003d spaces + contentArray[i] + \"\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private static void formattedPrint(String content) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.print(prependIndent(DIVIDER, 4));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.print(prependIndent(content, 4));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.println(prependIndent(DIVIDER, 4));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private static void greet() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String welcomeMessage \u003d \"Konnichiwa!\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                + \"What can I do for you?\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.printf(prependIndent(DIVIDER, 4));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.printf(prependIndent(welcomeMessage, 5));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.println(prependIndent(DIVIDER, 4));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private static void exit() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String exitMessage \u003d \"Ja ne!\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.printf(prependIndent(DIVIDER, 4));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.printf(prependIndent(exitMessage, 5));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        System.out.println(prependIndent(DIVIDER, 4));"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private static void chat() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        Store storage \u003d new Store();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String rawInput \u003d \"\";"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        Boolean exit \u003d false;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        while (!exit) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            rawInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                String[] inputs \u003d rawInput.split(\" \", 2);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                // By spec, inputs is guaranteed to have at least one element."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                String commandString \u003d inputs[0];"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                Command command \u003d Command.findCommand(commandString);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case EXIT:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    exit \u003d true;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    formattedPrint(prependIndent(storage.listItems(), 1));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        int index \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        formattedPrint(prependIndent(storage.markAsDone(index), 1));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        throw new DukeException(\"This isn\u0027t harry potter, please use only integers.\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        String deadlineDescription \u003d inputs[1].split(\"/\")[0].trim();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            String due \u003d inputs[1].split(\"/by\", 2)[1].trim();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            Deadline newDeadline \u003d new Deadline(deadlineDescription, due);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            formattedPrint(prependIndent(storage.add(newDeadline), 1));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            throw new DukeException(\"So you never did plan on doing it huh...\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        throw new DukeException(\"What are you rushing for? To wait?\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        ToDo newToDo \u003d new ToDo(inputs[1]);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        formattedPrint(prependIndent(storage.add(newToDo), 1));"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        throw new DukeException(\"I know your life is empty but your todo can\u0027t be empty.\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        String eventDescription \u003d inputs[1].split(\"/\")[0].trim();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            String time \u003d inputs[1].split(\"/at\", 2)[1].trim();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            Event newEvent \u003d new Event(eventDescription, time);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            formattedPrint(prependIndent(storage.add(newEvent), 1));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                            throw new DukeException(\"Wow that sure is one long event...\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        throw new DukeException(\"Are you going to attend a nameless event?\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        int index \u003d Integer.parseInt(rawInput.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        formattedPrint(prependIndent(storage.deleteTask(index), 1));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                        throw new DukeException(\"This isn\u0027t harry potter, please use only integers.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                formattedPrint(prependIndent(e.getMessage(), 1));"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        chat();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        exit();"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 146,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "public class DukeException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        super(String.format(\"Gomen nasai~ %s\\n\", message));"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return \"[E]\" +  super.toString() + \" (at: \" + time + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 14
    }
  },
  {
    "path": "src/main/java/Store.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "public class Store {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private List\u003cTask\u003e store;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    Store() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String add(Task item) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.store.add(item);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return String.format(\"Got it. I\u0027ve added this task:\\n  %s\\nNow you have %d tasks in your list.\\n\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                item.toString(),"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                this.store.size());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String markAsDone(int index) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            Task selected \u003d store.get(index);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            selected.setCompleted();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            return String.format(\"Nice! I\u0027ve marked this task as done:\\n  %s\\n\", selected.toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t find that task. Are you trying to make 2020 worse?\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            Task removed \u003d store.remove(index);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            return String.format(\"Noted. I\u0027ve removed this task:\\n  %s\\nNow you have %d tasks in your list.\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    removed.toString(),"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "                    this.store.size());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            throw new DukeException(\"I couldn\u0027t find that task. Are you trying to make 2020 worse?\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String listItems() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        String list \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        for (int i \u003d 0; i \u003c this.store.size(); i++) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "            list +\u003d String.format(\"%d.%s\\n\", i + 1, this.store.get(i).toString());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 47
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private boolean completed;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.completed \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public void setCompleted() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        this.completed \u003d true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return this.completed ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 23
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "deadline return book /by Aug 22nd"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "event celebrate birthday /at Aug 22nd 1000-2200hrs"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "done -3"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "done 10"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "todo"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "event missing time"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "deadline missing duedate"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "delete 1.5"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 22
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "dextertanyj"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "dextertanyj": 1,
      "-": 37
    }
  }
]
