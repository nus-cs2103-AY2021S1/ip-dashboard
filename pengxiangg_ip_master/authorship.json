[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Deadline (String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public static void readAndEcho(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        //Formatting of greeting"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String intro1 \u003d \"Hello! I\u0027m Duke \\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String intro2 \u003d \"What can I do for you? \\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String greeting \u003d addDividers(formatString(intro1) + formatString(intro2));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(greeting);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        //Reading in user input"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        //Stop when user inputs \"bye\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            String[] inputArr \u003d input.split(\" \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                //Print list when user inputs \"list\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    printList(list);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                // Mark task as done when user inputs \"done\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                else if (inputArr[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        throw new DukeException(\"Task to be done not specified :(\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    String taskNumber \u003d inputArr[1];"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    markTaskDoneInList(list, Integer.parseInt(taskNumber) - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                else if (inputArr[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        throw new DukeException(\"Task to delete not specified :(\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    String taskNumber \u003d inputArr[1];"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    deleteTaskFromList(list, Integer.parseInt(taskNumber) - 1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                //Add a new task to the list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                else {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    //Add a new to-do task"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    if (inputArr[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                            throw new TaskException(\"☹ OOPS!!! The description of a todo cannot be empty.\\n\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String todoName \u003d input.substring(5);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        ToDo todo \u003d new ToDo(todoName);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        list.add(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String s \u003d formatString(\"Got it. I\u0027ve added this task: \\n\") +"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                                formatString(todo.toString() + \u0027\\n\u0027) +"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                                formatString(\"Now you have \" + list.size() + \" tasks in the list. \\n\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        System.out.println(addDividers(s));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    //Add a new deadline task"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    else if (inputArr[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                            throw new TaskException(\"☹ OOPS!!! The description of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String deadlineString \u003d input.substring(9);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String[] deadlineArr \u003d deadlineString.split(\" /by \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        if (deadlineArr.length \u003c 2) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                            throw new TaskException(\"☹ OOPS!!! The date of a deadline cannot be empty.\\n\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        Deadline deadline \u003d new Deadline(deadlineArr[0], deadlineArr[1]);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        list.add(deadline);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String s \u003d formatString(\"Got it. I\u0027ve added this task: \\n\") +"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                                formatString(deadline.toString() + \u0027\\n\u0027) +"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                                formatString(\"Now you have \" + list.size() + \" tasks in the list. \\n\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        System.out.println(addDividers(s));"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    //Add a new Event task"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    else if (inputArr[0].equals(\"event\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        if (inputArr.length \u003c 2) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                            throw new TaskException(\"☹ OOPS!!! The description of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String eventString \u003d input.substring(6);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String[] eventArr \u003d eventString.split(\" /at \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        if (eventArr.length \u003c 2) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                            throw new TaskException(\"☹ OOPS!!! The date of an event cannot be empty.\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        Event event \u003d new Event(eventArr[0], eventArr[1]);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        list.add(event);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        String s \u003d formatString(\"Got it. I\u0027ve added this task: \\n\") +"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                                formatString(event.toString() + \u0027\\n\u0027) +"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                                formatString(\"Now you have \" + list.size() + \" tasks in the list. \\n\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        System.out.println(addDividers(s));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    //Unrecognised command"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                        throw new DukeException(\"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\\n\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (TaskException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                System.out.println(addDividers(formatString(e.toString())));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                System.out.println(addDividers(formatString(e.toString())));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                System.out.println(addDividers(formatString(\"Please enter out a valid number\\n\")));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        //Formatting and printing of goodbye message"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String goodbye \u003d \"Bye. Hope to see you again soon! \\n\";"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(addDividers(formatString(goodbye)));"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static void deleteTaskFromList(List\u003cTask\u003e list, int taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e list.size() - 1) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number\\n\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            Task task \u003d list.get(taskNumber);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            list.remove(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            String success \u003d formatString(\"Noted. I\u0027ve removed this task: \\n\") +"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    formatString(task.toString() + \"\\n\") +"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    formatString(\"Now you have \" + list.size() + \" tasks in the list. \\n\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            System.out.println(addDividers(success));"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static void markTaskDoneInList(List\u003cTask\u003e list, Integer taskNumber) throws DukeException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (taskNumber \u003c 0 || taskNumber \u003e list.size() - 1) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            throw new DukeException(\"Please enter a valid task number\\n\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            list.get(taskNumber).markDone();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            String success \u003d formatString(\"Nice! I\u0027ve marked this task as done: \\n\") +"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                    formatString(list.get(taskNumber).toString() + \"\\n\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            System.out.println(addDividers(success));"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static void printList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String printedList \u003d \"\";"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        if (list.size() \u003e 0) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                String lineItem \u003d (i + 1) + \". \" + list.get(i) + \"\\n\";"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "                printedList \u003d printedList + formatString(lineItem);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            String emptyString \u003d \"List is empty \\n\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "            printedList \u003d formatString(emptyString);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        System.out.println(addDividers(printedList));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static String addDividers(String s) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String divider \u003d \"___________________________\\n\";"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        String dividerFormatted \u003d String.format(\"%\" + (5 + divider.length()) + \"s\", divider);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return dividerFormatted + s + dividerFormatted;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    private static String formatString(String s) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return String.format(\"%\" + (6 + s.length()) + \"s\", s);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        ArrayList\u003cTask\u003e arrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        readAndEcho(arrayList);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 167,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public Event (String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "//@@author CS2103T-week2-project-task3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "//Reused from https://nus-cs2103-ay2021s1.github.io/website/schedule/week2/project.html"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    //@@author"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 10,
      "-": 15
    }
  },
  {
    "path": "src/main/java/TaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class TaskException extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    TaskException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return getMessage();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 11
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done a"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "pengxiangg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "pengxiangg": 3,
      "-": 20
    }
  }
]
