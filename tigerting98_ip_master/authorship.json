[
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a command where a new task will be added to the TaskList during the usage of the Duke programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    Task taskToAdd;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Private constructor that assigns the task to be added to this AddCommand."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param task the task to be assigned to this AddCommand"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private AddCommand(Task task) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        taskToAdd \u003d task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public method to construct an AddCommand to add a Todo object."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param description the description of the Todo object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an AddCommand used to add a Todo object to the TaskList"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Todo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static AddCommand addTodo(String description) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new AddCommand(new Todo(description));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public method to construct an AddCommand to add an Event object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param description the description of the Event"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param date the date of the Event in the form of a LocalDate object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an AddCommand used to add a Event object to the TaskList"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Event"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static AddCommand addEvent(String description, LocalDate date) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new AddCommand(new Event(description, date));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public method to construct an AddCommand to add an Deadline object."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param description the description of the Deadline"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param date the date of the Deadline in the form of a LocalDate object"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an AddCommand used to add a Deadline object to the TaskList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Deadline"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public static AddCommand addDeadline(String description, LocalDate date) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return new AddCommand(new Deadline(description, date));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Overridden abstract method used to add the Task stored in this AddCommand to the TaskList given."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * After adding the Task, the task information and total number of tasks will be printed."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList to add Task objects into"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.addTask(taskToAdd);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"Alrighty, I\u0027ll put it on yer tab:\\n\" + taskToAdd.toString() + \"\\n\""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                + \"You\u0027ve got a total of \" + tasks.size() + \" items right now.\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 73
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * A template class for different commands generated by the Parser during the usage of the Duke programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public abstract void execute(TaskList tasks, Storage storage, Ui ui);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 14
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a command where a task in the TaskList will be deleted during the usage of the Duke programme."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param index the index of the Task in the TaskList that needs to be deleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Deletes the Task with the index specified within this DeleteCommand."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Prints out an error message if the index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * After successful deletion, the deleted Task\u0027s information and total number of Tasks left is printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList to delete the Task from"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                throw new DukeException(\"C\u0027mon parder! That task doesn\u0027t exist cos you don\u0027t go so many!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task toBeRemoved \u003d tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(\"Alrighty, I\u0027m taking that one out:\\n\" + toBeRemoved.toString() + \"\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    + \"You\u0027ve got a total of \" + tasks.size() + \" items right now.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 46
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a command where a Task in the TaskList is marked as done."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param index the index of the Task in the TaskList that is to be marked as done"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Marks the Task with the index specified within this DoneCommand as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * An error message is printed if the index is out of bounds of the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * After successfully marking a task as done, the Task information is printed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList in which a Task is to be marked as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (index \u003e tasks.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                throw new DukeException(\"C\u0027mon parder! That task doesn\u0027t exist cos you don\u0027t go so many!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task toBeDone \u003d tasks.get(index);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            tasks.markAsDone(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(\"Sure thing baws! This right here is marked as done!\\n\" + toBeDone.toString());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 45
    }
  },
  {
    "path": "src/main/java/duke/command/EmptyCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a Command where nothing needs to be done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Used when an invalid user input is detected and nothing is done."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class EmptyCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 16
    }
  },
  {
    "path": "src/main/java/duke/command/EndCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a Command to terminate the Duke programme."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class EndCommand extends Command{"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Deactivates the given Ui object to signal the termination of the Duke programme."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks unused TaskList object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui Ui object to be deactivated."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see duke.core.Duke"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute (TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"Well I\u0027ll see you around, pardner!!\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ui.setInactive();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 24
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    String searchTerm;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public FindCommand(String searchTerm) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.searchTerm \u003d searchTerm.toLowerCase();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"Lemme look through them records real lickity-split!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.listSearch(searchTerm);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 20
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.core.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Represents a Command where the Tasks in the TaskList are printed out sequentially during the usage"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * of the Duke programme."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Prints out all the Tasks in a given TaskList in order."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param tasks the TaskList with Tasks to be printed out"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param storage unused Storage object"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param ui unused Ui object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void execute(TaskList tasks, Storage storage, Ui ui) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"Here\u0027s yer current list of thingymajigs\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.list();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 24
    }
  },
  {
    "path": "src/main/java/duke/core/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * The Duke programme implements an application that works as task tracker productivity tool."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * It can track things to do, deadlines and events as well as their status - done or not yet done."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Users input text commands, and the programme will parse it and generate an appropriate response."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * The programme terminates after the Ui object within is deactivated"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * @see Ui"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    static final String PROJECT_ROOT \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    static final String DEFAULT_FILE_PATH \u003d PROJECT_ROOT + File.separator + \"data\" + File.separator + \"saveData.txt\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    static final String DEFAULT_DIRECTORY \u003d PROJECT_ROOT + File.separator + \"data\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        new Duke(DEFAULT_FILE_PATH, DEFAULT_DIRECTORY).run();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        while (ui.isActive()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            String input \u003d ui.receiveInput();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            command.execute(taskList,storage,ui);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        storage.saveData(taskList.exportTaskList());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Duke(String filePath, String dirPath) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"Howdy pardner!! I\u0027m\\n\" + logo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        System.out.println(\"What can I get yer for?\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        storage \u003d new Storage(filePath, dirPath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        taskList.loadTasks(storage.loadData());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        parser \u003d new Parser();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 8,
      "tigerting98": 48
    }
  },
  {
    "path": "src/main/java/duke/core/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An object used to parse user input given during the usage of the Duke programme."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Returns an appropriate Command object that corresponds to the textToParse."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * If the format of the textToParse is invalid, an appropriate error message will be printed and the user can"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * try again."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param textToParse a String that represents the user input that is given by the Ui object"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an appropriate command based on the first word of the textToParse"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Ui"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Command parse(String textToParse) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String[] inputArray \u003d textToParse.split(\" \");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String firstWord \u003d inputArray[0];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        Command command \u003d new EmptyCommand();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (firstWord.toLowerCase().equals(\"bye\")) { // for termination"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d new EndCommand();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else if (firstWord.toLowerCase().equals(\"list\")) { // to display list of tasks"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d new ListCommand();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else if (firstWord.toLowerCase().equals(\"done\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    throw new DukeException(\"Sorry, which item did you want me to mark as done again?\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                int index \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d  new DoneCommand(index - 1);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else if (firstWord.toLowerCase().equals(\"delete\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    throw new DukeException(\"Sorry, which item did you want me to strike off again?\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    int index \u003d Integer.parseInt(inputArray[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    command \u003d new DeleteCommand(index - 1);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    throw new DukeException(\"I need a number not a word in this case. \""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            + \"Could ya pass that by me one more time?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else if (firstWord.toLowerCase().equals(\"find\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                if (inputArray.length \u003c\u003d 1) throw new DukeException(\"Sorry, \""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        + \"didn\u0027t quite catch what you wanted to find!\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                String searchTerm \u003d stringCombiner(inputArray, 1, inputArray.length - 1).trim();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                command \u003d new FindCommand(searchTerm);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                int index \u003d 0;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                switch (firstWord.toLowerCase()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (inputArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"Sorry, but I can\u0027t do anything \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                    + \"if you don\u0027t give me the description of your todo!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        String desc \u003d stringCombiner(inputArray, 1, inputArray.length - 1);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        command \u003d AddCommand.addTodo(desc.trim());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        String[] eventSplit \u003d textToParse.split(\"/at\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        index \u003d indexFinder(inputArray, \"/at\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (index \u003d\u003d 0) throw new DukeException(\"Think you forgot the /at keyword, pardner!\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (index \u003d\u003d 1)"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"I\u0027m gonna need a description for this here event!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (eventSplit.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"I\u0027m gonna need a date or time for this!\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            command \u003d AddCommand.addEvent(stringCombiner(inputArray, 1, index - 1).trim(),"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                    LocalDate.parse(eventSplit[1].trim()));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"Can\u0027t seem to make out this date over here\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        String[] deadlineSplit \u003d textToParse.split(\"/by\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        index \u003d indexFinder(inputArray, \"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (index \u003d\u003d 0) throw new DukeException(\"Think you forgot the /by keyword, pardner!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (index \u003d\u003d 1)"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"I\u0027m gonna need a description for this here deadline!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (deadlineSplit.length \u003d\u003d 1)"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"I\u0027m gonna need a date or time for this!\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            command \u003d AddCommand.addDeadline(stringCombiner(inputArray, 1, index - 1).trim(),"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                    LocalDate.parse(deadlineSplit[1].trim()));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            throw new DukeException(\"Can\u0027t seem to make out this date over here\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        System.out.println(\"Sorry, I didn\u0027t quite catch that!\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(e.toString());"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return command;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static String stringCombiner(String[] arr, int start, int end) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        StringBuffer str \u003d new StringBuffer();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d start; i \u003c\u003d end; i ++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            str.append(arr[i] + \" \");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return str.toString();"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private static int indexFinder(String[] arr, String exp) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (arr[i].equals(exp)) index \u003d i;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return index;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 128
    }
  },
  {
    "path": "src/main/java/duke/core/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An object used to load and save the user\u0027s task list during startup and termination of the Duke programme."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    File saveData;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    String dirPath;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public constructor to create a Storage object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param filePath the path to the saveData.txt file that stores the user\u0027s past task list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param dirPath the path to the folder where the saveData.txt is found"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Storage(String filePath, String dirPath) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.dirPath \u003d dirPath;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Loads old task list data if it exists, and creates the necessary directories and file if it does not exist."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * The path and name of the save data file to find or create depends on the file path and directory path"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * specified in the construction of this Storage object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * If any line in the save data is in an incorrect format"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * the data will not be loaded and an error message will be displayed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return an ArrayList of Task objects that is used"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public ArrayList\u003cTask\u003e loadData() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        saveData \u003d new File(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        boolean dirExists \u003d new File(dirPath).exists();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (!dirExists) new File(dirPath).mkdirs();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        // checking if the save file is already there"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            boolean fileCreated \u003d saveData.createNewFile();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (fileCreated) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(\"Haven\u0027t seen a new face around \u0027ere for awhile, have a seat!\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(\"A regular! The usual, I presume?\\n\""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        + \"I\u0027ve still got your order history, care to take a look?\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                Scanner saveReader \u003d new Scanner(saveData);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                while (saveReader.hasNextLine()) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        String saveEntry \u003d saveReader.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        String[] keywords \u003d saveEntry.split(\":\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        Task savedTask \u003d null;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        switch (keywords[0]) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            case \"T\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                savedTask \u003d new Todo(keywords[2]);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            case \"D\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                savedTask \u003d new Deadline(keywords[2], LocalDate.parse(keywords[3]));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            case \"E\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                savedTask \u003d new Event(keywords[2], LocalDate.parse(keywords[3]));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                                break;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        if (savedTask !\u003d null) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            if (keywords[1].equals(\"y\")) savedTask.markAsDone();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                            tasks.add(savedTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                        System.out.println(\"Looks like some of your records got messed up! Sorry \u0027bout that!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch ("
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                IOException exception) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(exception);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Saves the current task list data onto a text file in the path specified during the construction"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * of the Storage object."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param taskList an ArrayList of Task objects that become saved as text in a text file"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Task"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void saveData(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        BufferedWriter saveWriter \u003d null;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            saveWriter \u003d new BufferedWriter(new FileWriter(saveData));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            StringBuffer saveContentBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                saveContentBuffer.append(task.createSaveDataLine() + \"\\n\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            String saveContent \u003d saveContentBuffer.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            saveWriter.write(saveContent);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(exception);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                if (saveWriter !\u003d null) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                    saveWriter.close();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 126
    }
  },
  {
    "path": "src/main/java/duke/core/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Encapsulates an ArrayList of Task objects and handles the tracking of tasks during the usage of the"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * Duke programme."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method that prints out the current tasks in this TaskList sequentially."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void list() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            System.out.println(i + 1 + \". \" + task.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void listSearch(String searchTerm) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        int count \u003d 1;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            Task task \u003d tasks.get(i);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            if (task.getDescription().toLowerCase().contains(searchTerm)) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "                System.out.println(i + 1 + \". \" + task.toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method that returns the ArrayList of Task objects in this TaskList."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * This is used by a Storage object to save the task list during the termination of the Duke programme."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return the ArrayList of Task objects in this TaskList"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public ArrayList\u003cTask\u003e exportTaskList() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * This method is used to add tasks from an ArrayList of Task objects created by the Storage object"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * when it reads from saveData.txt to this TaskList object."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @param savedTasks an ArrayList of Task objects to be added to this TaskList object\u0027s ArrayList"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Storage"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void loadTasks(ArrayList\u003cTask\u003e savedTasks) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (!savedTasks.isEmpty()) tasks.addAll(savedTasks);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.remove(index);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void markAsDone(int index) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        tasks.get(index).markAsDone();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 74
    }
  },
  {
    "path": "src/main/java/duke/core/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " * An object used to receive User input during the usage of the Duke programme."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private boolean active;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Scanner userInput;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Public no-argument constructor for Ui."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * Initializes the Ui object to be active and assigns a scanner to"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * receive user input."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        active \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        userInput \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method to check the status of this Ui object"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return a boolean value indicating the status (active or inactive) of this Ui object"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public boolean isActive() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return active;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method for this Ui object to receive user input."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @return a string that represents the user input"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String receiveInput() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        String input \u003d userInput.nextLine();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return input;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * No-argument method to deactivate this Ui object."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * This is used to terminate the Duke programme."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     * @see Duke"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void setInactive() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        active \u003d false;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 48
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return this.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 13
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(description, deadline);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String createSaveDataLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"D:\" + getStatusLetter() + \":\" + description + \":\" + getSaveDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + getDate() + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Event(String description, LocalDate time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(description, time);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String createSaveDataLine() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"E:\" + getStatusLetter() + \":\" + description + \":\" + getSaveDate();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + getDate() + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 21
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Task(String description, LocalDate date) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return date.format(DateTimeFormatter.ofPattern(\"dd MMM uuuu\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getSaveDate() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        if (date !\u003d null) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return date.format(DateTimeFormatter.ISO_LOCAL_DATE);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getStatusLetter() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return (isDone ? \"y\" : \"n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public abstract String createSaveDataLine();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description + \" \";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 60
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String createSaveDataLine() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"T:\" + getStatusLetter() + \":\" + description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 18
    }
  },
  {
    "path": "src/test/java/duke/core/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.core;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EmptyCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.EndCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void byeTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"bye\").getClass() \u003d\u003d EndCommand.class);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void listTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"list\").getClass() \u003d\u003d ListCommand.class);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void doneTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"done 1\").getClass() \u003d\u003d DoneCommand.class);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void invalidDoneTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertTrue(p.parse(\"done\").getClass() \u003d\u003d EmptyCommand.class);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 35
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    private Event testEvent \u003d new Event(\"buy cake\", LocalDate.parse(\"2009-11-27\"));"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void descriptionTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertEquals(testEvent.description, \"buy cake\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "        assertEquals(testEvent.toString(), \"[E][✘] buy cake (at:27 Nov 2009)\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "todo buy milk"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "todo buy fish"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "deadline cs2103 assignment /by 20th August"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "event QR lecture /at 20th August 2pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "bleh"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tigerting98": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "tigerting98": 1
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tigerting98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tigerting98"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 36,
      "tigerting98": 4
    }
  }
]
