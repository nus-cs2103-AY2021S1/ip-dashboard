{
  "authorDailyContributionsMap": {
    "qlchan24": [
      {
        "date": "2020-08-15",
        "commitResults": [
          {
            "hash": "22b31b01e0a426c1292178f07a16e4e40a4bf9a2",
            "messageTitle": "Implement skeletal version of Duke",
            "messageBody": "The chatbot has a proper layout and can greet the user, echo a command,\nand exit upon command.\n",
            "tags": [
              "Level-1"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 35,
                "deletions": 6
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-16",
        "commitResults": [
          {
            "hash": "74c6afb4f585dbc0eabd8247897e6563ab30c2d1",
            "messageTitle": "Add basic functionality of a task list",
            "messageBody": "Allow for adding tasks to a list, and upon command, display all items\nin the list so far.\n",
            "tags": [
              "Level-2"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 29,
                "deletions": 6
              }
            }
          },
          {
            "hash": "1327d7e0d66989ea6b7714714a0e1c65b33c94a7",
            "messageTitle": "Use a class to represent tasks",
            "messageBody": "Replaced the ArrayList of Strings with an array of Tasks to conform to\nobject-oriented design principles.\n",
            "tags": [
              "A-Classes"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 42,
                "deletions": 15
              }
            }
          },
          {
            "hash": "b3f3469823cd8af310ae06536e044097e9b03a8d",
            "messageTitle": "Add the ability to mark tasks as done",
            "messageBody": "Implement new functions to mark as done and update design and messages\n to support the new functionality.\n",
            "tags": [
              "Level-3"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 45,
                "deletions": 16
              }
            }
          },
          {
            "hash": "a58cdc6b5ba618fe4182962665942ec45ea9902a",
            "messageTitle": "Use Inheritance to support multiple task types",
            "messageBody": "There are similarities between the task types hence inheritance will\nhelp reduce code duplication and also allow for polymorphism when\nhandling tasks.\n\nImplement classes Todo, Deadline and Event that extends the Task\nclass.\n",
            "tags": [
              "A-Inheritance"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 48,
                "deletions": 1
              }
            }
          },
          {
            "hash": "fa6ad1d75b74ebfb76f57df93d96891485b57c81",
            "messageTitle": "Reassign formatting of tasks and messages",
            "messageBody": "Tasks are formatted primarily by their own classes and other messages\nare formatted by the appropriate functions.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 15
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-17",
        "commitResults": [
          {
            "hash": "462b69b5a29bdaddd952c2e4eac435d4b86b257b",
            "messageTitle": "Allow users to create tasks from any of the task subtypes.",
            "messageBody": "Modify the input processing to look for specific keywords representing\n the subtype of Task to create, and add new messages to complement the\n  creation of these tasks.\n",
            "tags": [
              "Level-4"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 50,
                "deletions": 20
              }
            }
          },
          {
            "hash": "4d2699ed94489ddb42e03218a9745c8160e0a923",
            "messageTitle": "Add automated Text UI Testing",
            "messageBody": "Using the I/O redirection technique, update the files in the\ntext-ui-test folder to compare intended output with actual output.\n",
            "tags": [
              "A-TextUiTesting"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 9,
                "deletions": 0
              },
              "bat": {
                "insertions": 3,
                "deletions": 1
              }
            }
          },
          {
            "hash": "4b6bc2599499af04b0ca0b9acd6ac44f0de974ca",
            "messageTitle": "Add error handling",
            "messageBody": "Output the appropriate message when the user input is incorrect.\n",
            "tags": [
              "Level-5"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 4,
                "deletions": 0
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-18",
        "commitResults": [
          {
            "hash": "9641ce0176bb9ab2e83cc30d2e7d6c276d8d3672",
            "messageTitle": "Use exceptions to handle errors",
            "messageBody": "Where appropriate, create new exception classes. Throw exceptions and\ncatch them when suitable.\n",
            "tags": [
              "A-Exceptions"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 90,
                "deletions": 31
              }
            }
          },
          {
            "hash": "69c19be2933774dbe1b1e45b30716c5bf0c2d2a2",
            "messageTitle": "Use ArrayList to store tasks rather than array",
            "messageBody": "The use of Arraylist eliminates the need to keep track of a count field\nand an id field and eliminates the need for remapping if a task is\nremoved.\n\nModify all the functions to accept an arraylist instead of an array, and\n remove any redundant fields for the task class.\n",
            "tags": [
              "A-Collections"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 8,
                "deletions": 0
              },
              "java": {
                "insertions": 15,
                "deletions": 26
              }
            }
          },
          {
            "hash": "8873a9ccc8ec963190f9ef546138669503aab933",
            "messageTitle": "Show a message if the user has already done a task",
            "messageBody": "Users should not be allowed to mark a task as done if they have already\ndone so for the same task.\n",
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 1,
                "deletions": 0
              },
              "java": {
                "insertions": 10,
                "deletions": 2
              }
            }
          },
          {
            "hash": "908c0bb3e4b305b101150ef48a149ce2da370a7d",
            "messageTitle": "Add functionality for deleting tasks",
            "messageBody": "Users should have a way to clear tasks that have already been done or\ncancelled or wrongly saved.\n\nCreate new functions and messages to delete any task from the existing\nlist.\n",
            "tags": [
              "Level-6"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 4,
                "deletions": 0
              },
              "java": {
                "insertions": 21,
                "deletions": 0
              }
            }
          },
          {
            "hash": "cc2a92bdbdf4b0be46de64c308e704bfe73f4df2",
            "messageTitle": "Add enum for task types",
            "messageBody": "Enum will ensure that the values for task type will be restricted to the\n types of tasks that are actually supported.\n",
            "tags": [
              "A-Enums"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 23,
                "deletions": 25
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-23",
        "commitResults": [
          {
            "hash": "e100701f9a199af1c4e8d209a5809e110adbfe0f",
            "messageTitle": "Add ability to save to disk",
            "messageBody": "The user will likely want to retrieve the tasks he/she saved in the\nprevious session.\n\nHence, save the tasks of the current session to the user\u0027s system disk\nand retrieve it on every initialisation.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 62,
                "deletions": 1
              }
            }
          },
          {
            "hash": "403c6e925ea3f2c9ab3df69fb990e1e5406372fb",
            "messageTitle": "Incorporate Java date and time data types",
            "messageBody": "Existing tasks saves the date/time as strings which provides very little\n flexibility when converting to another format or performing operations\n on the date/time.\n\n Use specific date/time types to allow for further manipulation of the\n date/time than the existing strings.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 72,
                "deletions": 28
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-25",
        "commitResults": [
          {
            "hash": "e008f092b52f20f6ba179085f3afd666ec2ad6f0",
            "messageTitle": "Refactor the code to extract out related code as classes",
            "messageBody": "Existing code has most of the primary functions and fields in a single\nclass. This does not conform to OOP principles.\n\nMove the related members into classes of their own.\n",
            "tags": [
              "A-MoreOOP"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 437,
                "deletions": 235
              }
            }
          },
          {
            "hash": "3cfa3bc8248cc9e30f36173cee6f3bf1c8fe4a17",
            "messageTitle": "Add unit tests for TaskList and Parser",
            "messageBody": "Allow for more comprehensive testing by creating test classes and\noverriding equals() and hashcode() for the classes used in the tests to\nfacilitate the assertions.\n",
            "tags": [
              "A-Jar",
              "A-JUnit"
            ],
            "fileTypesAndContributionMap": {
              "txt": {
                "insertions": 0,
                "deletions": 0
              },
              "java": {
                "insertions": 182,
                "deletions": 10
              },
              "bat": {
                "insertions": 0,
                "deletions": 0
              },
              "sh": {
                "insertions": 0,
                "deletions": 0
              }
            }
          },
          {
            "hash": "80db5825d9c961e5b34d72ef2bc81c447fc01441",
            "messageTitle": "Add Javadoc to most non-private classes and methods.",
            "messageBody": "Provide documentation of most of the existing code.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 347,
                "deletions": 27
              }
            }
          },
          {
            "hash": "d4e0cb6c9717029ad3ad2283a2da0a5058c87142",
            "messageTitle": "Tweak the code ensure compliance with coding standard",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 54,
                "deletions": 42
              }
            }
          },
          {
            "hash": "fa385cb2835129e436e4adf260d052476e41c662",
            "messageTitle": "Add find command",
            "messageBody": "Allow users to search for tasks in their list using a search query.\n\nImplement the relevant ui and tasklist functions together with a new\ncommand type.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 35,
                "deletions": 7
              }
            }
          }
        ]
      },
      {
        "date": "2020-08-30",
        "commitResults": [
          {
            "hash": "0784631865f08557cf98efce10187d0af2c1528e",
            "messageTitle": "Integrate Gradle into project",
            "messageBody": "",
            "tags": [
              "A-Gradle"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 9,
                "deletions": 2
              }
            }
          },
          {
            "hash": "2a0b895577b84a3e2a02b1fcbd890ee81c80acf9",
            "messageTitle": "Correct checkstyle violations",
            "messageBody": "",
            "tags": [
              "A-CheckStyle"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 22,
                "deletions": 20
              }
            }
          },
          {
            "hash": "89a9935cd20393e2a73164b09df068ada6a091c3",
            "messageTitle": "Resolve storage bug",
            "messageBody": "Saving to storage previously included bugs due to writing without truncating.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 1,
                "deletions": 2
              }
            }
          },
          {
            "hash": "a932aee46002d7a91f81fa84e6292ffffaf5396b",
            "messageTitle": "Change logo",
            "messageBody": "The previous logo used Unicode characters which are able show up correctly when building and running with the IDE or shell scripts.\n\nHowever, now that Gradle has been integrated into the deployment, there are some characters that cannot show up properly even after explicitly defining the compiler and the VM file/console encoding in the gradle build/properties files, and a fix has not yet been found.\n\nHence use characters that will show up correctly when deployed and run with gradle.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 10,
                "deletions": 7
              }
            }
          },
          {
            "hash": "46c7d221cb4b62676101cd5be58ac346c1ab90a9",
            "messageTitle": "Create GUI",
            "messageBody": "Previous application was run from the shell. However, there was limited flexibility in design for such applications and does not look as aesthetically pleasing.\n\nImplement a GUI to give users visual feedback while still retaining the practicality of a CLI application.\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 15,
                "deletions": 0
              },
              "fxml": {
                "insertions": 35,
                "deletions": 0
              },
              "java": {
                "insertions": 221,
                "deletions": 79
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-04",
        "commitResults": [
          {
            "hash": "68f24d4c7c1c0d7427a410eeb9817f9d3189cf59",
            "messageTitle": "Add assertions to code",
            "messageBody": "Ensure that important assumptions hold during the running of the program.\n",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 2,
                "deletions": 2
              },
              "java": {
                "insertions": 13,
                "deletions": 5
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-07",
        "commitResults": [
          {
            "hash": "0c80de64d1ca2b19b40a7dae3f2ddb058a47fe3d",
            "messageTitle": "Refactor and clean code",
            "messageBody": "Improve the general code quality of the codebase.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 142,
                "deletions": 192
              }
            }
          },
          {
            "hash": "e88fcae68c8713a1bef1d7579e8bda698d062932",
            "messageTitle": "Allow users to define custom alias and provide some preset alias",
            "messageBody": "Advanced users may find it more efficient to use shorter keywords for the respective commands.\n",
            "tags": [
              "C-FriendlierSyntax",
              "BCD-Extension"
            ],
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 95,
                "deletions": 23
              }
            }
          },
          {
            "hash": "91cd8a86cd3361d2b2d0eff008dbfda7bb40b484",
            "messageTitle": "Validate and restrict illegal custom alias",
            "messageBody": "Users are able to map a default command to another default command, effectively preventing further use of the latter, which may break the program.\n\nHence users should be stopped from creating such alias.\n",
            "fileTypesAndContributionMap": {
              "java": {
                "insertions": 40,
                "deletions": 30
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-11",
        "commitResults": [
          {
            "hash": "e3de78741b8c0d6937f78e35b3a83e53f1f22f40",
            "messageTitle": "Add GUI enhancements",
            "messageBody": "Modify the style of the GUI to look more appealing.\n",
            "tags": [
              "A-BetterGui"
            ],
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 1,
                "deletions": 1
              },
              "fxml": {
                "insertions": 21,
                "deletions": 7
              },
              "java": {
                "insertions": 15,
                "deletions": 3
              }
            }
          }
        ]
      },
      {
        "date": "2020-09-12",
        "commitResults": [
          {
            "hash": "63d31875bfaa87ff41f92de2d484c78572fc12db",
            "messageTitle": "Add more unit tests",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "gradle": {
                "insertions": 4,
                "deletions": 0
              },
              "txt": {
                "insertions": 0,
                "deletions": 22
              },
              "java": {
                "insertions": 195,
                "deletions": 10
              },
              "bat": {
                "insertions": 0,
                "deletions": 23
              },
              "sh": {
                "insertions": 0,
                "deletions": 38
              }
            }
          },
          {
            "hash": "f210992c1e7d9278f253d405c3ef96357ad7db9f",
            "messageTitle": "Change instances named after \u0027Duke\u0027 to \u0027Mario\u0027",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 33,
                "deletions": 20
              },
              "java": {
                "insertions": 13,
                "deletions": 13
              },
              "md": {
                "insertions": 2,
                "deletions": 2
              }
            }
          },
          {
            "hash": "c0dfb20a73855d6bee13005921c8ee82760af671",
            "messageTitle": "Expand GUI window and set its title",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "fxml": {
                "insertions": 13,
                "deletions": 24
              },
              "java": {
                "insertions": 4,
                "deletions": 3
              }
            }
          },
          {
            "hash": "a09fd4694dc23a7674a0a48cabcf8d348c36d983",
            "messageTitle": "Update readme and screenshot of application",
            "messageBody": "",
            "tags": [
              "A-UserGuide"
            ],
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 15,
                "deletions": 26
              }
            }
          },
          {
            "hash": "2b0ca3711886444a0870f32efc9eb520a0c71d86",
            "messageTitle": "Update User Guide",
            "messageBody": "",
            "fileTypesAndContributionMap": {
              "md": {
                "insertions": 119,
                "deletions": 7
              }
            }
          }
        ]
      }
    ]
  },
  "authorFileTypeContributionMap": {
    "qlchan24": {
      "java": 1485,
      "md": 133,
      "fxml": 51,
      "sh": 0,
      "bat": 0,
      "gradle": 28,
      "txt": 0
    }
  },
  "authorContributionVariance": {
    "qlchan24": 79161.91
  },
  "authorDisplayNameMap": {
    "qlchan24": "CS2103-W14-4 CHAN..IANG"
  }
}
