[
  {
    "path": "src/main/java/DeadlineTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "public class DeadlineTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public DeadlineTask(String taskName, String deadline) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        return String.format(\"[D]%s (by: %s)\", super.toString(), this.deadline);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            \"██████╗ ███████╗███╗   ██╗███████╗██████╗ ██╗ ██████╗████████╗\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    + \"██╔══██╗██╔════╝████╗  ██║██╔════╝██╔══██╗██║██╔════╝╚══██╔══╝\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    + \"██████╔╝█████╗  ██╔██╗ ██║█████╗  ██║  ██║██║██║        ██║\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    + \"██╔══██╗██╔══╝  ██║╚██╗██║██╔══╝  ██║  ██║██║██║        ██║\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    + \"██████╔╝███████╗██║ ╚████║███████╗██████╔╝██║╚██████╗   ██║\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    + \"╚═════╝ ╚══════╝╚═╝  ╚═══╝╚══════╝╚═════╝ ╚═╝ ╚═════╝   ╚═╝\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static final String BYE \u003d \"bye\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static final String GOODBYE_MESSAGE \u003d \"Ok lor like that lor.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static final List\u003cTask\u003e TASKS \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        System.out.println(\"Hi, I\u0027m\\n\" + LOGO);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        Duke.displayMessages(\"What do you need this time 😫\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        try (Scanner scanner \u003d new Scanner(System.in)) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                if (input.equalsIgnoreCase(BYE)) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    Duke.handleCommand(input);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                System.out.print(\"\u003e \");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            Duke.displayMessages(GOODBYE_MESSAGE);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static void handleCommand(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String[] tokens \u003d input.split(\" \");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String command \u003d tokens[0].toLowerCase();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            case \"list\": // show tasks available"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Duke.displayTasks();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            case \"done\": {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                if (tokens.length \u003c 2) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                    throw new InvalidInputException(\"Um, you need to tell me what it is you\u0027ve done.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                int index \u003d Integer.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Task task \u003d TASKS.get(index);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                task.markDone();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Duke.displayMessages("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                        \"Okay. So you\u0027ve done:\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                        task.toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                int index \u003d Integer.parseInt(tokens[1]) - 1;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Task task \u003d TASKS.get(index);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                TASKS.remove(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Duke.displayMessages("
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                        \"Right, you no longer want me to track:\","
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                        task.toString(),"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                        Duke.getTasksLeftMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            case \"event\": // it\u0027s a new task"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Duke.addTask(command, input);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Duke.displayMessages(\"Um, I don\u0027t get what you\u0027re saying.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        } catch (InvalidInputException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            Duke.displayMessages(e.getMessage());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    // TODO: Consider some cleaner way of validating, perhaps a factory method for each Task"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static void addTask(String command, String input) throws InvalidTaskException {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String[] todoDetails \u003d input.split(\"todo \");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            if (todoDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                throw new InvalidTaskException(\"😡 I have no idea what you want to do.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String taskName \u003d todoDetails[1];"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            task \u003d new TodoTask(taskName);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String[] deadlineDetails \u003d input.split(\"deadline | /by \");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            if (deadlineDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                throw new InvalidTaskException(\"What is it you want to do?\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            if (deadlineDetails.length \u003c 3) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                throw new InvalidTaskException(\"What\u0027s your deadline? You have to tell me, you know.\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            task \u003d new DeadlineTask(deadlineDetails[1], deadlineDetails[2]);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String[] eventDetails \u003d input.split(\"event | /at \");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            if (eventDetails.length \u003c 2) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                throw new InvalidTaskException(\"What is it you want to do?\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            if (eventDetails.length \u003c 3) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                throw new InvalidTaskException(\"When do you need to do this? You have to tell me, you know.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            task \u003d new EventTask(eventDetails[1], eventDetails[2]);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            throw new InvalidTaskException(\"Um, I don\u0027t get what you\u0027re saying.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        TASKS.add(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        Duke.displayMessages("
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                \"Okay, you want to:\","
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                task.toString(),"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                Duke.getTasksLeftMessage());"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static String getTasksLeftMessage() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        return String.format("
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                \"Now you have %d thing%s you\u0027need me to remind you about.\","
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                TASKS.size(),"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                TASKS.size() \u003d\u003d 1 ? \"\" : \"s\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static void displayTasks() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        if (TASKS.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            Duke.displayMessages(\"You didn\u0027t tell me to remind you anything.\");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            String[] messages \u003d new String[TASKS.size() + 1];"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            messages[0] \u003d \"Right, you said you wanted to:\";"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            for (int i \u003d 0; i \u003c TASKS.size(); i++) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "                messages[i + 1] \u003d String.format(\"%3d: %s\", i + 1, TASKS.get(i));"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            Duke.displayMessages(messages);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private static void displayMessages(String... messages) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        System.out.println(\"     ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "            System.out.printf(\"     %s\\n\", message);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        System.out.println(\"     ――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――――\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        System.out.println();"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 150,
      "-": 4
    }
  },
  {
    "path": "src/main/java/EventTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "public class EventTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    private String timeRange;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public EventTask(String taskName, String timeRange) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        this.timeRange \u003d timeRange;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        return String.format(\"[E]%s (at: %s)\", super.toString(), this.timeRange);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 12
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "public class InvalidInputException extends RuntimeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 5
    }
  },
  {
    "path": "src/main/java/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "public class InvalidTaskException extends InvalidInputException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 5
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    protected String taskName;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public Task(String taskName) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        this.taskName \u003d taskName;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        return String.format(\"[%s] %s\", isDone ? \"✓\" : \"✘\", this.taskName);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 21
    }
  },
  {
    "path": "src/main/java/TodoTask.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "public class TodoTask extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public TodoTask(String taskName) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        super(taskName);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "done"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "blah"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JingYenLoh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JingYenLoh": 1,
      "-": 37
    }
  }
]
