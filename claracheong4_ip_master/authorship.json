[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003cimg src\u003d\"./docs/Ui.png\" width\u003d\"350\"\u003e\u003c/img\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "  * [Task](#task)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Add Task](#add-task)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Add Todo](#add-todo)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Add Event](#add-event)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Add Deadline](#add-deadline)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [List All Tasks](#list-all-tasks)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Mark Task as Done](#mark-task-as-done)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Delete Task](#delete-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Find Tasks](#find-tasks)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Find Tasks by Keyword](#find-tasks-by-keyword)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Find Tasks by Date](#find-tasks-by-date)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Find Tasks with Today\u0027s Date](#find-tasks-with-todays-date)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "  * [Exit](#exit)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "### Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A task\u0027s status is completed(✓) or uncompleted(✘)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Add Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Add Todo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Adds a todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A todo is a task without any date or time attached to it."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Adds a new todo with specified DESCRIPTION to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`todo todo`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[T][✘] todo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Add Event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Adds an event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "An event is a task with a date, start time and end time attached to it."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `event DESCRIPTION /at DATE START_TIME END_TIME`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Adds a new event with specified DESCRIPTION, DATE, START_TIME and END_TIME to the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The start time is inputted before the end time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of time is HH:MMA. (HH: hour, MM: minute, A: AM or PM)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`event event /at 2020-10-23 08:30PM 10:12PM`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Add Deadline"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Adds a deadline."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A deadline is a task with a date attached to it."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A deadline needs to be done before the date."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Adds a new deadline with specified DESCRIPTION and DATE to the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`deadline deadline /by 2020-10-23`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### List All Tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "List all tasks in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-22"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [T][✘] todo"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "3. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Mark Task as Done"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Mark a task as done, the status of the task changes from uncompleted(✘) to completed(✓)."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `done TASK_NUMBER`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Mark a task with TASK_NUMBER as done."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "One less thing on your plate! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[T][✓] todo"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Delete Task"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Deletes a task from the list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `delete TASK_NUMBER`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Deletes a task with TASK_NUMBER."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve removed this task:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[T][✘] todo"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 0 task in the list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Find Tasks"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Find Tasks by Keyword"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Find tasks from the list with description that matches the keyword inputted."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-22"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "find e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are the tasks that I\u0027ve found matching e:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [T][✘] e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "3. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Find Tasks by Date"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Find tasks from the list with date that matches the date inputted."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `date DATE`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-23"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date 2020-10-23"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are the tasks that I\u0027ve found on 23 Oct 2020:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Find Tasks with Today\u0027s Date"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Find tasks from the list with date that matches the today\u0027s date."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `date DATE`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-23"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "today"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are today\u0027s tasks:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Bye. See you again!"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "-"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 258,
      "-": 1
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    id \u0027pmd\u0027"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    mainClassName \u003d \"blue.Launcher\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    archiveBaseName \u003d \"blue\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "pmd {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    consoleOutput \u003d true"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    toolVersion \u003d \"6.21.0\""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    rulePriority \u003d 5"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    ruleSets \u003d [\"category/java/errorprone.xml\", \"category/java/bestpractices.xml\"]"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "-"
        },
        "content": "run {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 25,
      "-": 45
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003cimg src\u003d\"./Ui.png\" width\u003d\"350\"\u003e\u003c/img\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* [Features](#features)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "  * [Task](#task)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Add Task](#add-task)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Add Todo](#add-todo)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Add Event](#add-event)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Add Deadline](#add-deadline)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [List All Tasks](#list-all-tasks)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Mark Task as Done](#mark-task-as-done)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Delete Task](#delete-task)"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    * [Find Tasks](#find-tasks)"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Find Tasks by Keyword](#find-tasks-by-keyword)"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Find Tasks by Date](#find-tasks-by-date)"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "      * [Find Tasks with Today\u0027s Date](#find-tasks-with-todays-date)"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "  * [Exit](#exit)"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "  "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "### Task"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A task\u0027s status is completed(✓) or uncompleted(✘)."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Add Task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Add Todo"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Adds a todo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A todo is a task without any date or time attached to it."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `todo DESCRIPTION`"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Adds a new todo with specified DESCRIPTION to the list."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`todo todo`"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[T][✘] todo"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Add Event"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Adds an event."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "An event is a task with a date, start time and end time attached to it."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `event DESCRIPTION /at DATE START_TIME END_TIME`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Adds a new event with specified DESCRIPTION, DATE, START_TIME and END_TIME to the list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The start time is inputted before the end time."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of time is HH:MMA. (HH: hour, MM: minute, A: AM or PM)"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`event event /at 2020-10-23 08:30PM 10:12PM`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Add Deadline"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Adds a deadline."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A deadline is a task with a date attached to it."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "A deadline needs to be done before the date."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `deadline DESCRIPTION /by DATE`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Adds a new deadline with specified DESCRIPTION and DATE to the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`deadline deadline /by 2020-10-23`"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve added this task:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### List All Tasks"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "List all tasks in the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-22"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "list"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are the tasks in your list:"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [T][✘] todo"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "3. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Mark Task as Done"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Mark a task as done, the status of the task changes from uncompleted(✘) to completed(✓)."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `done TASK_NUMBER`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Mark a task with TASK_NUMBER as done."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "One less thing on your plate! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[T][✓] todo"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Delete Task"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Deletes a task from the list."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `delete TASK_NUMBER`"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* Deletes a task with TASK_NUMBER."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo todo"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "I\u0027ve removed this task:"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "[T][✘] todo"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Now you have 0 task in the list."
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "#### Find Tasks"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Find Tasks by Keyword"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Find tasks from the list with description that matches the keyword inputted."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo e"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-22"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "find e"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are the tasks that I\u0027ve found matching e:"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [T][✘] e"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "3. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Find Tasks by Date"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Find tasks from the list with date that matches the date inputted."
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `date DATE`"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-23"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date 2020-10-23"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are the tasks that I\u0027ve found on 23 Oct 2020:"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "##### Find Tasks with Today\u0027s Date"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Find tasks from the list with date that matches the today\u0027s date."
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `date DATE`"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "* The format of date is YYYY-MM-DD. (YYYY: year, MM: month, DD: day)"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event event /at 2020-10-23 08:30PM 10:12PM"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline deadline /by 2020-10-23"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "today"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "..."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Here are today\u0027s tasks:"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "1. [E][✘] event (at: 23 Oct 2020, start: 8:30PM, end: 10:12PM)"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "2. [D][✘] deadline (by: 23 Oct 2020)"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "### Exit"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Format: `bye`"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```console"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "Bye. See you again!"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "```"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 241,
      "-": 18
    }
  },
  {
    "path": "src/main/java/blue/Blue.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.CommandResponse;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.BlueException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.ReadFailedException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.UnknownInputException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The main class, Blue."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Blue {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Ui interacts with the user."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Storage deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Tasks contains the task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Tasks tasks;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Blue."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Blue() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Blue."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param filePath the file path of data to be read."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Blue(String filePath) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            this.storage \u003d initialiseStorage(filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            this.tasks \u003d storage.getTasks();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (ReadFailedException ex) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            // this.ui.printDukeException(ex);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            this.tasks \u003d new Tasks();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns an Initialised storage."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param filePath the file path."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the initialised storage."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws ReadFailedException If reading the data failed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static Storage initialiseStorage(String filePath) throws ReadFailedException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new Storage(filePath);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new ReadFailedException(\"data\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Create a command from the input, executes it and return the response."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws BlueException If the input is invalid."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(String input) throws BlueException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Command command \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        CommandResponse response \u003d command.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (response.isEmpty()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new UnknownInputException();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 82,
      "-": 1
    }
  },
  {
    "path": "src/main/java/blue/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The entry point of application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param args the input arguments"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 17
    }
  },
  {
    "path": "src/main/java/blue/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * A GUI for Blue using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Blue."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final Blue blue \u003d new Blue();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Start."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param stage the stage."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(blue);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 39
    }
  },
  {
    "path": "src/main/java/blue/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.ByeCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.Command;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.FindDateCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.FindDescriptionCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.FindTodayCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.TaskCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.BlueException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.EmptyInputException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.EmptyTaskException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.InvalidInputException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.InvalidTaskException;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.UnknownInputException;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Event;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.TaskType;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Todo;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Parser deals with making sense of the user command."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The constant minStringLength."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static final int minStringLength \u003d 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the command after parsing the input."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return Command the command."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws BlueException If the input cannot be parsed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public static Command parse(String input) throws BlueException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String keyword \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        switch (keyword) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getDoneCommand(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getDeleteCommand(input);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getTodoTaskCommand(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getEventTaskCommand(input);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getDeadlineTaskCommand(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"date\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getFindDateCommand(input);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getFindCommand(input);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"today\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return getTodayCommand();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new UnknownInputException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns done command."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the done command."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyInputException   If the task number is not in input."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws UnknownInputException If the task number cannot be parsed."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static DoneCommand getDoneCommand(String input) throws EmptyInputException,"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            UnknownInputException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String taskIndexStr;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            taskIndexStr \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be marked as done is not specified.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (taskIndexStr.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be marked as done is not specified.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            taskIndex \u003d Integer.parseInt(taskIndexStr) - 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new UnknownInputException();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new DoneCommand(taskIndex);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns delete command."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the delete command."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyInputException   If the task number is not in input."
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws UnknownInputException If the task number cannot be parsed."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static DeleteCommand getDeleteCommand(String input) throws EmptyInputException,"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            UnknownInputException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String taskIndexStr;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            taskIndexStr \u003d input.substring(7).trim();"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be deleted is not specified.\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (taskIndexStr.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be deleted is not specified.\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int taskIndex;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            taskIndex \u003d Integer.parseInt(taskIndexStr) - 1;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException ex) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new UnknownInputException();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new DeleteCommand(taskIndex);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns task command with todo."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task command with todo."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyTaskException If the description in input is empty."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static TaskCommand getTodoTaskCommand(String input) throws EmptyTaskException {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.TODO);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String description \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (description.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.TODO);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Todo todo \u003d new Todo(description);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new TaskCommand(todo);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns task command with event."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task command with event."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyTaskException   If the description or date in input is empty."
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws InvalidTaskException If the /at command is not in input or the date cannot be parsed."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static TaskCommand getEventTaskCommand(String input) throws EmptyTaskException,"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            InvalidTaskException {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int currStrIndex \u003d 6;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int slashIndex \u003d input.indexOf(\"/at\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (slashIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(\"The /at command couldn\u0027t be found.\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String description \u003d input.substring(currStrIndex, slashIndex).trim();"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (description.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.EVENT);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        currStrIndex \u003d slashIndex + 3;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String dateStr;"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            dateStr \u003d input.substring(currStrIndex, currStrIndex + 11).trim();"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"date\", TaskType.EVENT);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        currStrIndex +\u003d 11;"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        LocalDate localDate;"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            localDate \u003d LocalDate.parse(dateStr);"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String message \u003d \"The date of event is invalid, it should be in YYYY-MM-DD format.\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(message);"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String startTimeStr;"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            startTimeStr \u003d input.substring(currStrIndex, currStrIndex + 8).trim();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"start time\", TaskType.EVENT);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        currStrIndex +\u003d 9;"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        LocalTime startTimeLocal;"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            startTimeLocal \u003d LocalTime.parse(startTimeStr, dateTimeFormatter);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String message \u003d \"The start time of the event is invalid, it should be in HH:MMAA format.\";"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(message);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (input.length() \u003c currStrIndex) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"end time\", TaskType.EVENT);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String endTimeStr \u003d input.substring(currStrIndex).trim();"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (endTimeStr.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"end time\", TaskType.EVENT);"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        LocalTime endTimeLocal;"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            endTimeLocal \u003d LocalTime.parse(endTimeStr, dateTimeFormatter);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String message \u003d \"The end time of the event is invalid, it should be in HH:MMAA format.\";"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(message);"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (startTimeLocal.compareTo(endTimeLocal) \u003e 0) {"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String message \u003d \"The end time of the event is invalid, it should be after the start time.\";"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(message);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Event event \u003d new Event(description, localDate, startTimeLocal, endTimeLocal);"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new TaskCommand(event);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns task command with deadline."
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the deadline task command."
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyTaskException   If the description or date in input is empty."
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws InvalidTaskException If the /by command is not in input or the date cannot be parsed."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static Command getDeadlineTaskCommand(String input) throws EmptyTaskException,"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            InvalidTaskException {"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        int slashIndex \u003d input.indexOf(\"/by\");"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (slashIndex \u003d\u003d -1) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(\"The /by command couldn\u0027t be found.\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String description \u003d input.substring(9, slashIndex).trim();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (description.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"description\", TaskType.DEADLINE);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String deadlineStr \u003d input.substring(slashIndex + 3).trim();"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (deadlineStr.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyTaskException(\"date\", TaskType.DEADLINE);"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        LocalDate localDeadline;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            localDeadline \u003d LocalDate.parse(deadlineStr.trim());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String message \u003d \"The deadline of deadline is invalid, it should be in YYYY-MM-DD format.\";"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskException(message);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Deadline deadline \u003d new Deadline(description, localDeadline);"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new TaskCommand(deadline);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns find date command."
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the find date command."
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyInputException   If the date is not in input."
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws InvalidInputException If the date cannot be parsed."
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static FindDateCommand getFindDateCommand(String input) throws EmptyInputException,"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            InvalidInputException {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String dateStr;"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            dateStr \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The date to be searched is not specified.\");"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (dateStr.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The date to be searched is not specified.\");"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        LocalDate localDate;"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            localDate \u003d LocalDate.parse(dateStr.trim());"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String message \u003d \"The date to be searched is invalid, it should be in YYYY-MM-DD format.\";"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidInputException(message);"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new FindDateCommand(localDate);"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns find description command."
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param input the input."
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the find description command."
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws EmptyInputException If the description is not in input."
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static FindDescriptionCommand getFindCommand(String input) throws EmptyInputException {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String itemStr;"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            itemStr \u003d input.substring(5).trim();"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be searched is not specified.\");"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (itemStr.length() \u003c minStringLength) {"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new EmptyInputException(\"The task to be searched is not specified.\");"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new FindDescriptionCommand(itemStr);"
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns find date command with today as date."
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the find date command."
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private static FindDateCommand getTodayCommand() {"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new FindTodayCommand();"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 335
    }
  },
  {
    "path": "src/main/java/blue/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.ReadFailedException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Storage deals with loading tasks from the file and saving tasks in the file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The file path where the file is located."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The File to be read and written."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Storage."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Create a file using the file path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param filePath the file path."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IOException If the file cannot be created."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Storage(String filePath) throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.file \u003d createEmptyFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns an empty file."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the file."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IOException If the file cannot be created."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private File createEmptyFile() throws IOException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        File file \u003d new File(this.filePath);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        file.createNewFile();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        file.setExecutable(true, false);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        file.setReadable(true, false);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        file.setWritable(true, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return file;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns tasks by reading the file."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the tasks"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws ReadFailedException If the file cannot be read."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Tasks getTasks() throws ReadFailedException {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Tasks tasks \u003d new Tasks();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Scanner scanner;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new ReadFailedException(\"tasks\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String line \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            String[] stringArr \u003d line.split(\"_\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            tasks.addTask(stringArr);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Adds the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task the task."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IOException If the task cannot be added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void addTask(Task task) throws IOException {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.writeData(task.getData() + \"\\n\", true);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Write data."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param data       the data."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param appendMode true if data is to be appended, false otherwise."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IOException If the file cannot be written."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private void writeData(String data, boolean appendMode) throws IOException {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file, appendMode);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        fileWriter.write(data);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Updates the tasks."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param newTasks the new tasks."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IOException If the tasks cannot be updated."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void updateTasks(Tasks newTasks) throws IOException {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.writeData(newTasks.getData(), false);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 111
    }
  },
  {
    "path": "src/main/java/blue/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.Random;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Bye command which terminates the program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Bye command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public ByeCommand() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.BYE;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a response consisting exit message."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to bye command."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message \u003d ui.getExitMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (new Random().nextInt(4) \u003d\u003d 0) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            message +\u003d ui.getLongExitMessage();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new CommandResponse(message, this.isExit());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 36
    }
  },
  {
    "path": "src/main/java/blue/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.BlueException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * Command determines whether the program should continue running and executes commands."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Command type."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected CommandType commandType;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * True if program should terminate, false otherwise."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected boolean isExit() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.commandType \u003d\u003d CommandType.BYE;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Execute command and returns a message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to the command."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws BlueException If there is a blue exception thrown."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public abstract CommandResponse execute(Tasks tasks, Ui ui, Storage storage) throws BlueException;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 36
    }
  },
  {
    "path": "src/main/java/blue/command/CommandResponse.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The type Command response."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class CommandResponse {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final String message;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * True if command executed is a bye command, false otherwise."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final boolean isExit;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * True if there is no response, false otherwise."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final boolean isEmpty;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new empty Command response."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.message \u003d \"\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isEmpty \u003d true;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Command response."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param isExit  the is exit."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse(String message, boolean isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isExit \u003d isExit;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isEmpty \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns message."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the message."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.message;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns true if command executed is a bye command, false otherwise."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns true if there is no response, false otherwise."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.isEmpty;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 67
    }
  },
  {
    "path": "src/main/java/blue/command/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The enum Command type."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Bye command type."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * List command type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Delete command type."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Done command type."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Task command type."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    TASK,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Find command type."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    FIND"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 31
    }
  },
  {
    "path": "src/main/java/blue/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.SaveTaskFailedException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Delete command which deletes a task."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Task index of task to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Delete command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param taskIndex the task index."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public DeleteCommand(int taskIndex) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.DELETE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Deletes the task and returns a response consisting a message to indicate successful deletion."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to delete command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws InvalidTaskNumberException If the task number is invalid."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws SaveTaskFailedException    If the task list cannot be saved."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throws InvalidTaskNumberException, SaveTaskFailedException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            Task task \u003d tasks.getTask(taskIndex);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            tasks.removeTask(taskIndex);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            storage.updateTasks(tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new CommandResponse(ui.getDeleteTaskMessage(task, tasks.getSize()), this.isExit());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskNumberException(\"The task to be deleted does not exist!\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new SaveTaskFailedException(taskIndex);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 55
    }
  },
  {
    "path": "src/main/java/blue/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.InvalidTaskNumberException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.SaveTaskFailedException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Done command marks a task as done."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Task index of the task to be marked as done."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final int taskIndex;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Done command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param taskIndex the task index."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public DoneCommand(int taskIndex) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.DONE;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.taskIndex \u003d taskIndex;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Mark the task as done and returns a response consisting a message to indicate successful mark as done."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to done command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws InvalidTaskNumberException If the task number is invalid."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws SaveTaskFailedException    If the task list cannot be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage)"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throws InvalidTaskNumberException, SaveTaskFailedException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            tasks.getTask(this.taskIndex).markAsDone();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            storage.updateTasks(tasks);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new CommandResponse(ui.getMarkTaskAsDoneMessage(tasks.getTask(this.taskIndex)),"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    this.isExit());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new InvalidTaskNumberException(\"The task to be marked as done does not exist!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new SaveTaskFailedException(this.taskIndex);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 54
    }
  },
  {
    "path": "src/main/java/blue/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Find command finds tasks."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public abstract class FindCommand extends Command {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Find command type."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected FindCommandType findCommandType;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 11
    }
  },
  {
    "path": "src/main/java/blue/command/FindCommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The enum Find command type."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public enum FindCommandType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Date find command type."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    DATE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Description find command type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    DESCRIPTION"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/command/FindDateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Find date command finds tasks with the same date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class FindDateCommand extends FindCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected final LocalDate date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Find date command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date the date to be found."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public FindDateCommand(LocalDate date) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.FIND;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.findCommandType \u003d FindCommandType.DATE;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Find and returns a response consisting a message with tasks on the date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to find date command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.findByDate(this.date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new CommandResponse(ui.getFoundMessage(date, taskList), this.isExit());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 44
    }
  },
  {
    "path": "src/main/java/blue/command/FindDescriptionCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The type Find description command finds tasks containing the description."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class FindDescriptionCommand extends FindCommand {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Description."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Find description command."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description to be found."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public FindDescriptionCommand(String description) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.FIND;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.findCommandType \u003d FindCommandType.DESCRIPTION;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Find and returns a response consisting a message with tasks matching the description."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to find description command."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.findByDescription(this.description);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new CommandResponse(ui.getFoundMessage(description, taskList), this.isExit());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 43
    }
  },
  {
    "path": "src/main/java/blue/command/FindTodayCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Find today command finds tasks today."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class FindTodayCommand extends FindDateCommand {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Find today command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public FindTodayCommand() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(LocalDate.now());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Find and returns a response consisting a message with tasks today."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to find today command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d tasks.findByDate(super.date);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new CommandResponse(ui.getFoundMessage(taskList), this.isExit());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 35
    }
  },
  {
    "path": "src/main/java/blue/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The List command prints the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new List command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.LIST;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a response consisting a message with the task list."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to list command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new CommandResponse(ui.getListMessage(tasks), this.isExit());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 30
    }
  },
  {
    "path": "src/main/java/blue/command/TaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.SaveTaskFailedException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Task command adds a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class TaskCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Task to be added."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Task command."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task the task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public TaskCommand(Task task) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.commandType \u003d CommandType.TASK;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Adds a task to the task list and returns a response consisting a message to indicate successful"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * addition."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks   the task list."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ui      interacts with user."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param storage loads and save tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the response to task command."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws SaveTaskFailedException If the task cannot be saved."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public CommandResponse execute(Tasks tasks, Ui ui, Storage storage) throws SaveTaskFailedException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks.addTask(this.task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            storage.addTask(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new SaveTaskFailedException(tasks.getSize());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new CommandResponse(ui.getAddTaskMessage(task, tasks.getSize()), this.isExit());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 50
    }
  },
  {
    "path": "src/main/java/blue/exception/BlueException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The general Blue exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class BlueException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Blue exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public BlueException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/EmptyInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Empty input exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class EmptyInputException extends BlueException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Empty input exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public EmptyInputException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/EmptyTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.TaskType;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Empty task exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class EmptyTaskException extends EmptyInputException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Empty task exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public EmptyTaskException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Empty task exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param field the field that is empty."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param type  the type of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public EmptyTaskException(String field, TaskType type) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(String.format(\"The %s of %s %s cannot be empty.\","
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                field,"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                type.compareTo(TaskType.EVENT) \u003d\u003d 0 ? \"an\" : \"a\","
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                type.toString().toLowerCase()));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 30
    }
  },
  {
    "path": "src/main/java/blue/exception/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Invalid input exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class InvalidInputException extends BlueException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Invalid input exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/InvalidTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Invalid task exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class InvalidTaskException extends InvalidInputException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Invalid task exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public InvalidTaskException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/InvalidTaskNumberException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Invalid task number exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class InvalidTaskNumberException extends InvalidInputException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Invalid task number exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public InvalidTaskNumberException() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(\"The task number is invalid!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Invalid task number exception."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public InvalidTaskNumberException(String message) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 22
    }
  },
  {
    "path": "src/main/java/blue/exception/ReadFailedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Read failed exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class ReadFailedException extends StorageException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Read failed exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param item the item read."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public ReadFailedException(String item) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(String.format(\"Failed to read %s!\", item));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/SaveFailedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Save failed exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class SaveFailedException extends StorageException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Save failed exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param item the item."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public SaveFailedException(String item) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(String.format(\"Failed to save %s!\", item));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/SaveTaskFailedException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Save task failed exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class SaveTaskFailedException extends SaveFailedException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Save task failed exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param taskIndex the task index."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public SaveTaskFailedException(int taskIndex) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(\"task \" + taskIndex);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/StorageException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Storage exception."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class StorageException extends BlueException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Storage exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public StorageException(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 15
    }
  },
  {
    "path": "src/main/java/blue/exception/UnknownInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.ui.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Unknown input exception."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class UnknownInputException extends InvalidInputException {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Unknown input exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param message the message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public UnknownInputException(String message) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Unknown input exception."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public UnknownInputException() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(new Ui().getUnknownInputMessage());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 24
    }
  },
  {
    "path": "src/main/java/blue/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Deadline, a task that need to be done before a specific date and time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Deadline."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final LocalDate deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Deadline."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param deadline    the deadline."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param deadline    the deadline."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param isDone      true if deadline is done, false otherwise."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Deadline(String description, LocalDate deadline, boolean isDone) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, isDone, TaskType.DEADLINE);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a boolean which is true if date is equal, false otherwise."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date the date."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public boolean isDateEqual(LocalDate date) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return date.equals(this.deadline);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns data of the event."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Used to store the event."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the data."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return String.format(\"%s_%s \", super.getData(), this.deadline);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the string representation of the deadline."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the string."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return super.toString() + \" (by: \" + this.getFormattedDeadline() + \")\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the formatted deadline."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the formatted deadline."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private String getFormattedDeadline() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.deadline.format(formatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 78
    }
  },
  {
    "path": "src/main/java/blue/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Event, a task that starts at a specific time and ends at a specific time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Date."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * the start time of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final LocalTime startTime;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * the start time of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final LocalTime endTime;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Event with start and end time."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date        the date of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param startTime   the start time of the event."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param endTime     the end time of the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, TaskType.EVENT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Event with start and end time."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date        the date of the event."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param startTime   the start time of the event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param endTime     the end time of the event."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param isDone      true if event is done, false otherwise."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Event(String description, LocalDate date, LocalTime startTime, LocalTime endTime, boolean isDone) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, isDone, TaskType.EVENT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.startTime \u003d startTime;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.endTime \u003d endTime;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a boolean which is true if date is equal, false otherwise."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date the date."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public boolean isDateEqual(LocalDate date) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return date.equals(this.date);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns data of the event."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Used to store the event."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the data."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return String.format(\"%s_%s_%s_%s\", super.getData(), this.date, this.startTime, this.endTime);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the string representation of the event."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the string."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return String.format(\"%s (at: %s, start: %s, end: %s)\", super.toString(), this.getFormattedDate(),"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                this.getFormattedTime(this.startTime), this.getFormattedTime(this.endTime));"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the formatted date."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the formatted date."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private String getFormattedDate() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.date.format(formatter);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the formatted time."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param time the time."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the formatted time."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private String getFormattedTime(LocalTime time) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"hh:mma\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return time.format(formatter);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 107
    }
  },
  {
    "path": "src/main/java/blue/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.ReadFailedException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Task with description, isDone and type."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The constant CROSS_ICON."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static final String CROSS_ICON \u003d \"\\u2718\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The constant TICK_ICON."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected static final String TICK_ICON \u003d \"\\u2713\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Type of task."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected final TaskType type;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * True if task is done, false otherwise."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param type        the type of task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Task(String description, TaskType type) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param isDone      true if task is done, false otherwise."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param type        the type of task."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Task(String description, boolean isDone, TaskType type) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns true if the task is a todo or deadline and"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * the date of task is equal to the date, false otherwise."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task the task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date the date."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public static boolean isDateEqual(Task task, LocalDate date) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (!task.hasDate()) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        switch (task.type) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return ((Deadline) task).isDateEqual(date);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return ((Event) task).isDateEqual(date);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns true, if task has a date, false otherwise."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public boolean hasDate() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.type !\u003d TaskType.TODO;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a new task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param stringArr the arr that contains strings of arguments to create a new task."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws ReadFailedException If the task type cannot be recognised."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public static Task createTask(String[] stringArr) throws ReadFailedException {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, Boolean\u003e isDone \u003d num -\u003e num.equals(\"1\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, LocalDate\u003e toDate \u003d date -\u003e LocalDate.parse(date.trim());"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, LocalTime\u003e toTime \u003d time -\u003e LocalTime.parse(time.trim());"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        switch (stringArr[0]) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new Todo(stringArr[2], isDone.apply(stringArr[0]));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new Event(stringArr[2], toDate.apply(stringArr[3]),"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    toTime.apply(stringArr[4]), toTime.apply(stringArr[5]), isDone.apply(stringArr[0]));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return new Deadline(stringArr[2], toDate.apply(stringArr[3]), isDone.apply(stringArr[0]));"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            throw new ReadFailedException(\"tasks\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns true if the description of the task contains the query string, false otherwise."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param string the query string."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the boolean."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public boolean containsDescription(String string) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.description.contains(string);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Mark a task as done."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns data of the task."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Used to store the task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the data."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return String.format(\"%s_%s_%s\", this.type.toString().charAt(0), this.isDone ? 1 : 0,"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                this.description);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the string representation of the task."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the string."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return String.format(\"[%S][%s] %s\", this.type.toString().charAt(0), this.getStatusIcon(),"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                this.description);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns status icon of the task."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the status icon."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return (this.isDone ? TICK_ICON : CROSS_ICON); // return tick or cross symbols"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 162
    }
  },
  {
    "path": "src/main/java/blue/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The enum Task type."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Todo task type."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Event task type."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Deadline task type."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    DEADLINE"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 19
    }
  },
  {
    "path": "src/main/java/blue/task/Tasks.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.ReadFailedException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Tasks, which stores a list containing tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Tasks {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The List of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Tasks, initialise the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Tasks() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the task list."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public ArrayList\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param taskIndex the task index."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IndexOutOfBoundsException If the task is not in the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Task getTask(int taskIndex) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assert taskIndex \u003e\u003d 0 : \"index of task is less than 0\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.tasks.get(taskIndex);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the size of the task list."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the size."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.tasks.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns data of the task list."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Used to store the task list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the data."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getData() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String data \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            data +\u003d task.getData() + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return data;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Create a task then add it to the task list."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param stringArr the string arr."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws ReadFailedException If the stringArr cannot be read."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void addTask(String[] stringArr) throws ReadFailedException {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Task task \u003d Task.createTask(stringArr);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Adds a task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task the task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Remove a task."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param taskIndex the task index."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IndexOutOfBoundsException If the task is not in the task list."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void removeTask(int taskIndex) throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assert taskIndex \u003e\u003d 0 : \"index of task is less than 0\";"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.tasks.remove(taskIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a task list that has the date."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param date the date."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public ArrayList\u003cTask\u003e findByDate(LocalDate date) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            if (Task.isDateEqual(task, date)) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a task list that has the description."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task list."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public ArrayList\u003cTask\u003e findByDescription(String description) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            if (task.containsDescription(description)) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 131
    }
  },
  {
    "path": "src/main/java/blue/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Todo, a task without any date or time attached to it."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Todo."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, TaskType.TODO);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Todo."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param isDone      true if todo is done, false otherwise."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        super(description, isDone, TaskType.TODO);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 25
    }
  },
  {
    "path": "src/main/java/blue/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Text."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Display picture."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Instantiates a new Dialog box."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param text  the text."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param image the image."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private DialogBox(String text, Image image) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.dialog.setText(text);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.displayPicture.setImage(image);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns user dialog."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param text  the text."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param image the image."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the user dialog."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image image) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new DialogBox(text, image);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns blue dialog."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param text  the text."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param image the image."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the blue dialog."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public static DialogBox getBlueDialog(String text, Image image) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        var dialogBox \u003d new DialogBox(text, image);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        dialogBox.flip();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return dialogBox;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "claracheong4": 87
    }
  },
  {
    "path": "src/main/java/blue/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.Timer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.TimerTask;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.Blue;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.command.CommandResponse;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.BlueException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The User image."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Blue image."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final Image blueImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/blue.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Ui."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private final Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Scroll pane."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Dialog container."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Send button."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The User input."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * The Blue."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Blue blue;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Initialise the scroll pane and dialog container."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.blue \u003d new Blue();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.scrollPane.vvalueProperty().bind(this.dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.showWelcomeMessage();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Show welcome message."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private void showWelcomeMessage() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        // show welcome message"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                DialogBox.getBlueDialog(this.ui.getWelcomeMessage(), this.blueImage)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        // get today\u0027s tasks"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            CommandResponse response \u003d this.blue.execute(\"today\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            message \u003d response.getMessage();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (BlueException ex) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            message \u003d this.ui.getDukeExceptionMessage(ex);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                DialogBox.getBlueDialog(message, this.blueImage)"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        );"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.userInput.clear();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Sets blue."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param blue the blue"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void setDuke(Blue blue) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.blue \u003d blue;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Blue\u0027s reply and then"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * appends them to the dialog container."
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Clears the user input after processing."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String input \u003d this.userInput.getText();"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        CommandResponse response \u003d new CommandResponse();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            response \u003d this.blue.execute(this.userInput.getText());"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            message \u003d response.getMessage();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (BlueException ex) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            message \u003d this.ui.getDukeExceptionMessage(ex);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                DialogBox.getUserDialog(input, this.userImage),"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                DialogBox.getBlueDialog(message, this.blueImage)"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        );"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        this.userInput.clear();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (response.isExit()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            exit();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Exit."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private void exit() {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        TimerTask task \u003d new TimerTask() {"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            @Override"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            public void run() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        };"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Timer timer \u003d new Timer();"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        long delay \u003d 1000L; // 1 second"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        timer.schedule(task, delay * 4);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 147
    }
  },
  {
    "path": "src/main/java/blue/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.BlueException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.task.Tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * The Ui generates messages."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns welcome message."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the welcome message."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getWelcomeMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String greeting \u003d \"Hello, I\u0027m Blue\\n\\n\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        greeting +\u003d \"Starry, starry night\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"Paint your palette blue and grey\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"Look out on a summer\u0027s day\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"With eyes that know the darkness in my soul\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"Shadows on the hills\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"Sketch the trees and the daffodils\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"Catch the breeze and the winter chills\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"In colors on the snowy linen land\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return greeting;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns exit message."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the exit message."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getExitMessage() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return \"Bye. See you again!\\n\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns the long exit message."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the exit message"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getLongExitMessage() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return \"\\nBut I could have told you, Vincent\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"This world was never meant for one\\n\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                + \"As beautiful as you\\n\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns add task message."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task   the task."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param length the length of the tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the add task message."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getAddTaskMessage(Task task, int length) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message \u003d \"I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        message +\u003d \" \" + task;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        message +\u003d String.format(\"\\nNow you have %s task%s in the list.\", length, length \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns list message."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param tasks the tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the list message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getListMessage(Tasks tasks) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return \"Your list is empty!\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(\"Here are the tasks in your list:\\n\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.getListItems(builder, tasks.getTasks()).toString();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns list items to be printed."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param builder the string builder."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param list    the list."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the string builder."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private StringBuilder getListItems(StringBuilder builder, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            builder.append(String.format(\"%s. %s\\n\", i + 1, list.get(i)));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return builder;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns tasks found with today\u0027s date."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param list the list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the found message."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getFoundMessage(ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return String.format(\"There are no tasks today!\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String intro \u003d \"Here are today\u0027s tasks:\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(intro);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.getListItems(builder, list).toString();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns tasks found with the date."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param localDate the date."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param list      the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the found message."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getFoundMessage(LocalDate localDate, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String formattedDate \u003d localDate.format(formatter);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return String.format(\"I couldn\u0027t find anything on %s.\", formattedDate);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String intro \u003d String.format(\"Here are the tasks that I\u0027ve found on %s:\\n\", formattedDate);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(intro);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.getListItems(builder, list).toString();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns tasks found with the description."
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param description the description."
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param list        the list."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the found message."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getFoundMessage(String description, ArrayList\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        if (list.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            return String.format(\"I couldn\u0027t find anything matching %s.\", description);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String intro \u003d String.format(\"Here are the tasks that I\u0027ve found matching %s:\\n\", description);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        StringBuilder builder \u003d new StringBuilder(intro);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return this.getListItems(builder, list).toString();"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns mark task as done message."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task the task."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the mark task as done message."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getMarkTaskAsDoneMessage(Task task) {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return \"One less thing on your plate! I\u0027ve marked this task as done:\\n \" + task;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns delete task message."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param task   the task."
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param length the length of the tasks."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the delete task message."
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getDeleteTaskMessage(Task task, int length) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String message \u003d \"I\u0027ve removed this task:\\n \" + task;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        message +\u003d String.format(\"\\nNow you have %s task%s in the list.\", length, length \u003e 1 ? \"s\" : \"\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns unknown inout message."
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the unknown input message."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getUnknownInputMessage() {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return \"I couldn\u0027t understand what you tried to say to me.\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns message representing blue exception."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @param ex the blue exception."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the blue exception message."
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public String getDukeExceptionMessage(BlueException ex) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return ex.getMessage();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 190
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003cfx:root"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        alignment\u003d\"TOP_RIGHT\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        maxWidth\u003d\"1.7976931348623157E308\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        type\u003d\"javafx.scene.layout.HBox\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/11.0.1\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003cHBox"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                fx:id\u003d\"speechBubble\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                styleClass\u003d\"speech-bubble\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                stylesheets\u003d\"@../styles/base.css\"\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            \u003cchildren\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    \u003cpadding\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                    \u003c/padding\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            \u003c/children\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003cImageView"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                fx:id\u003d\"displayPicture\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                fitHeight\u003d\"100.0\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                fitWidth\u003d\"100.0\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                pickOnBounds\u003d\"true\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"15.0\" right\u003d\"15.0\" top\u003d\"15.0\"/\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 43
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003cAnchorPane"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        maxHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        maxWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        minHeight\u003d\"-Infinity\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        minWidth\u003d\"-Infinity\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        stylesheets\u003d\"@../styles/base.css\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        xmlns\u003d\"http://javafx.com/javafx/11.0.1\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        fx:controller\u003d\"blue.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                   onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                   layoutX\u003d\"5.0\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                   prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                   prefWidth\u003d\"320.0\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                   AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003cButton ellipsisString\u003d\"\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                fx:id\u003d\"sendButton\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                layoutX\u003d\"330.0\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                mnemonicParsing\u003d\"false\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                prefHeight\u003d\"40.0\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                prefWidth\u003d\"65.0\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                text\u003d\"Send\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003cScrollPane"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                fx:id\u003d\"scrollPane\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                hbarPolicy\u003d\"NEVER\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                hvalue\u003d\"1.0\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                prefHeight\u003d\"557.0\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                \u003cVBox"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        fx:id\u003d\"dialogContainer\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        prefHeight\u003d\"552.0\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                        prefWidth\u003d\"388.0\"/\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 50
    }
  },
  {
    "path": "src/test/java/blue/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * Tests Deadline."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test isDateEqual method."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testIsDateEquals() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertTrue(createDeadline().isDateEqual(LocalDate.parse(\"2020-04-03\")));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertFalse(createDeadline().isDateEqual(LocalDate.parse(\"2020-04-08\")));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a deadline."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the deadline."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Deadline createDeadline() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Deadline(\"description\", LocalDate.parse(\"2020-04-03\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getData method."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"D_0_description_2020-04-03\", createDeadline().getData().trim());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test toString method."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"[D][\\u2718] description (by: 03 Apr 2020)\", createDeadline().toString());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 48
    }
  },
  {
    "path": "src/test/java/blue/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * Tests Event."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test isDateEquals method."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testIsDateEquals() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertTrue(createEvent().isDateEqual(LocalDate.parse(\"2020-04-03\")));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertFalse(createEvent().isDateEqual(LocalDate.parse(\"2020-04-08\")));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns an event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the event."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Event createEvent() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, LocalTime\u003e toTime \u003d time -\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                LocalTime.parse(time, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Event(\"description\", LocalDate.parse(\"2020-04-03\"), toTime.apply(\"08:32AM\"),"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                toTime.apply(\"07:53PM\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getData method."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"E_0_description_2020-04-03_08:32_19:53\", createEvent().getData().trim());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test toString method."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"[E][\\u2718] description (at: 03 Apr 2020, start: 08:32AM, end: 07:53PM)\","
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                createEvent().toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 55
    }
  },
  {
    "path": "src/test/java/blue/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertFalse;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.ReadFailedException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * Tests Task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test hasDate method."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testHasDate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertFalse(createTodo().hasDate());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertTrue(createEvent().hasDate());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertTrue(createDeadline().hasDate());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a todo."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Task createTodo() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Todo(\"todo\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns an event."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Task createEvent() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, LocalTime\u003e toTime \u003d time -\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                LocalTime.parse(time, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Event(\"event\", LocalDate.parse(\"2020-03-23\"), toTime.apply(\"08:32AM\"),"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                toTime.apply(\"07:53PM\"));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a deadline."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Task createDeadline() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Deadline(\"deadline\", LocalDate.parse(\"2020-03-07\"));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test markAsDone method."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testMarkAsDone() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Task task \u003d createTodo();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"[T][\\u2713] todo\", task.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test createTask method with success."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws ReadFailedException If the task cannot be read."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testCreateTask_success() throws ReadFailedException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(createTodo().toString(),"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                Task.createTask(new String[]{\"T\", \"0\", \"todo\"}).toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(createEvent().toString(),"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                Task.createTask(new String[]{\"E\", \"0\", \"event\", \"2020-03-23\", \"08:32\", \"19:53\"}).toString());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(createDeadline().toString(),"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                Task.createTask(new String[]{\"D\", \"0\", \"deadline\", \"2020-03-07\"}).toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test createTask method with exception thrown."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testCreateTask_exceptionThrown() {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            Task.createTask(new String[]{\"J\", \"0\", \"todo\"});"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (ReadFailedException ex) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            assertEquals(\"Failed to read tasks!\", ex.getMessage());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getStatusIcon method."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetStatusIcon() {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"\\u2718\", createTodo().getStatusIcon());"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Task task \u003d createTodo();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"\\u2713\", task.getStatusIcon());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getData method."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"T_0_todo\", createTodo().getData());"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test toString method."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testToString() {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(\"[T][\\u2718] todo\", createTodo().toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 127
    }
  },
  {
    "path": "src/test/java/blue/task/TasksTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "package blue.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import java.util.function.Function;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "import blue.exception.ReadFailedException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " * Test Tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "public class TasksTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getTasks method."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(createTasks().getTasks().size(), createTasks().getSize());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a tasks."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the tasks."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Tasks createTasks() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, LocalTime\u003e toTime \u003d time -\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                LocalTime.parse(time, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Tasks tasks \u003d new Tasks();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks.addTask(createTodo());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks.addTask(new Deadline(\"deadline\", LocalDate.parse(\"2020-02-12\")));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks.addTask(new Event(\"event\", LocalDate.parse(\"2020-04-12\"), toTime.apply(\"08:32AM\"),"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                toTime.apply(\"07:53PM\")));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Returns a todo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @return the todo."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    private Task createTodo() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        return new Todo(\"todo\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getTasks method with success."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetTask_success() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(createTodo().toString(), createTasks().getTask(0).toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getTask method with exception thrown."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetTask_exceptionThrown() {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            createTasks().getTask(10);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            assertEquals(\"Index 10 out of bounds for length 3\", ex.getMessage());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getSize method."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetSize() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(3, createTasks().getSize());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test getData method."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testGetData() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Function\u003cString, LocalTime\u003e toTime \u003d time -\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                LocalTime.parse(time, DateTimeFormatter.ofPattern(\"hh:mma\"));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        String expected \u003d createTodo().getData() + \"\\n\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        expected +\u003d new Deadline(\"deadline\", LocalDate.parse(\"2020-02-12\")).getData() + \"\\n\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        expected +\u003d new Event(\"event\", LocalDate.parse(\"2020-04-12\"), toTime.apply(\"08:32AM\"),"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "                toTime.apply(\"07:53PM\")).getData() + \"\\n\";"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(expected, createTasks().getData());"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test addTask method with success."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws ReadFailedException If the task cannot be read."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testAddTask_success() throws ReadFailedException {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Tasks tasks1 \u003d new Tasks();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks1.addTask(new String[]{\"T\", \"0\", \"todo\"});"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks1.addTask(new String[]{\"D\", \"0\", \"deadline\", \"2020-02-12\"});"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks1.addTask(new String[]{\"E\", \"0\", \"event\", \"2020-03-23\", \"08:32\", \"19:53\"});"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(3, tasks1.getSize());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test addTask method with exception thrown."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testAddTask_exceptionThrown() {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            createTasks().addTask(new String[]{\"A\", \"0\", \"todo\"});"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (ReadFailedException ex) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            assertEquals(\"Failed to read tasks!\", ex.getMessage());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test removeTask method with success."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     *"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * @throws IndexOutOfBoundsException the index out of bounds exception."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testRemoveTask_success() throws IndexOutOfBoundsException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        Tasks tasks \u003d createTasks();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        tasks.removeTask(0);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(2, tasks.getSize());"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test removeTask method with exception thrown."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testRemoveTask_exceptionThrown() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            createTasks().removeTask(10);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            fail(); // the test should not reach this line"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        } catch (IndexOutOfBoundsException ex) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "            assertEquals(\"Index 10 out of bounds for length 3\", ex.getMessage());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     * Test findByDate method."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "     */"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    public void testFindByDate() {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(0, createTasks().findByDate(LocalDate.parse(\"2020-05-20\")).size());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "        assertEquals(1, createTasks().findByDate(LocalDate.parse(\"2020-04-12\")).size());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "    }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 157
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "todo dfsfsdf"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "eventfsrfdg"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event awrfawesf"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event dads /at"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event efaws /at "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event /at 2020-10-23"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event/at 2020-10-23"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-2308:30PM"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 08:30PM"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 08:30PM "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 53:30PM"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 08:30PM10:12PM"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 08:30PM 8121:12PM"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-32 08:30PM 10:12PM  "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event a /at 2020-10-23 08:30PM 10:12PM  "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadlineedasfa"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline awrfawesf"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline dads /by"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline efaws /by "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline /by 2020-10-22"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline/by 2020-10-22"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline dda /by 2020-22"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline dda /by 2020-10-22"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done asddqwad"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "done 324341"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete qfdsqf"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "delete 747"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "event dfgdg /at 2020-10-22"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "deadline dasd /by 2020-10-22"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "dateasdf"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date asdas"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date2020-24-22"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date 2020-2132"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date 2020-24-22"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date 2020-12-22"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "date 2020-10-22"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "find"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "find "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "findasdf"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "find argwf"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "find d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "today"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "claracheong4": 59
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "SET JAVA\u003d..\\src\\main\\java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "javac -cp \"%JAVA%\" -Xlint:none -d ..\\bin \"%JAVA%\\blue\\Duke.java\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "claracheong4"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "claracheong4"
        },
        "content": "java -classpath ..\\bin blue/Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "claracheong4": 6,
      "-": 18
    }
  }
]
