[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    mainClassName \u003d \"duke.main.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 17,
      "-": 44
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "T | 1 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "D | 1 | return book | 2020-12-31"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 2
    }
  },
  {
    "path": "src/main/java/duke/command/AddDeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for an operation involving adding of deadlines to a list of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class AddDeadlineCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new AddDeadlineCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param details Description of Deadline to create."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public AddDeadlineCommand(String details, TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(details, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Converts the given String of details into a Deadline to be added to the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Newly created Deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws MissingDateException If date is not provided."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidDateException If date provided is in the wrong format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected Task getTask() throws MissingDateException, InvalidDateException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return Deadline.create(details);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 34
    }
  },
  {
    "path": "src/main/java/duke/command/AddEventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for an operation involving adding of events to a list of task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class AddEventCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new AddEventCommand object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param details  Description of Event to create."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public AddEventCommand(String details, TaskList taskList) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(details, taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Converts the given String of details into an Event to be added to the TaskList."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Newly created Event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws MissingDateException If date is not provided."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidDateException If date provided is in the wrong format."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected Task getTask() throws MissingDateException, InvalidDateException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return Event.create(details);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 34
    }
  },
  {
    "path": "src/main/java/duke/command/AddTaskCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for an operation involving adding of tasks to a list of task."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public abstract class AddTaskCommand extends TaskListOperator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE_HEAD \u003d \"Got it, I have added this task:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE_MIDDLE \u003d \"\\nYou now have \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE_END \u003d \" task(s) in this list\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String DUPE_DETECTED \u003d \"This task already exists! \""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"Sorry, I don\u0027t do duplicates.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected final String details;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    AddTaskCommand(String details, TaskList taskList) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.details \u003d details;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Converts the given String of details into a task to be added to the TaskList."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Newly created task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws MissingDateException If date is not provided (if applicable)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidDateException If date provided is in the wrong format (if applicable)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected abstract Task getTask() throws MissingDateException, InvalidDateException;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Adds a task to the TaskList and returns a response."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The task is only added if it did not exist in the task list prior"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * (i.e. for all tasks x in the task list, x.equals(given task) \u003d false)."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Message detailing outcome of the task addition operation."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Task task \u003d getTask();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            if (taskList.contains(task)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return DUPE_DETECTED;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                taskList.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return MESSAGE_HEAD + task + MESSAGE_MIDDLE"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                        + taskList.size() + MESSAGE_END;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (InvalidDateException | MissingDateException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 56
    }
  },
  {
    "path": "src/main/java/duke/command/AddToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for an operation involving adding of todos to a list of task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class AddToDoCommand extends AddTaskCommand {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new AddToDoCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param details Description of task to create."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public AddToDoCommand(String details, TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(details, taskList);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Converts the given String of details into an ToDo to be added to the TaskList."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Newly created ToDo."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected Task getTask() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return ToDo.create(details);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 30
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for the bye command."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * This class saves the TaskList into a file before sending a farewell message."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class ByeCommand extends TaskListOperator {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String BYE \u003d \"All changes saved, hope to see you again!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new ByeCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param storage Storage to write to a file with."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public ByeCommand(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Saves the TaskList to a file and returns a farewell message."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Farewell message to be displayed on the GUI."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return BYE;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 36
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for a command parsed into Duke."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Performs the command and prints out a response indicating the outcome."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Message detailing outcome of operation."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidCommandException If invalid syntax is detected."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    String execute() throws InvalidCommandException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 16
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for the delete command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class DeleteCommand extends TaskListOperator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE_HEAD \u003d \"Noted, I have removed the below task:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE_MIDDLE \u003d \"\\nNow you have \";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE_END \u003d \" task(s) left\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final String number;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new DeleteCommand object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param number Index of task to delete."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public DeleteCommand(String number, TaskList taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Deletes a task at the given index on the TaskList (starting from 1)."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Message detailing the outcome of the deletion."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidCommandException If a number was not parsed into the command."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() throws InvalidCommandException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            int index \u003d Integer.parseInt(number) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Task deleted \u003d taskList.delete(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return MESSAGE_HEAD + deleted + MESSAGE_MIDDLE"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    + taskList.size() + MESSAGE_END;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 48
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for the done command."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class DoneCommand extends TaskListOperator {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE \u003d \"Well done! The following task is complete:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final String number;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new DoneCommand object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param number Index of task to be completed."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public DoneCommand(String number, TaskList taskList) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.number \u003d number;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Marks a task at the given index on the TaskList (starting from 1) as complete."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Message detailing the outcome of the operation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidCommandException If a number was not parsed into the command."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() throws InvalidCommandException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            int index \u003d Integer.parseInt(number) - 1;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Task done \u003d taskList.complete(index);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return MESSAGE + done;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (InvalidIndexException e) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 45
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for the find command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class FindCommand extends TaskListOperator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE \u003d \"The following task(s) match your search:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String NO_TASK_FOUND \u003d \"Sorry, there are no tasks that \""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"match your description!\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final String keyword;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new FindCommand object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param keyword Keyword to search for."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public FindCommand(String keyword, TaskList taskList) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Lists all tasks that contain a given keyword in their description."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return List of tasks that match the description, if any."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        TaskList searchResults \u003d taskList.find(keyword);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (searchResults.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return NO_TASK_FOUND;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return MESSAGE + searchResults;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 40
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for a help command parsed into Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * It displays all commands available to the user as well as the required syntax."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class HelpCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static final String COMMAND_LIST \u003d \"Welcome to Duke! The full list of \""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"commands are listed below:\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"1. bye - Saves all changes to the task list to the hard drive.\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"2. help - Displays all available commands.\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"3. done [task index] - Marks the task at the specified index as \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"complete.\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"4. list - Displays all tasks, regardless of completion status.\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"5. delete [task index] - Deletes the task at the specified index.\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"6. todo [task description] - Adds a new ToDo task to the task list.\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"7. event [task description] /at [event date] - Adds a new Event \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"task to the task list that matches the given details.\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"8. deadline [task description] /by [due date] - Adds a new Deadline \""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"task to the task list that matches the given details.\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"9. find [keyword] - Displays all tasks that contain the given keyword \""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"in their description.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Displays all available commands for Duke."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return List of all supported commands and operations."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return COMMAND_LIST;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstraction for the list command."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class ListCommand extends TaskListOperator {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static final String MESSAGE \u003d \"Here are the tasks in your list:\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new ListCommand object."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public ListCommand(TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Lists all tasks in the TaskList if any."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return List of all tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String execute() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return taskList.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return MESSAGE + taskList.toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 33
    }
  },
  {
    "path": "src/main/java/duke/command/TaskListOperator.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * An abstraction for a command parsed into Duke that operates on a task list."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * It supports various operations on the TaskList through"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * the \u003ccode\u003eexecute()\u003c/code\u003e method."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public abstract class TaskListOperator implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected final TaskList taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    TaskListOperator(TaskList taskList) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Performs the operation on the TaskList, then prints the response."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The response can either be success or a failure message."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Message detailing the outcome of the command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidCommandException If invalid syntax is given in the command."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public abstract String execute() throws InvalidCommandException;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 26
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * This exception is thrown when an invalid command is sent."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class InvalidCommandException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"I do not know what you mean, care to try again?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * This exception is thrown when an invalid date format is parsed."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class InvalidDateException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"Invalid date format detected!\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + \"Accepted formats: \u0027dd/MM/yyyy\u0027 or \u0027dd-MM-yyyy\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 12
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * This exception is thrown when a task at an invalid index is referenced."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class InvalidIndexException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"Fool, there is no task associated with this number!\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/MissingDateException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * This exception is thrown when a task creation command lacks a date field."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class MissingDateException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"Hey, you need to tell me the date for this.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 11
    }
  },
  {
    "path": "src/main/java/duke/exception/UnreadableSaveTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * This exception thrown when a file contains tasks in an unreadable format."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class UnreadableSaveTaskException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"This task is saved in an invalid format! Did you tamper with it?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 11
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing the Duke chat-bot."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Duke primarily keeps tracks of tasks, and supports various commands on the task list."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * It saves tasks to data/tasks.txt and reads the list upon being initialised."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static final String GREETING \u003d \"Hello, I\u0027m your chatbot!\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final Parser parser;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a Duke object that reads data from the default file path."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The file path is taken to be data/tasks.txt"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        Storage storage \u003d new Storage(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        TaskList taskList \u003d storage.getTasksFromFile();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.parser \u003d new Parser(storage, taskList);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return parser.parse(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /*"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        ui.run();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        storage.write(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 32,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Driver class to run the main method."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Runs Duke chat-bot."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * It first initialises by reading a saved list of tasks in data/tasks.txt."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param args Main method arguments."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 18
    }
  },
  {
    "path": "src/main/java/duke/main/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Main is a class that represents an application that houses the Duke chat-bot."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader("
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 32
    }
  },
  {
    "path": "src/main/java/duke/main/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.AddDeadlineCommand;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.AddEventCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.AddToDoCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Parser is a class used by Duke to interpret user inputs as commands."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final TaskList taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new Parser object."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param storage Storage for saving the TaskList to a file with."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList TaskList to be operated on."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public Parser(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Interprets user input and executes commands."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The method supports commands for adding, deleting, viewing and completing tasks."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * If invalid input is given, users are informed and told to try again."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param input User command in console."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Output message upon execution of command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String parse(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        switch (input) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return new ListCommand(taskList).execute();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return new ByeCommand(storage, taskList).execute();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return new HelpCommand().execute();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return operateOnTaskList(input);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Performs operations on the TaskList and returns a message detailing the outcome."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param input User command parsed into Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Response detailing outcome of operation."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private String operateOnTaskList(String input) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            String keyword \u003d extractCommand(input);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            switch (keyword) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return new DoneCommand(input.substring(5), taskList).execute();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return new DeleteCommand(input.substring(7), taskList).execute();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return new FindCommand(input.substring(5), taskList).execute();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return new AddToDoCommand(input.substring(5), taskList).execute();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return new AddEventCommand(input.substring(6), taskList).execute();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                return new AddDeadlineCommand(input.substring(9), taskList).execute();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                throw new InvalidCommandException();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (InvalidCommandException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return e.toString();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Returns the command word in the user input that is not \"list\" or \"bye\"."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * This is the first word in the input line."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param input User input."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return TaskListOperator word."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidCommandException If only one word was provided."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private String extractCommand(String input) throws InvalidCommandException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        int spaceIndex \u003d input.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (spaceIndex \u003c\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new InvalidCommandException();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return input.substring(0, spaceIndex);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 99
    }
  },
  {
    "path": "src/main/java/duke/main/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.BufferedWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * The Storage class represents a container that stores a file containing saved tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * It supports operations for reading and writing the save file."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new Storage object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param filePath Location of file to be read from and written to."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Reads a saved file and generates a TaskList from its contents."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * If the directory or file is missing, a new empty text file is generated with its"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * parent directory."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return TaskList representing all the tasks in the saved file (if any)."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    TaskList getTasksFromFile() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        File dir \u003d new File(file.getParent());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            if (dir.mkdir()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                System.out.println(\"Setting up file paths...\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            if (file.createNewFile()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                System.out.println(\"Uh oh, I couldn\u0027t find any saved tasks, \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                        + \"so I just made a new save for you!\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new TaskList(file);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Writes the contents of a given TaskList to its saved file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * This method will overwrite the contents of the file upon being called."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param taskList List of tasks to be written and saved to a file."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void writeToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            FileWriter writer \u003d new FileWriter(file.getPath());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            BufferedWriter bufferedWriter \u003d new BufferedWriter(writer);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            bufferedWriter.write(taskList.toSaveFormat());"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            bufferedWriter.close();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 63
    }
  },
  {
    "path": "src/main/java/duke/main/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidIndexException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.UnreadableSaveTaskException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing a list of tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * It supports operations for removing, completing, adding and searching for tasks."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Constructs a new TaskList object by reading the data in the given saved file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param file File representing location of the saved tasks."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public TaskList(File file) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.tasks \u003d initTasks(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        assert (tasks !\u003d null) : \"Tasks not initialised\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Generates a list of tasks from a file\u0027s contents."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The method reads each line of the file representing a task and converts it into its"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * respective Task object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param file File to be read from."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return List of all Task objects saved in the file."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static List\u003cTask\u003e initTasks(File file) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        assert file.exists() : \"Save file should have been created\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Scanner sc \u003d new Scanner(file);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            while (sc.hasNext()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                String current \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                String[] strings \u003d current.split(\" \\\\| \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                Task task \u003d getTaskFromLine(strings);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                if (task !\u003d null) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private static Task getTaskFromLine(String[] data) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Task task;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            switch (data[0]) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                task \u003d ToDo.createFromFile(data);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                task \u003d Deadline.createFromFile(data);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                task \u003d Event.createFromFile(data);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                throw new UnreadableSaveTaskException();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            if (data[1].equals(\"1\")) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                task.setDone();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return task;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (UnreadableSaveTaskException e) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Formats TaskList into a string to be written in a file."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return String representation of a saved TaskList."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toSaveFormat() {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return \"\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            stringBuilder.append(task.toDataString())"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    .append(System.lineSeparator());"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return stringBuilder.toString();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Adds a new Task to the list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param task New task to be added."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Removes a Task object from the list at the specified index."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param index Position on the TaskList representing the element to be removed."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Deleted Task object represented by the specified index."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidIndexException If index lies outside the boundaries of the list."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public Task delete(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return tasks.remove(index);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Marks a Task object in the list at the specified index as done."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param index Position on the TaskList representing element to be marked done."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Completed Task object represented by the specified index."
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidIndexException If index lies outside boundaries of the list."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public Task complete(int index) throws InvalidIndexException {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d tasks.size()) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new InvalidIndexException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        Task task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        task.setDone();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Returns a TaskList containing all tasks with a given keyword in the description."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param search Keyword to filter tasks by."
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return TaskList containing all tasks that match the keyword."
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public TaskList find(String search) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        List\u003cTask\u003e filtered \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            if (task.contains(search)) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                filtered.add(task);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new TaskList(filtered);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Returns true if and only if the task exists in the list."
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param task Task to be detected in the task list."
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return True if the task exists in the list, false otherwise."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public boolean contains(Task task) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return tasks.contains(task);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Returns the length of the list of Tasks."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Length of TaskList contents."
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (tasks.isEmpty()) {"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return \"You have no tasks\";"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        StringBuilder list \u003d new StringBuilder();"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        int number \u003d 1;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            list.append(String.format(\"%d.\", number++))"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    .append(task)"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    .append(System.lineSeparator());"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return list.toString();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 206
    }
  },
  {
    "path": "src/main/java/duke/task/DateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "enum DateFormat {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    FORMAT1(\"d-M-yy\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    FORMAT2(\"d/M/yy\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    FORMAT3(\"d-M-yyyy\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    FORMAT4(\"d/M/yyyy\"),"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    FORMAT5(\"d MMM yyyy\"),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    FORMAT6(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final String pattern;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    DateFormat(String pattern) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.pattern \u003d pattern;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static LocalDate getLocalDate(String date) throws InvalidDateException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        LocalDate out \u003d null;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        for (DateFormat format : DateFormat.values()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                out \u003d LocalDate.parse(date, format.toDateFormat());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            } catch (DateTimeParseException ignored) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                // This date format does not work, better try the next."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (out \u003d\u003d null) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new InvalidDateException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return out;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Converts the DateFormat into a DateTimeFormatter. This is used"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * for parsing into LocalDate objects."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return DateTimeFormatter representing the DateFormat."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    DateTimeFormatter toDateFormat() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.UnreadableSaveTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing a deadline task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * A deadline task has a description containing the details of the task and"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * a date by which the task is due."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final LocalDate dueDate;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Deadline(String description, LocalDate dueDate) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a new Deadline object represented by the given command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The command is split into two parts by the \" /by \" delimiter, with the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * first being the task description and the second being the due date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param task Description of task to be converted to a Deadline."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Deadline object representing the given description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws MissingDateException If \" /by \" is not given or if there is no date provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidDateException If the date provided is in the wrong format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static Deadline create(String task)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throws MissingDateException, InvalidDateException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String[] taskInfo \u003d task.split(\" /by \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (taskInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new MissingDateException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        LocalDate date \u003d DateFormat.getLocalDate(taskInfo[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new Deadline(taskInfo[0], date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a new Deadline object represented by its String when read from a file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The read string, when split with the \u0027/\u0027 regex, must produce an array of length"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * 4 in the form \u003ccode\u003e[E, {isDone indicator}, {description}, {deadline}]\u003c/code\u003e."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param data Description of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Deadline object representing the given details."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws UnreadableSaveTaskException If data does not have length 4"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static Deadline createFromFile(String[] data)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throws UnreadableSaveTaskException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (data.length !\u003d 4) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new UnreadableSaveTaskException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        DateTimeFormatter format \u003d DateFormat.FORMAT6.toDateFormat();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new Deadline(data[2], LocalDate.parse(data[3], format));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"D | \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + (isDone ? 1 : 0) + \" | \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + this.description + \" | \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + this.dueDate;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String dateTime \u003d dueDate.format(DateFormat.FORMAT5.toDateFormat());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else if (obj instanceof Deadline) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return description.equals(((Deadline) obj).description)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    \u0026\u0026 dueDate.equals(((Deadline) obj).dueDate);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 88
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.UnreadableSaveTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing an event task."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * It consists of a description containing information on the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * and a date representing when the event is to occur."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a new Event object represented by the given command."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The command is split into two parts by the \" /at \" delimiter, with the"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * first being the task description and the second being the event date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param task Description of task to be converted to a Event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Event object representing the given description."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws MissingDateException If \" /at \" is not given or if there is no date provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws InvalidDateException If the date provided is in the wrong format."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static Event create(String task)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throws MissingDateException, InvalidDateException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String[] taskInfo \u003d task.split(\" /at \", 2);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (taskInfo.length \u003c 2) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new MissingDateException();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        LocalDate date \u003d DateFormat.getLocalDate(taskInfo[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new Event(taskInfo[0], date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a new Event object represented by its String when read from a file."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The read string, when split with the \u0027/\u0027 regex, must produce an array of length"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * 4 in the form \u003ccode\u003e[E, {isDone indicator}, {description}, {event date}]\u003c/code\u003e."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param data Description of task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Event object representing the given details."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws UnreadableSaveTaskException If data does not have length 4."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static Event createFromFile(String[] data)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throws UnreadableSaveTaskException {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (data.length !\u003d 4) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new UnreadableSaveTaskException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        DateTimeFormatter format \u003d DateFormat.FORMAT6.toDateFormat();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new Event(data[2], LocalDate.parse(data[3], format));"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"E | \""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + (isDone ? 1 : 0) + \" | \""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + this.description + \" | \""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + this.date;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String dateTime \u003d date.format(DateFormat.FORMAT5.toDateFormat());"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + dateTime + \")\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else if (obj instanceof Event) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return description.equals(((Event) obj).description)"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    \u0026\u0026 date.equals(((Event) obj).date);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 88
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Abstract class representing a task item."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * A task contains a description as well as a flag of whether it has been completed."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected final String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String getStatus() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return isDone ? \"[\\u2713] \" : \"[\\u2718] \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Returns string representation of task to be written to a file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return String representation of the Task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public abstract String toDataString();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Checks if the task description contains a given keyword."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param keyword Keyword to be compared with task description."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return True if and only if the keyword can be found within the description."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return getStatus() + description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 44
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.UnreadableSaveTaskException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing a generic task with no dates attached."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private ToDo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a ToDo object representing the given command."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param task TaskListOperator describing the ToDo to be created."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return ToDo object representing the task description."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static ToDo create(String task) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new ToDo(task);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a new ToDo object represented by its String when read from a file."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * The read string, when split with the \u0027/\u0027 regex, must produce an array of length"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * 3 in the form \u003ccode\u003e[E, {isDone indicator}, {description}]\u003c/code\u003e."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param data Description of task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return Event object representing the given details."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @throws UnreadableSaveTaskException If data does not have length 3."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static ToDo createFromFile(String[] data)"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throws UnreadableSaveTaskException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (data.length !\u003d 3) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            throw new UnreadableSaveTaskException();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new ToDo(data[2]);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toDataString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"T | \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + (isDone ? 1 : 0) + \" | \""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                + this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        if (obj \u003d\u003d this) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else if (obj instanceof ToDo) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return description.equals(((ToDo) obj).description);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 63
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing a GUI box that contains a textbox and an image avatar."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * DialogBoxes sent by the user have their avatar on the right, while those"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * representing Duke\u0027s response have its avatar on the left instead."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        dialog.setPadding(new Insets(10));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a DialogBox item representing a command sent by a user."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param text User input."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param img User avatar."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return DialogBox object containing the user\u0027s input and avatar."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * Creates a DialogBox item representing a response from Duke."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param text Duke\u0027s response."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @param img Duke\u0027s avatar."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     * @return DialogBox object containing the Duke\u0027s avatar and response."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        DialogBox db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public static DialogBox getDukeGreeting(Image img) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        DialogBox db \u003d new DialogBox(Duke.GREETING, img);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 79
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.main.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " * Class representing the overall shape of the GUI."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/user.jpg\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/duke.png\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        greet();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private void greet() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeGreeting(dukeImage));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        );"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 54
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003cfx:root alignment\u003d\"CENTER_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" minHeight\u003d\"-Infinity\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"50.0\" fitWidth\u003d\"50.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 17
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 21
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void factoryMethods_success() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String command1 \u003d \"test /by 2/8/20\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String command2 \u003d \"test\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String command3 \u003d \"2020-08-02\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String[] data \u003d new String[]{\"D\", \"0\", command2, command3};"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            assertEquals(Deadline.create(command1), Deadline.createFromFile(data));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void print_success() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            Deadline test \u003d Deadline.create(\"test /by 9-12-10\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            test.setDone();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            assertEquals(\"D | 1 | test | 2010-12-09\", test.toDataString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 34
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertNull;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.InvalidDateException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.MissingDateException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void factoryMethod_invalidDate_exceptionThrown() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            assertNull(Event.create(\"test /at 2 9 12\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (InvalidDateException e) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            assertEquals(\"Invalid date format detected!\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "                    + \"Accepted formats: \u0027dd/MM/yyyy\u0027 or \u0027dd-MM-yyyy\", e.toString());"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (MissingDateException e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 26
    }
  },
  {
    "path": "src/test/java/duke/task/ToDoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "import duke.exception.UnreadableSaveTaskException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "public class ToDoTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    public void factoryMethod_success() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        String[] data \u003d new String[]{\"T\", \"0\", \"test event\"};"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            assertEquals(ToDo.createFromFile(data), ToDo.create(\"test event\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        } catch (UnreadableSaveTaskException e) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "StopTakingAllTheNames"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "StopTakingAllTheNames": 21
    }
  }
]
