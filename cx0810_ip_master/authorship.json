[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by:\" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static ArrayList\u003cTask\u003e items;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        getUserInput();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static void getUserInput() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        boolean exit \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String userInput;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        while (!exit) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            lineBreak();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (userInput.equals(Instruction.BYE.getInstruction())) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                exit \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                exit();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            } else if (userInput.equals(Instruction.LIST.getInstruction())) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                displayList();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                String[] inputArr \u003d userInput.split(\" \");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    if (inputArr[0].equals(Instruction.DONE.getInstruction())) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        int itemsIdx \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        markAsDone(itemsIdx);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    } else if (inputArr[0].equals(Instruction.DELETE.getInstruction())) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        int itemsIdx \u003d Integer.parseInt(inputArr[1]) - 1;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        deleteItem(itemsIdx);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                        addItem(userInput);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                    System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public static void greeting() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\" + \"\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public static void exit(){"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static void displayList() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        for (Task t : items) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            index++;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static void addItem(String input) throws DukeException {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String[] inputArr \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String taskType \u003d inputArr[0];"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String taskDescription \u003d inputArr[1];"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        Task newTask;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (taskType.equals(Instruction.TODO.getInstruction())){"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (taskDescription.equals(Instruction.EMPTY.getInstruction())) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid name for To Do\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            newTask \u003d new Todo(taskDescription);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else if (taskType.equals(Instruction.DEADLINE.getInstruction())) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String[] deadlineArr \u003d taskDescription.split(\"/by\", 2);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (deadlineArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid name and date for the Deadline\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String deadlineName \u003d deadlineArr[0];"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String deadlineDate \u003d deadlineArr[1];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (deadlineDate.equals(Instruction.EMPTY.getInstruction())) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid date for the Deadline\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            newTask \u003d new Deadline(deadlineName, deadlineDate);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else if (taskType.equals(Instruction.EVENT.getInstruction())) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String[] eventArr \u003d taskDescription.split(\"/at\", 2);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (eventArr.length !\u003d 2) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid name and date for the Event\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String eventName \u003d eventArr[0];"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            String eventDuration \u003d eventArr[1];"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            if (eventDuration.equals(Instruction.EMPTY.getInstruction())) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "cx0810"
        },
        "content": "                throw new DukeException(\"Please key in a valid duration for the Event\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            newTask \u003d new Event(eventName, eventDuration);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        items.add(newTask);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String taskText \u003d \"Got it. I\u0027ve added this task:\" + \"\\n\" + newTask + \"\\n\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        String totalText \u003d \"Now you have \" + items.size() + \" tasks in the list\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        System.out.println(taskText + totalText);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static void deleteItem(int itemsIdx) throws DukeException{"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (itemsIdx \u003c 0 || itemsIdx \u003e items.size() - 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"Sorry, the task does not exist\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.out.println(\"Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.out.println(items.get(itemsIdx));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            items.remove(itemsIdx);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.out.println(\"Now you have \" + items.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static void markAsDone(int itemsIdx) throws DukeException{"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        if (itemsIdx \u003c 0 || itemsIdx \u003e items.size() - 1) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            throw new DukeException(\"Sorry, the task does not exist\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            items.get(itemsIdx).setDone();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "cx0810"
        },
        "content": "            System.out.println(items.get(itemsIdx));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private static void lineBreak() {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        System.out.println(\"---\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 132,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DukeException(String msg) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(msg);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"\\uD83D\\uDE40\" + \"OOPS!!! \" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[E]\" + super.toString() + \"(at:\" + at + \")\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 13
    }
  },
  {
    "path": "src/main/java/Instruction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public enum Instruction {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    DEADLINE(\"deadline\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    EMPTY(\"\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    private final String i;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    Instruction(String i) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.i \u003d i;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getInstruction() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return this.i;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 19
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 24
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "cx0810"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "cx0810": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "cx0810"
        },
        "content": "todo study"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "cx0810"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "cx0810"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "cx0810"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "cx0810"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "cx0810"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "cx0810"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "cx0810"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "cx0810"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "cx0810": 9
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "cx0810"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "cx0810"
        },
        "content": "# cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "cx0810"
        },
        "content": "# dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "cx0810"
        },
        "content": "# diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "cx0810"
        },
        "content": "diff ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 34,
      "cx0810": 5
    }
  }
]
