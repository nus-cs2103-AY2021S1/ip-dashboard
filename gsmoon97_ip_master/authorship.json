[{"path":"build.gradle","fileType":"gradle","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"plugins {"},{"lineNumber":2,"author":{"gitId":"-"},"content":"    id \u0027java\u0027"},{"lineNumber":3,"author":{"gitId":"-"},"content":"    id \u0027application\u0027"},{"lineNumber":4,"author":{"gitId":"-"},"content":"    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"    id \u0027checkstyle\u0027"},{"lineNumber":6,"author":{"gitId":"-"},"content":"}"},{"lineNumber":7,"author":{"gitId":"-"},"content":""},{"lineNumber":8,"author":{"gitId":"-"},"content":"repositories {"},{"lineNumber":9,"author":{"gitId":"-"},"content":"    mavenCentral()"},{"lineNumber":10,"author":{"gitId":"-"},"content":"}"},{"lineNumber":11,"author":{"gitId":"-"},"content":""},{"lineNumber":12,"author":{"gitId":"-"},"content":"dependencies {"},{"lineNumber":13,"author":{"gitId":"-"},"content":"    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"},{"lineNumber":14,"author":{"gitId":"-"},"content":"    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"    String javaFxVersion \u003d \u002711\u0027"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"},{"lineNumber":30,"author":{"gitId":"-"},"content":"}"},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"-"},"content":"test {"},{"lineNumber":33,"author":{"gitId":"-"},"content":"    useJUnitPlatform()"},{"lineNumber":34,"author":{"gitId":"-"},"content":""},{"lineNumber":35,"author":{"gitId":"-"},"content":"    testLogging {"},{"lineNumber":36,"author":{"gitId":"-"},"content":"        events \"passed\", \"skipped\", \"failed\""},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"        showExceptions true"},{"lineNumber":39,"author":{"gitId":"-"},"content":"        exceptionFormat \"full\""},{"lineNumber":40,"author":{"gitId":"-"},"content":"        showCauses true"},{"lineNumber":41,"author":{"gitId":"-"},"content":"        showStackTraces true"},{"lineNumber":42,"author":{"gitId":"-"},"content":"        showStandardStreams \u003d false"},{"lineNumber":43,"author":{"gitId":"-"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"-"},"content":"}"},{"lineNumber":45,"author":{"gitId":"-"},"content":""},{"lineNumber":46,"author":{"gitId":"-"},"content":"application {"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"    mainClassName \u003d \"luke.Launcher\""},{"lineNumber":48,"author":{"gitId":"-"},"content":"}"},{"lineNumber":49,"author":{"gitId":"-"},"content":""},{"lineNumber":50,"author":{"gitId":"-"},"content":"shadowJar {"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"    archiveBaseName \u003d \"luke\""},{"lineNumber":52,"author":{"gitId":"-"},"content":"    archiveClassifier \u003d null"},{"lineNumber":53,"author":{"gitId":"-"},"content":"}"},{"lineNumber":54,"author":{"gitId":"-"},"content":""},{"lineNumber":55,"author":{"gitId":"-"},"content":"checkstyle {"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"    toolVersion \u003d \u00278.29\u0027"},{"lineNumber":57,"author":{"gitId":"-"},"content":"}"},{"lineNumber":58,"author":{"gitId":"-"},"content":""},{"lineNumber":59,"author":{"gitId":"-"},"content":"run{"},{"lineNumber":60,"author":{"gitId":"-"},"content":"    standardInput \u003d System.in"},{"lineNumber":61,"author":{"gitId":"-"},"content":"}"}],"authorContributionMap":{"-":42,"gsmoon97":19}},{"path":"docs/README.md","fileType":"md","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"# User Guide"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":"Luke is the **go-to desktop app for managing tasks, deadlines, and events**. Optimized for use via a Command Line Interface (CLI) while still having the benefits of a user-friendly Graphical User Interface (GUI), Luke guarantees easy and convenient user experience."},{"lineNumber":3,"author":{"gitId":"-"},"content":""},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"* Quick start"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"* Features"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"    * Adding new tasks : "},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"        1. `todo`"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"        2. `deadline`"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"        3. `event`"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"    * Deleting tasks : `delete`"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    * Marking tasks as done : `done`"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    * Listing out current tasks : `list`"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    * Finding specific tasks : `find`"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"## Quick start"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"1. Ensure you have Java `11` or above installed in your Computer."},{"lineNumber":17,"author":{"gitId":"-"},"content":""},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"2. Download the latest `luke.jar` from here."},{"lineNumber":19,"author":{"gitId":"-"},"content":""},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"3. Copy the file to the folder you want to use as the home folder for your `Luke`."},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"4. Double-click the file to start the app. The GUI with a welcome message from Luke should appear in a few seconds."},{"lineNumber":23,"author":{"gitId":"-"},"content":""},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"5. Type the command in the command box and press Enter to execute it. "},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"e.g. typing `list` and pressing Enter will list out the current tasks."},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"Some example commands you can try:"},{"lineNumber":27,"author":{"gitId":"-"},"content":""},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    * **`list`** : Lists out all current tasks."},{"lineNumber":29,"author":{"gitId":"-"},"content":""},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"    * **`todo`** `eat fried chicken` : Adds a task named `eat fried chicken` to Luke."},{"lineNumber":31,"author":{"gitId":"-"},"content":""},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"    * **`delete`** `3` : Deletes the 3rd task shown in the current list."},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"    * **`bye`** : Exits the app."},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"6. Refer to the Features below for details of each command."},{"lineNumber":37,"author":{"gitId":"-"},"content":""},{"lineNumber":38,"author":{"gitId":"-"},"content":"## Features"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"\u003e Notes about the command format:"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"\u003e"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"\u003e * Words in UPPER_CASE are the parameters to be supplied by the user."},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"\u003e   e.g. in `todo DESCRIPTION`, `DESCRIPTION` is a parameter which can be used as `todo eat fried chicken`."},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"\u003e"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"\u003e * `DATE` parameter must be provided in the following format : `YYYY-MM-DD` "},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"\u003e   e.g. 2020-02-02"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"\u003e * Items with `...` after them can be used multiple times including one time."},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"    e.g. `delete NUMBER...` can be used as   (i.e. 3 times), `delete 3, 5, 1`"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"\u003e"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"### Adding new tasks : `todo`"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"Adds a new task to the current list."},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"Format : `todo DESCRIPTION`"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"Example of usage :"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"todo eat fried chicken"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"Expected outcome : "},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"The following task has been successfully added."},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"-\u003e [T][X] eat fried chicken"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"Now you have 1 task in your list."},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"### Adding new tasks : `deadline`"},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"Adds a new deadline to the current list."},{"lineNumber":69,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":70,"author":{"gitId":"gsmoon97"},"content":"Format : `deadline DESCRIPTION /by DATE`"},{"lineNumber":71,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":72,"author":{"gitId":"gsmoon97"},"content":"Example of usage :"},{"lineNumber":73,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":74,"author":{"gitId":"gsmoon97"},"content":"deadline do laundry /by 2020-02-02"},{"lineNumber":75,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":76,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":77,"author":{"gitId":"gsmoon97"},"content":"Expected outcome : "},{"lineNumber":78,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":79,"author":{"gitId":"gsmoon97"},"content":"The following task has been successfully added."},{"lineNumber":80,"author":{"gitId":"gsmoon97"},"content":"-\u003e [D][X] do laundry (by: Feb 2, 2020)"},{"lineNumber":81,"author":{"gitId":"gsmoon97"},"content":"Now you have 2 tasks in your list."},{"lineNumber":82,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":83,"author":{"gitId":"-"},"content":""},{"lineNumber":84,"author":{"gitId":"gsmoon97"},"content":"### Adding new tasks : `event`"},{"lineNumber":85,"author":{"gitId":"gsmoon97"},"content":"Adds a new deadline to the current list."},{"lineNumber":86,"author":{"gitId":"-"},"content":""},{"lineNumber":87,"author":{"gitId":"gsmoon97"},"content":"Format : `event DESCRIPTION /at DATE`"},{"lineNumber":88,"author":{"gitId":"-"},"content":""},{"lineNumber":89,"author":{"gitId":"gsmoon97"},"content":"Examples of usage :"},{"lineNumber":90,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":91,"author":{"gitId":"gsmoon97"},"content":"event practice guitar /at 2020-03-03"},{"lineNumber":92,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":93,"author":{"gitId":"-"},"content":""},{"lineNumber":94,"author":{"gitId":"gsmoon97"},"content":"Expected outcome : "},{"lineNumber":95,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":96,"author":{"gitId":"gsmoon97"},"content":"The following task has been successfully added."},{"lineNumber":97,"author":{"gitId":"gsmoon97"},"content":"-\u003e [E][X] practice guitar (at: March 3, 2020)"},{"lineNumber":98,"author":{"gitId":"gsmoon97"},"content":"Now you have 3 tasks in your list."},{"lineNumber":99,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":100,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":101,"author":{"gitId":"gsmoon97"},"content":"### Deleting tasks : `delete`"},{"lineNumber":102,"author":{"gitId":"gsmoon97"},"content":"Deletes a task(or tasks) from the current list."},{"lineNumber":103,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":104,"author":{"gitId":"gsmoon97"},"content":"Format : `delete NUMBER...`"},{"lineNumber":105,"author":{"gitId":"-"},"content":""},{"lineNumber":106,"author":{"gitId":"-"},"content":"Example of usage :"},{"lineNumber":107,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":108,"author":{"gitId":"gsmoon97"},"content":"delete 2"},{"lineNumber":109,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":110,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":111,"author":{"gitId":"gsmoon97"},"content":"Expected outcome : "},{"lineNumber":112,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":113,"author":{"gitId":"gsmoon97"},"content":"The following task has been successfully deleted."},{"lineNumber":114,"author":{"gitId":"gsmoon97"},"content":"-\u003e [D][X] do laundry (by: Feb 2, 2020)"},{"lineNumber":115,"author":{"gitId":"gsmoon97"},"content":"Now you have 2 tasks in your list."},{"lineNumber":116,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":117,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":118,"author":{"gitId":"gsmoon97"},"content":"### Marking tasks as done : `done`"},{"lineNumber":119,"author":{"gitId":"gsmoon97"},"content":"Marks a task(or tasks) from the current list as done."},{"lineNumber":120,"author":{"gitId":"-"},"content":""},{"lineNumber":121,"author":{"gitId":"gsmoon97"},"content":"Format : `done NUMBER...`"},{"lineNumber":122,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":123,"author":{"gitId":"gsmoon97"},"content":"Example of usage :"},{"lineNumber":124,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":125,"author":{"gitId":"gsmoon97"},"content":"done 1"},{"lineNumber":126,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":127,"author":{"gitId":"-"},"content":""},{"lineNumber":128,"author":{"gitId":"-"},"content":"Expected outcome :"},{"lineNumber":129,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":130,"author":{"gitId":"gsmoon97"},"content":"The following task has been successfully marked as done."},{"lineNumber":131,"author":{"gitId":"gsmoon97"},"content":"-\u003e [T][V] eat fried chicken"},{"lineNumber":132,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":133,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":134,"author":{"gitId":"gsmoon97"},"content":"### Listing out current tasks : `list`"},{"lineNumber":135,"author":{"gitId":"gsmoon97"},"content":"Lists out all the current tasks."},{"lineNumber":136,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":137,"author":{"gitId":"gsmoon97"},"content":"Format : `list`"},{"lineNumber":138,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":139,"author":{"gitId":"gsmoon97"},"content":"Example of usage :"},{"lineNumber":140,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":141,"author":{"gitId":"gsmoon97"},"content":"list"},{"lineNumber":142,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":143,"author":{"gitId":"-"},"content":""},{"lineNumber":144,"author":{"gitId":"gsmoon97"},"content":"Expected outcome : "},{"lineNumber":145,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":146,"author":{"gitId":"gsmoon97"},"content":"Here are the tasks in your list."},{"lineNumber":147,"author":{"gitId":"gsmoon97"},"content":"-\u003e 1.[T][V] eat fried chicken"},{"lineNumber":148,"author":{"gitId":"gsmoon97"},"content":"-\u003e 2. [E][X] practice guitar (at: March 3, 2020)"},{"lineNumber":149,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":150,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":151,"author":{"gitId":"gsmoon97"},"content":"### Finding specific tasks : `find`"},{"lineNumber":152,"author":{"gitId":"gsmoon97"},"content":"Finds specific tasks that matches the given keyword."},{"lineNumber":153,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":154,"author":{"gitId":"gsmoon97"},"content":"Format : `find KEYWORD`"},{"lineNumber":155,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":156,"author":{"gitId":"gsmoon97"},"content":"Example of usage :"},{"lineNumber":157,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":158,"author":{"gitId":"gsmoon97"},"content":"find chicken"},{"lineNumber":159,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":160,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":161,"author":{"gitId":"gsmoon97"},"content":"Expected outcome : "},{"lineNumber":162,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":163,"author":{"gitId":"gsmoon97"},"content":"Here are the tasks that contain the keyword \u0027chicken\u0027"},{"lineNumber":164,"author":{"gitId":"gsmoon97"},"content":"-\u003e [T][V] eat fried chicken"},{"lineNumber":165,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":166,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":167,"author":{"gitId":"gsmoon97"},"content":"### Exiting the program : `bye`"},{"lineNumber":168,"author":{"gitId":"gsmoon97"},"content":"Exits the program immediately."},{"lineNumber":169,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":170,"author":{"gitId":"gsmoon97"},"content":"Format : `bye`"},{"lineNumber":171,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":172,"author":{"gitId":"gsmoon97"},"content":"Example of usage :"},{"lineNumber":173,"author":{"gitId":"gsmoon97"},"content":"```"},{"lineNumber":174,"author":{"gitId":"gsmoon97"},"content":"bye"},{"lineNumber":175,"author":{"gitId":"gsmoon97"},"content":"```"}],"authorContributionMap":{"-":22,"gsmoon97":153}},{"path":"src/main/java/luke/Launcher.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import javafx.application.Application;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":" * A launcher class to workaround classpath issues."},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"public class Launcher {"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"    public static void main(String[] args) {"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"        Application.launch(Main.class, args);"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":12}},{"path":"src/main/java/luke/Luke.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.Command;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":" * Represents Luke object that executes commands from the user."},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"public class Luke {"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    private final Storage storage;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    private TaskList tasks;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    private final Ui ui;"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"     * Creates a Luke object with the given filepath."},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"     * @param filePath path of the data file that contains the current list of tasks"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    public Luke(String filePath) {"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"        this.storage \u003d new Storage(filePath);"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"            this.tasks \u003d new TaskList(storage.load());"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"        } catch (LukeException e) {"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"            this.tasks \u003d new TaskList();"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"        this.ui \u003d new Ui();"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"     * Executes user input and returns a response."},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"     * @param input user input"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"     * @return appropriate response to user input"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"    public String getResponse(String input) {"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"            Command command \u003d Parser.parseCommand(input);"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"            return command.execute(this.storage, this.tasks, this.ui);"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"        } catch (LukeException e) {"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"            return ui.showError(e);"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"    public Ui getUi() {"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"        return this.ui;"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":48}},{"path":"src/main/java/luke/Main.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import javafx.application.Application;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.Scene;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.paint.ImagePattern;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"import javafx.stage.Stage;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import luke.gui.MainWindow;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":" * A GUI for Luke using FXML."},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"public class Main extends Application {"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    private final Luke luke \u003d new Luke(System.getProperty(\"user.dir\"));"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    public void start(Stage stage) {"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"            AnchorPane ap \u003d fxmlLoader.load();"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"            Scene scene \u003d new Scene(ap);"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"            stage.setScene(scene);"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"            stage.setTitle(\"Luke the Skytalker\");"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"            fxmlLoader.\u003cMainWindow\u003egetController().greet(luke);"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"            stage.show();"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"        } catch (IOException e) {"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"            e.printStackTrace();"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":35}},{"path":"src/main/java/luke/Parser.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.time.LocalDate;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import java.util.ArrayList;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.AddCommand;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.Command;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.DeleteCommand;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.DoneCommand;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.ExitCommand;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.FindCommand;"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"import luke.commands.ListCommand;"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeDateTimeException;"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeEmptyCommandException;"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeLoadingDataException;"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeUnknownCommandException;"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Deadline;"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Event;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Todo;"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":" * Represents a Parser to interpret task and command."},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"public class Parser {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"     * Parses a line that contains information about a task"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"     * to generate the corresponding task."},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"     * @param taskStr the line that contains information about a task"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"     * @return the corresponding task"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"     * @throws LukeLoadingDataException If fails to load data"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"    public static Task parseTask(String taskStr) throws LukeLoadingDataException {"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"        assert taskStr.equals(\"\") : \"Task should not be empty.\";"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"        String[] taskDetails \u003d taskStr.split(\"\\\\|\");"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"        Task parsedTask;"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"        switch (taskDetails[0]) {"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"        case \"T\":"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"            parsedTask \u003d new Todo(taskDetails[2]);"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"            break;"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"        case \"D\":"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"            parsedTask \u003d new Deadline(taskDetails[2], LocalDate.parse(taskDetails[3]));"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"            break;"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"        case \"E\":"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"            parsedTask \u003d new Event(taskDetails[2], LocalDate.parse(taskDetails[3]));"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"            break;"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"        default:"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeLoadingDataException(\"loading data\");"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"        if (taskDetails[1].equals(\"1\")) {"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"            parsedTask.markAsDone();"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"        return parsedTask;"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"     * Parses user input that contains information about a command"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"     * to generate the corresponding command."},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"     * @param input the input from the user"},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"     * @return the corresponding command"},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"     * @throws LukeException if command is given in incorrect format"},{"lineNumber":69,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":70,"author":{"gitId":"gsmoon97"},"content":"    public static Command parseCommand(String input) throws LukeException {"},{"lineNumber":71,"author":{"gitId":"gsmoon97"},"content":"        assert input.equals(\"\") : \"User input should not be empty.\";"},{"lineNumber":72,"author":{"gitId":"gsmoon97"},"content":"        String[] commandSplit \u003d input.trim().split(\" \", 2);"},{"lineNumber":73,"author":{"gitId":"gsmoon97"},"content":"        String commandType \u003d commandSplit[0].trim();"},{"lineNumber":74,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":75,"author":{"gitId":"gsmoon97"},"content":"            switch (commandType) {"},{"lineNumber":76,"author":{"gitId":"gsmoon97"},"content":"            case \"list\":"},{"lineNumber":77,"author":{"gitId":"gsmoon97"},"content":"                return new ListCommand();"},{"lineNumber":78,"author":{"gitId":"gsmoon97"},"content":"            case \"todo\":"},{"lineNumber":79,"author":{"gitId":"gsmoon97"},"content":"                return parseTodoCommand(commandSplit);"},{"lineNumber":80,"author":{"gitId":"gsmoon97"},"content":"            case \"deadline\":"},{"lineNumber":81,"author":{"gitId":"gsmoon97"},"content":"                return parseDeadlineCommand(commandSplit);"},{"lineNumber":82,"author":{"gitId":"gsmoon97"},"content":"            case \"event\":"},{"lineNumber":83,"author":{"gitId":"gsmoon97"},"content":"                return parseEventCommand(commandSplit);"},{"lineNumber":84,"author":{"gitId":"gsmoon97"},"content":"            case \"delete\":"},{"lineNumber":85,"author":{"gitId":"gsmoon97"},"content":"                return parseDeleteCommand(commandSplit);"},{"lineNumber":86,"author":{"gitId":"gsmoon97"},"content":"            case \"done\":"},{"lineNumber":87,"author":{"gitId":"gsmoon97"},"content":"                return parseDoneCommand(commandSplit);"},{"lineNumber":88,"author":{"gitId":"gsmoon97"},"content":"            case \"find\":"},{"lineNumber":89,"author":{"gitId":"gsmoon97"},"content":"                return parseFindCommand(commandSplit);"},{"lineNumber":90,"author":{"gitId":"gsmoon97"},"content":"            case \"bye\":"},{"lineNumber":91,"author":{"gitId":"gsmoon97"},"content":"                return new ExitCommand();"},{"lineNumber":92,"author":{"gitId":"gsmoon97"},"content":"            default:"},{"lineNumber":93,"author":{"gitId":"gsmoon97"},"content":"                throw new LukeUnknownCommandException(commandType);"},{"lineNumber":94,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":95,"author":{"gitId":"gsmoon97"},"content":"        } catch (LukeException e) {"},{"lineNumber":96,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeException(e.getMessage());"},{"lineNumber":97,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":98,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":100,"author":{"gitId":"gsmoon97"},"content":"    private static Command parseTodoCommand(String[] commandSplit) throws LukeEmptyCommandException {"},{"lineNumber":101,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":102,"author":{"gitId":"gsmoon97"},"content":"            String description \u003d commandSplit[1].trim();"},{"lineNumber":103,"author":{"gitId":"gsmoon97"},"content":"            return new AddCommand(new Todo(description));"},{"lineNumber":104,"author":{"gitId":"gsmoon97"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":105,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeEmptyCommandException(commandSplit[0]);"},{"lineNumber":106,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":107,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":108,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":109,"author":{"gitId":"gsmoon97"},"content":"    private static Command parseDeadlineCommand(String[] commandSplit) throws LukeException {"},{"lineNumber":110,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":111,"author":{"gitId":"gsmoon97"},"content":"            String[] deadlineDetails \u003d commandSplit[1].trim().split(\"/by\");"},{"lineNumber":112,"author":{"gitId":"gsmoon97"},"content":"            String deadlineDescription \u003d deadlineDetails[0].trim();"},{"lineNumber":113,"author":{"gitId":"gsmoon97"},"content":"            LocalDate by \u003d LocalDate.parse(deadlineDetails[1].trim());"},{"lineNumber":114,"author":{"gitId":"gsmoon97"},"content":"            return new AddCommand(new Deadline(deadlineDescription, by));"},{"lineNumber":115,"author":{"gitId":"gsmoon97"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":116,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeEmptyCommandException(commandSplit[0]);"},{"lineNumber":117,"author":{"gitId":"gsmoon97"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":118,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeDateTimeException(\"deadline\");"},{"lineNumber":119,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":120,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":121,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":122,"author":{"gitId":"gsmoon97"},"content":"    private static Command parseEventCommand(String[] commandSplit) throws LukeException {"},{"lineNumber":123,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":124,"author":{"gitId":"gsmoon97"},"content":"            String[] eventDetails \u003d commandSplit[1].trim().split(\"/at\");"},{"lineNumber":125,"author":{"gitId":"gsmoon97"},"content":"            String eventDescription \u003d eventDetails[0].trim();"},{"lineNumber":126,"author":{"gitId":"gsmoon97"},"content":"            LocalDate at \u003d LocalDate.parse(eventDetails[1].trim());"},{"lineNumber":127,"author":{"gitId":"gsmoon97"},"content":"            return new AddCommand(new Event(eventDescription, at));"},{"lineNumber":128,"author":{"gitId":"gsmoon97"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":129,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeEmptyCommandException(commandSplit[0]);"},{"lineNumber":130,"author":{"gitId":"gsmoon97"},"content":"        } catch (DateTimeException e) {"},{"lineNumber":131,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeDateTimeException(\"event\");"},{"lineNumber":132,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":133,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":134,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":135,"author":{"gitId":"gsmoon97"},"content":"    private static Command parseDeleteCommand(String[] commandSplit) throws LukeEmptyCommandException {"},{"lineNumber":136,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":137,"author":{"gitId":"gsmoon97"},"content":"            if (commandSplit[1].contains(\",\")) {"},{"lineNumber":138,"author":{"gitId":"gsmoon97"},"content":"                String[] rawTaskNumbers \u003d commandSplit[1].split(\",\");"},{"lineNumber":139,"author":{"gitId":"gsmoon97"},"content":"                List\u003cInteger\u003e taskNumbers \u003d new ArrayList\u003c\u003e();"},{"lineNumber":140,"author":{"gitId":"gsmoon97"},"content":"                for (int i \u003d 0; i \u003c rawTaskNumbers.length; i++) {"},{"lineNumber":141,"author":{"gitId":"gsmoon97"},"content":"                    taskNumbers.add(Integer.parseInt(rawTaskNumbers[i].trim()));"},{"lineNumber":142,"author":{"gitId":"gsmoon97"},"content":"                }"},{"lineNumber":143,"author":{"gitId":"gsmoon97"},"content":"                return new DeleteCommand(taskNumbers);"},{"lineNumber":144,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":145,"author":{"gitId":"gsmoon97"},"content":"            return new DeleteCommand(Integer.parseInt(commandSplit[1]));"},{"lineNumber":146,"author":{"gitId":"gsmoon97"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":147,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeEmptyCommandException(commandSplit[0]);"},{"lineNumber":148,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":149,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":150,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":151,"author":{"gitId":"gsmoon97"},"content":"    private static Command parseDoneCommand(String[] commandSplit) throws LukeEmptyCommandException {"},{"lineNumber":152,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":153,"author":{"gitId":"gsmoon97"},"content":"            if (commandSplit[1].contains(\",\")) {"},{"lineNumber":154,"author":{"gitId":"gsmoon97"},"content":"                String[] rawTaskNumbers \u003d commandSplit[1].split(\",\");"},{"lineNumber":155,"author":{"gitId":"gsmoon97"},"content":"                List\u003cInteger\u003e taskNumbers \u003d new ArrayList\u003c\u003e();"},{"lineNumber":156,"author":{"gitId":"gsmoon97"},"content":"                for (int i \u003d 0; i \u003c rawTaskNumbers.length; i++) {"},{"lineNumber":157,"author":{"gitId":"gsmoon97"},"content":"                    taskNumbers.add(Integer.parseInt(rawTaskNumbers[i].trim()));"},{"lineNumber":158,"author":{"gitId":"gsmoon97"},"content":"                }"},{"lineNumber":159,"author":{"gitId":"gsmoon97"},"content":"                return new DoneCommand(taskNumbers);"},{"lineNumber":160,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":161,"author":{"gitId":"gsmoon97"},"content":"            return new DoneCommand(Integer.parseInt(commandSplit[1]));"},{"lineNumber":162,"author":{"gitId":"gsmoon97"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":163,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeEmptyCommandException(commandSplit[0]);"},{"lineNumber":164,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":165,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":166,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":167,"author":{"gitId":"gsmoon97"},"content":"    private static Command parseFindCommand(String[] commandSplit) throws LukeEmptyCommandException {"},{"lineNumber":168,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":169,"author":{"gitId":"gsmoon97"},"content":"            return new FindCommand(commandSplit[1]);"},{"lineNumber":170,"author":{"gitId":"gsmoon97"},"content":"        } catch (IndexOutOfBoundsException e) {"},{"lineNumber":171,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeEmptyCommandException(commandSplit[0]);"},{"lineNumber":172,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":173,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":174,"author":{"gitId":"gsmoon97"},"content":"}"},{"lineNumber":175,"author":{"gitId":"gsmoon97"},"content":""}],"authorContributionMap":{"gsmoon97":175}},{"path":"src/main/java/luke/Storage.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.io.BufferedReader;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.io.BufferedWriter;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import java.io.File;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import java.io.FileReader;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import java.io.FileWriter;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import java.io.IOException;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import java.util.ArrayList;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":" * Represents a Storage to manage data file."},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"public class Storage {"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    private final String dataFolderDir;"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    private final String dataFile;"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    private final String dataFileDir;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"     * Creates a Storage object to manage data file from hard disk."},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"     * @param filePath path of the data file that contains the current list of tasks"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    public Storage (String filePath) {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"        this.dataFolderDir \u003d filePath.concat(\"/data/\");"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"        this.dataFile \u003d \"tasks.txt\";"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"        this.dataFileDir \u003d this.dataFolderDir.concat(this.dataFile);"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"     * Reads task list from the file."},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"     * @return the current task list"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"     * @throws LukeException If fails to load data"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"    public List\u003cTask\u003e load() throws LukeException {"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"        createDataFolderDir();"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"        File dataFile \u003d new File(this.dataFileDir);"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"            if (dataFile.createNewFile()) {"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"                return new ArrayList\u003c\u003e();"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"            } else {"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"                return loadDataFile();"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"        } catch (IOException e) {"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"            e.printStackTrace();"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"        return new ArrayList\u003c\u003e();"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"     * Writes task list to the file."},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"     * @param tasks newly updated task list."},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"    public void save(TaskList tasks) {"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"        try (BufferedWriter bw \u003d new BufferedWriter(new FileWriter(this.dataFileDir, false))) {"},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"            // write task to hard disk (./data/tasks.txt)"},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"            // for each task inside the TaskList, toDataString, then write to file"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"            StringBuilder dataString \u003d new StringBuilder();"},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"                dataString.append(tasks.getTask(i).toDataString()).append(\"\\n\");"},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"            bw.write(dataString.toString());"},{"lineNumber":69,"author":{"gitId":"gsmoon97"},"content":"            bw.flush();"},{"lineNumber":70,"author":{"gitId":"gsmoon97"},"content":"        } catch (IOException e) {"},{"lineNumber":71,"author":{"gitId":"gsmoon97"},"content":"            e.printStackTrace();"},{"lineNumber":72,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":73,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":74,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":75,"author":{"gitId":"gsmoon97"},"content":"    private void createDataFolderDir() {"},{"lineNumber":76,"author":{"gitId":"gsmoon97"},"content":"        File file \u003d new File(this.dataFolderDir);"},{"lineNumber":77,"author":{"gitId":"gsmoon97"},"content":"        if (!file.exists()) {"},{"lineNumber":78,"author":{"gitId":"gsmoon97"},"content":"            file.mkdir();"},{"lineNumber":79,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":80,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":81,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":82,"author":{"gitId":"gsmoon97"},"content":"    private List\u003cTask\u003e loadDataFile() throws LukeException {"},{"lineNumber":83,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":84,"author":{"gitId":"gsmoon97"},"content":"        try (BufferedReader br \u003d new BufferedReader(new FileReader(this.dataFileDir))) {"},{"lineNumber":85,"author":{"gitId":"gsmoon97"},"content":"            String readLine;"},{"lineNumber":86,"author":{"gitId":"gsmoon97"},"content":"            while ((readLine \u003d br.readLine()) !\u003d null) {"},{"lineNumber":87,"author":{"gitId":"gsmoon97"},"content":"                Task parsedTask \u003d Parser.parseTask(readLine);"},{"lineNumber":88,"author":{"gitId":"gsmoon97"},"content":"                tasks.add(parsedTask);"},{"lineNumber":89,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":90,"author":{"gitId":"gsmoon97"},"content":"        } catch (IOException e) {"},{"lineNumber":91,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeException(e.getMessage());"},{"lineNumber":92,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":93,"author":{"gitId":"gsmoon97"},"content":"        return tasks;"},{"lineNumber":94,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":95,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":95}},{"path":"src/main/java/luke/TaskList.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeNoResultException;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":" * Represents a Tasklist that contains the current tasks."},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"public class TaskList {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    protected List\u003cTask\u003e tasks;"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"    public TaskList() {"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"        this.tasks \u003d new ArrayList\u003c\u003e();"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    public TaskList(List\u003cTask\u003e tasks) {"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"        this.tasks \u003d tasks;"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    public void add(Task task) {"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"        this.tasks.add(task);"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"    public List\u003cTask\u003e getTasks() {"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"        return this.tasks;"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"     * Retrieves the task that corresponds to the given index."},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"     * @param i index of the task"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"     * @return the task that corresponds to the given index"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"    public Task getTask(int i) {"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"        return this.tasks.get(i);"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"     * Retrieves the number of tasks inside the current tasklist."},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"     * @return the size of tasks inside the current tasklist"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"    public int getSize() {"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"        return this.tasks.size();"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"     * Removes the task with the specified index"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"     * within the current list of tasks."},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"     * @param taskNumber the index of the task to be deleted"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"     * @return the task that has been deleted"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"    public Task deleteTask(int taskNumber) {"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"        int idx \u003d taskNumber - 1;"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"        Task deletedTask \u003d this.tasks.get(idx);"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"        this.tasks.remove(idx);"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"        return deletedTask;"},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"     * Marks the task with the specified index as done"},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"     * within the current list of tasks."},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"     * @param taskNumber the index of the task to be deleted"},{"lineNumber":69,"author":{"gitId":"gsmoon97"},"content":"     * @return the task that has been marked as done"},{"lineNumber":70,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":71,"author":{"gitId":"gsmoon97"},"content":"    public Task doTask(int taskNumber) {"},{"lineNumber":72,"author":{"gitId":"gsmoon97"},"content":"        int idx \u003d taskNumber - 1;"},{"lineNumber":73,"author":{"gitId":"gsmoon97"},"content":"        Task doneTask \u003d this.tasks.get(idx);"},{"lineNumber":74,"author":{"gitId":"gsmoon97"},"content":"        doneTask.markAsDone();"},{"lineNumber":75,"author":{"gitId":"gsmoon97"},"content":"        return doneTask;"},{"lineNumber":76,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":77,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":78,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":79,"author":{"gitId":"gsmoon97"},"content":"     * Finds the task containing the given keyword"},{"lineNumber":80,"author":{"gitId":"gsmoon97"},"content":"     * within the current list of tasks."},{"lineNumber":81,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"gsmoon97"},"content":"     * @param input the given keyword used to find a task"},{"lineNumber":83,"author":{"gitId":"gsmoon97"},"content":"     * @return the list of tasks that matches the keyword"},{"lineNumber":84,"author":{"gitId":"gsmoon97"},"content":"     * @throws LukeNoResultException If there is no search result"},{"lineNumber":85,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":86,"author":{"gitId":"gsmoon97"},"content":"    public List\u003cTask\u003e findTask(String input) throws LukeNoResultException {"},{"lineNumber":87,"author":{"gitId":"gsmoon97"},"content":"        ArrayList\u003cTask\u003e result \u003d new ArrayList\u003c\u003e();"},{"lineNumber":88,"author":{"gitId":"gsmoon97"},"content":"        for (int i \u003d 0; i \u003c this.tasks.size(); i++) {"},{"lineNumber":89,"author":{"gitId":"gsmoon97"},"content":"            Task current \u003d this.tasks.get(i);"},{"lineNumber":90,"author":{"gitId":"gsmoon97"},"content":"            if (current.getDescription().contains(input)) {"},{"lineNumber":91,"author":{"gitId":"gsmoon97"},"content":"                result.add(current);"},{"lineNumber":92,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":93,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":94,"author":{"gitId":"gsmoon97"},"content":"        if (result.size() \u003c\u003d 0) {"},{"lineNumber":95,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeNoResultException(input);"},{"lineNumber":96,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":97,"author":{"gitId":"gsmoon97"},"content":"        return result;"},{"lineNumber":98,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":100,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":100}},{"path":"src/main/java/luke/Ui.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeNoResultException;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":" * Represents Ui that directly interacts with user."},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"public class Ui {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    public Ui() {"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"     * Show welcome message to the user."},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"     * @return welcome message"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    public String showWelcome() {"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"        return \"Hey there! I\u0027m Luke.\\n\""},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"                + \"Please tell me what to do.\\n\";"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"     * Show error message to the user."},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"     * @param e exception"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"     * @return error message"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"    public String showError(LukeException e) {"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"        return e.getMessage();"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"     * Show add result to the user."},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"     * @param newTask task to be added"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"     * @param numOfTasks number of current tasks"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"     * @return result of adding task"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"    public String showAddResult(Task newTask, int numOfTasks) {"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"        assert numOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"The following task has been successfully added.\\n\""},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"                + \"-\u003e %s\\n\""},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"                + \"Now you have %d tasks in your list.\\n\", newTask, numOfTasks);"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"     * Show delete result to the user."},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"     * @param deletedTask task to be deleted"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"     * @param numOfTasks number of current tasks"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"     * @return result of deleting task"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"    public String showDeleteResult(Task deletedTask, int numOfTasks) {"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"        assert numOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"The following task has been successfully deleted.\\n\""},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"                + \"-\u003e %s\\n\""},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"                + \"Now you have %d tasks in your list.\\n\", deletedTask, numOfTasks);"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"     * Show mass delete result to the user."},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":69,"author":{"gitId":"gsmoon97"},"content":"     * @param deletedTasks tasks to be deleted"},{"lineNumber":70,"author":{"gitId":"gsmoon97"},"content":"     * @param numOfTasks number of current tasks"},{"lineNumber":71,"author":{"gitId":"gsmoon97"},"content":"     * @return result of deleting tasks"},{"lineNumber":72,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":73,"author":{"gitId":"gsmoon97"},"content":"    public String showMassDeleteResult(List\u003cTask\u003e deletedTasks, int numOfTasks) {"},{"lineNumber":74,"author":{"gitId":"gsmoon97"},"content":"        assert numOfTasks \u003e\u003d 0 : \"Number of tasks should not be negative\";"},{"lineNumber":75,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"The specified tasks have been successfully deleted.\\n\""},{"lineNumber":76,"author":{"gitId":"gsmoon97"},"content":"                + \"Now you have %d tasks in your list.\\n\", numOfTasks);"},{"lineNumber":77,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":79,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":80,"author":{"gitId":"gsmoon97"},"content":"     * Show done result to the user."},{"lineNumber":81,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":82,"author":{"gitId":"gsmoon97"},"content":"     * @param newTask task to be marked as done"},{"lineNumber":83,"author":{"gitId":"gsmoon97"},"content":"     * @return result of marking task as done"},{"lineNumber":84,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":85,"author":{"gitId":"gsmoon97"},"content":"    public String showDoneResult(Task newTask) {"},{"lineNumber":86,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"The following task has been successfully marked as done.\\n\""},{"lineNumber":87,"author":{"gitId":"gsmoon97"},"content":"                + \"-\u003e %s\\n\", newTask);"},{"lineNumber":88,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":89,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":90,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":91,"author":{"gitId":"gsmoon97"},"content":"     * Show mass done result to the user."},{"lineNumber":92,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":93,"author":{"gitId":"gsmoon97"},"content":"     * @param doneTasks tasks to be marked as done"},{"lineNumber":94,"author":{"gitId":"gsmoon97"},"content":"     * @return result of marking tasks as done"},{"lineNumber":95,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":96,"author":{"gitId":"gsmoon97"},"content":"    public String showMassDoneResult(List\u003cTask\u003e doneTasks) {"},{"lineNumber":97,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"The specified tasks have been successfully marked as done.\\n\");"},{"lineNumber":98,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":99,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":100,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":101,"author":{"gitId":"gsmoon97"},"content":"     * Show list result to the user."},{"lineNumber":102,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":103,"author":{"gitId":"gsmoon97"},"content":"     * @param tasks list of current tasks"},{"lineNumber":104,"author":{"gitId":"gsmoon97"},"content":"     * @return result of listing out task"},{"lineNumber":105,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":106,"author":{"gitId":"gsmoon97"},"content":"    public String showListResult(TaskList tasks) {"},{"lineNumber":107,"author":{"gitId":"gsmoon97"},"content":"        if (tasks.getSize() \u003c 1) {"},{"lineNumber":108,"author":{"gitId":"gsmoon97"},"content":"            return \"You don\u0027t have any tasks in your list :(\";"},{"lineNumber":109,"author":{"gitId":"gsmoon97"},"content":"        } else {"},{"lineNumber":110,"author":{"gitId":"gsmoon97"},"content":"            String taskSummary \u003d \"Here are the tasks in your list.\\n\";"},{"lineNumber":111,"author":{"gitId":"gsmoon97"},"content":"            for (int i \u003d 0; i \u003c tasks.getSize(); i++) {"},{"lineNumber":112,"author":{"gitId":"gsmoon97"},"content":"                Task current \u003d tasks.getTask(i);"},{"lineNumber":113,"author":{"gitId":"gsmoon97"},"content":"                taskSummary +\u003d String.format(\"-\u003e %d.%s\\n\", i + 1, current);"},{"lineNumber":114,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":115,"author":{"gitId":"gsmoon97"},"content":"            return String.format(\"%s\", taskSummary);"},{"lineNumber":116,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":117,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":118,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":119,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":120,"author":{"gitId":"gsmoon97"},"content":"     * Show find result to the user."},{"lineNumber":121,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":122,"author":{"gitId":"gsmoon97"},"content":"     * @param tasks list of current tasks"},{"lineNumber":123,"author":{"gitId":"gsmoon97"},"content":"     * @param keyword given keyword used to find tasks"},{"lineNumber":124,"author":{"gitId":"gsmoon97"},"content":"     * @return result of finding task with the given keyword"},{"lineNumber":125,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":126,"author":{"gitId":"gsmoon97"},"content":"    public String showFindResult(TaskList tasks, String keyword) {"},{"lineNumber":127,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":128,"author":{"gitId":"gsmoon97"},"content":"            List\u003cTask\u003e result \u003d tasks.findTask(keyword);"},{"lineNumber":129,"author":{"gitId":"gsmoon97"},"content":"            String resultStr \u003d String.format(\"Here are the tasks that contain the keyword \u0027%s\u0027\\n\", keyword);"},{"lineNumber":130,"author":{"gitId":"gsmoon97"},"content":"            for (int i \u003d 0; i \u003c result.size(); i++) {"},{"lineNumber":131,"author":{"gitId":"gsmoon97"},"content":"                Task current \u003d result.get(i);"},{"lineNumber":132,"author":{"gitId":"gsmoon97"},"content":"                resultStr +\u003d String.format(\"-\u003e %s\\n\", current);"},{"lineNumber":133,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":134,"author":{"gitId":"gsmoon97"},"content":"            return resultStr;"},{"lineNumber":135,"author":{"gitId":"gsmoon97"},"content":"        } catch (LukeNoResultException e) {"},{"lineNumber":136,"author":{"gitId":"gsmoon97"},"content":"            return e.getMessage();"},{"lineNumber":137,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":138,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":139,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":140,"author":{"gitId":"gsmoon97"},"content":"    public String showExitResult() {"},{"lineNumber":141,"author":{"gitId":"gsmoon97"},"content":"        return \"\";"},{"lineNumber":142,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":143,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":143}},{"path":"src/main/java/luke/commands/AddCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.time.DateTimeException;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":" * Represents a command to add new tasks."},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"public class AddCommand extends Command {"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"    protected Task task;"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"     * Creates an AddCommand object to add the given task."},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"     * @param task the task to be added"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    public AddCommand(Task task) {"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"        this.task \u003d task;"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"            tasks.add(this.task);"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"            storage.save(tasks);"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"            return ui.showAddResult(this.task, tasks.getSize());"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"        } catch (DateTimeException dateTimeException) {"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeException(\"Please enter a valid date format.\");"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":38}},{"path":"src/main/java/luke/commands/Command.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":" * Represents a command for Luke to execute."},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"public abstract class Command {"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    public abstract String execute(Storage storage, TaskList taskList, Ui ui) throws LukeException;"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":15}},{"path":"src/main/java/luke/commands/DeleteCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.util.ArrayList;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeIndexOutOfBoundsException;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":" * Represents a command to delete existing tasks."},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"public class DeleteCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    protected int taskNumber;"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    protected List\u003cInteger\u003e taskNumberList;"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    protected boolean massOps;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"     * Creates a DeleteCommand to delete the given task."},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"     * @param taskNumber index number of the task to be deleted"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    public DeleteCommand(int taskNumber) {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumberList \u003d null;"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"        this.massOps \u003d false;"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"     * Creates a DeleteCommand to delete the given tasks."},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"     * @param taskNumberList list of index numbers of the tasks to be deleted"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"    public DeleteCommand(List\u003cInteger\u003e taskNumberList) {"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumber \u003d -1;"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumberList \u003d taskNumberList;"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"        this.massOps \u003d true;"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"            if (this.massOps) {"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"                List\u003cTask\u003e deletedTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"                this.taskNumberList.sort(Collections.reverseOrder()); // to make sure index numbers do not get shifted"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"                for (Integer integer : this.taskNumberList) {"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"                    deletedTaskList.add(tasks.deleteTask(integer));"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"                }"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"                storage.save(tasks);"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"                return ui.showMassDeleteResult(deletedTaskList, tasks.getSize());"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"            } else {"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"                Task deletedTask \u003d tasks.deleteTask(this.taskNumber);"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"                storage.save(tasks);"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"                return ui.showDeleteResult(deletedTask, tasks.getSize());"},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeIndexOutOfBoundsException(String.valueOf(this.taskNumber));"},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":67}},{"path":"src/main/java/luke/commands/DoneCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeIndexOutOfBoundsException;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import java.util.ArrayList;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"import java.util.Collections;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":" * Represents a command to mark existing tasks as done."},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"public class DoneCommand extends Command {"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    protected int taskNumber;"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    protected List\u003cInteger\u003e taskNumberList;"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    protected boolean massOps;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"     * Creates a DoneCommand to mark the given task as done."},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"     * @param taskNumber index number of the task to be marksed as done"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"    public DoneCommand(int taskNumber) {"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumber \u003d taskNumber;"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumberList \u003d null;"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"        this.massOps \u003d false;"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"     * Creates a DoneCommand to mark the given tasks as done."},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"     * @param taskNumberList list of index numbers of the tasks to be marked as done"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"    public DoneCommand(List\u003cInteger\u003e taskNumberList) {"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumber \u003d -1;"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"        this.taskNumberList \u003d taskNumberList;"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"        this.massOps \u003d true;"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) throws LukeException {"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"            if (this.massOps) {"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"                List\u003cTask\u003e doneTaskList \u003d new ArrayList\u003c\u003e();"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"                this.taskNumberList.sort(Collections.reverseOrder()); // to make sure index numbers do not get shifted"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"                for (Integer integer : this.taskNumberList) {"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"                    doneTaskList.add(tasks.doTask(integer));"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"                }"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"                storage.save(tasks);"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"                return ui.showMassDoneResult(doneTaskList);"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"            } else {"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"                Task doneTask \u003d tasks.doTask(this.taskNumber);"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"                storage.save(tasks);"},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"                return ui.showDoneResult(doneTask);"},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"            }"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"        } catch (NullPointerException e) {"},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"            throw new LukeIndexOutOfBoundsException(String.valueOf(this.taskNumber));"},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":68}},{"path":"src/main/java/luke/commands/ExitCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":" * Represents a command to exit the program."},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"public class ExitCommand extends Command {"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"     * Creates an ExitCommand to exit the program."},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"    public ExitCommand() {"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"        System.exit(0);"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"        return ui.showExitResult();"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":25}},{"path":"src/main/java/luke/commands/FindCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":" * Represents a command to find matching tasks."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"public class FindCommand extends Command {"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    protected String keyword;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"     * Creates a FindCommand object to find tasks"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"     * that match the given keyword."},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"     * @param keyword the keyword used to find matching tasks"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    public FindCommand(String keyword) {"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"        this.keyword \u003d keyword;"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"        return ui.showFindResult(tasks, keyword);"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":29}},{"path":"src/main/java/luke/commands/ListCommand.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.commands;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import luke.Storage;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import luke.TaskList;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import luke.Ui;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import luke.exception.LukeException;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":" * Represents a command to list out current tasks."},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"public class ListCommand extends Command {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    protected TaskList tasks;"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"     * Creates a ListCommand to list out current tasks."},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    public ListCommand() {"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"        super();"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    public String execute(Storage storage, TaskList tasks, Ui ui) {"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"        return ui.showListResult(tasks);"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":27}},{"path":"src/main/java/luke/exception/LukeDateTimeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when incorrect DateTime is given."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeDateTimeException extends LukeException {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeDateTimeException object that indicates incorrect DateTime format."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param command the DateTime format given by the user"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeDateTimeException(String command) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(String.format(\"Unable to read date and time for \u0027%s\u0027 command. Please enter the date and time in the format \u0027YYYY-MM-DD\u0027\", command));"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":15}},{"path":"src/main/java/luke/exception/LukeEmptyCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when no details are given for a command."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeEmptyCommandException extends LukeException {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeEmptyCommandException object that indicates no command details."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param command command given by the user"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeEmptyCommandException(String command) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(String.format(\"Sorry, \u0027%s\u0027 command should not be empty. Please add details about the command.\", command));"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":15}},{"path":"src/main/java/luke/exception/LukeException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when executing Luke."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeException extends Exception {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeException object that contains error message."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param msg message containing error details"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeException(String msg) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(msg);"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":15}},{"path":"src/main/java/luke/exception/LukeIndexOutOfBoundsException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when a non-existing task is requested."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeIndexOutOfBoundsException extends LukeException {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeIndexOutOfBoundsException object that indicates request for non-existing task."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param size size of the list"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeIndexOutOfBoundsException(String size) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(String.format(\"The current task list contains less than %d number of tasks.\\n\""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"                + \"Please enter a valid task number.\", size));"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":16}},{"path":"src/main/java/luke/exception/LukeLoadingDataException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when loading data fails."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeLoadingDataException extends LukeException {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeLoadingDataException object that indicates issue with loading data."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param string the situation where the error occurred"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeLoadingDataException(String string) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(String.format(\"Oops. Unexpected error has occurred while %s. Please try again\", string));"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":15}},{"path":"src/main/java/luke/exception/LukeNoResultException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when there is no task that matches the keyword."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeNoResultException extends LukeException {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeNoResultException object that indicates no search results."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param keyword keyword used to search tasks"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeNoResultException(String keyword) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(String.format(\"Sorry, there are no tasks that contains the keyword \u0027%s.\u0027\""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"                + \"Please try again with another keyword.\", keyword));"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":16}},{"path":"src/main/java/luke/exception/LukeUnknownCommandException.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.exception;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an exception thrown when invalid command is given."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class LukeUnknownCommandException extends LukeException {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"     * Creates a LukeUnknwonCommandException object that indicates invalid commands."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     * @param command command given by the user"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"    public LukeUnknownCommandException(String command) {"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"        super(String.format(\"Sorry, \u0027%s\u0027 is an unknown command. Please type in a valid command.\", command));"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":15}},{"path":"src/main/java/luke/gui/DialogBox.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.gui;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.io.IOException;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.util.Collections;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import javafx.collections.FXCollections;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import javafx.collections.ObservableList;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import javafx.fxml.FXML;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import javafx.fxml.FXMLLoader;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import javafx.geometry.Pos;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.Node;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.control.Label;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.image.ImageView;"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.layout.HBox;"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":" * An example of a custom control using FXML."},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":" * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":" * containing text from the speaker."},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"public class DialogBox extends HBox {"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    private Label dialog;"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    private ImageView displayPicture;"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    private DialogBox(String text, Image img) {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"        try {"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"            fxmlLoader.setController(this);"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"            fxmlLoader.setRoot(this);"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"            fxmlLoader.load();"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"        } catch (IOException e) {"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"            e.printStackTrace();"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"        }"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"        dialog.setText(text);"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"        displayPicture.setImage(img);"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"     * Flips the dialog box such that the ImageView is on the left and text on the right."},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"    private void flip() {"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"        Collections.reverse(tmp);"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"        getChildren().setAll(tmp);"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"        setAlignment(Pos.TOP_LEFT);"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"    public static DialogBox getUserDialog(String text, Image img) {"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"        return new DialogBox(text, img);"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"    public static DialogBox getLukeDialog(String text, Image img) {"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"        var db \u003d new DialogBox(text, img);"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"        db.flip();"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"        return db;"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":61}},{"path":"src/main/java/luke/gui/MainWindow.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.gui;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import javafx.fxml.FXML;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.control.Button;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.control.ScrollPane;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.control.TextField;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.image.Image;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.layout.AnchorPane;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import javafx.scene.layout.VBox;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import luke.Luke;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":" * Controller for duke.MainWindow. Provides the layout for the other controls."},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"public class MainWindow extends AnchorPane {"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"    private ScrollPane scrollPane;"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    private VBox dialogContainer;"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    private TextField userInput;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    private Button sendButton;"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    private final double DIALOG_BOX_SPACING \u003d 5.0;"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"    private Luke luke;"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/userIcon.jpg\"));"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"    private Image lukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/lukeIcon.jpg\"));"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"     * Initializes initial settings for MainWindow."},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"    public void initialize() {"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"        sendButton.setOnMouseClicked((event) -\u003e {"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"            handleUserInput();"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"        });"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"        userInput.setOnAction((event) -\u003e {"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"            handleUserInput();"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"        });"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"     * Greets the user with a welcome message."},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"     * @param luke Luke object"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"    public void greet(Luke luke) {"},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"        setLuke(luke);"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":"        dialogContainer.getChildren().add(DialogBox.getLukeDialog(this.luke.getUi().showWelcome(), lukeImage));"},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":"    public void setLuke(Luke luke) {"},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"        this.luke \u003d luke;"},{"lineNumber":60,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":61,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":62,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":63,"author":{"gitId":"gsmoon97"},"content":"     * Creates two dialog boxes, one echoing user input and the other"},{"lineNumber":64,"author":{"gitId":"gsmoon97"},"content":"     * containing Duke\u0027s reply and then appends them to the dialog"},{"lineNumber":65,"author":{"gitId":"gsmoon97"},"content":"     * container. Clears the user input after processing."},{"lineNumber":66,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":67,"author":{"gitId":"gsmoon97"},"content":"    @FXML"},{"lineNumber":68,"author":{"gitId":"gsmoon97"},"content":"    private void handleUserInput() {"},{"lineNumber":69,"author":{"gitId":"gsmoon97"},"content":"        String input \u003d userInput.getText();"},{"lineNumber":70,"author":{"gitId":"gsmoon97"},"content":"        String response \u003d luke.getResponse(input);"},{"lineNumber":71,"author":{"gitId":"gsmoon97"},"content":"        dialogContainer.getChildren().addAll("},{"lineNumber":72,"author":{"gitId":"gsmoon97"},"content":"                DialogBox.getUserDialog(input, userImage),"},{"lineNumber":73,"author":{"gitId":"gsmoon97"},"content":"                DialogBox.getLukeDialog(response, lukeImage)"},{"lineNumber":74,"author":{"gitId":"gsmoon97"},"content":"        );"},{"lineNumber":75,"author":{"gitId":"gsmoon97"},"content":"        dialogContainer.setSpacing(DIALOG_BOX_SPACING);"},{"lineNumber":76,"author":{"gitId":"gsmoon97"},"content":"        userInput.clear();"},{"lineNumber":77,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":78,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":78}},{"path":"src/main/java/luke/task/Deadline.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.task;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":" * Represents a task and its deadline for the user."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"public class Deadline extends Task {"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    protected LocalDate by;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"     * Creates a Deadline object that indicates the task and its deadline."},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"     * @param description details about the task"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"     * @param by deadline tha the task should be finished by"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    public Deadline(String description, LocalDate by) {"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"        super(TaskType.DEADLINE, description);"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"        this.by \u003d by;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    public String getBy() {"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"        return stringifyBy();"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    private String stringifyBy() {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"        return by.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\", Locale.ENGLISH));"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"    public String toDataString() {"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"D|%s|%s\", super.toDataString(), this.by);"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"        return \"[D]\" + super.toString() + \" (by: \" + this.getBy() + \")\";"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":41}},{"path":"src/main/java/luke/task/Event.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.task;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.time.format.DateTimeFormatter;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import java.util.Locale;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":" * Represents an event and its time for the user."},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"public class Event extends Task {"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    protected LocalDate at;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"     * Creates a Event object that indicates the task and its time."},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"     * @param description details about the task"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"     * @param at time that the event takes place"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"    public Event(String description, LocalDate at) {"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"        super(TaskType.EVENT, description);"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"        this.at \u003d at;"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"    public String getAt() {"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"        return stringifyAt();"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    private String stringifyAt() {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"        return at.format(DateTimeFormatter.ofPattern(\"MMM d, yyyy\", Locale.ENGLISH));"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"    public String toDataString() {"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"E|%s|%s\", super.toDataString(), this.at);"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"    public String toString() {"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"        return \"[E]\" + super.toString() + \" (at: \" + this.getAt() + \")\";"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":41}},{"path":"src/main/java/luke/task/Task.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.task;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents an event and its time for the user."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public abstract class Task {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    protected TaskType taskType;"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"    protected String description;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"    protected boolean isDone;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"     * Creates a Task object that indicates the task and its type."},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"     * @param taskType type of the task"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"     * @param description details about the task"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"    public Task(TaskType taskType, String description) {"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"        this.taskType \u003d taskType;"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"        this.description \u003d description;"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"        this.isDone \u003d false;"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    public TaskType getTaskType() {"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"        return this.taskType;"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"    public String getDescription() {"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"        return this.description;"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":"    public String getStatusIcon() {"},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"    public void markAsDone() {"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"        this.isDone \u003d true; //mark the progress as done"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"     * Converts the task into a specific format."},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":"     * @return a String object about the task and its details"},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"    public String toDataString() {"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"        int isDone \u003d this.isDone ? 1 : 0;"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"%d|%s\", isDone, this.getDescription());"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"    public String toString() {"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"[%s] %s\", this.getStatusIcon(), this.getDescription());"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":53}},{"path":"src/main/java/luke/task/TaskType.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.task;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents the type of the task."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public enum TaskType {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"    TODO,"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"    DEADLINE,"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"    EVENT;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":10}},{"path":"src/main/java/luke/task/Todo.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke.task;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"/**"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":" * Represents a task that the user has to finish."},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":" */"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"public class Todo extends Task {"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"    /**"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"     * Creates a Todo object that indicates what the user needs to do."},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"     *"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"     * @param description details about the task"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"     */"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"    public Todo(String description) {"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"        super(TaskType.TODO, description);"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    public String toDataString() {"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"        return String.format(\"T|%s|\", super.toDataString());"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    @Override"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"    public String toString() {"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"        return \"[T]\" + super.toString();"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":26}},{"path":"src/main/resources/view/DialogBox.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.geometry.Insets?\u003e"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.control.Label?\u003e"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.image.ImageView?\u003e"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.layout.HBox?\u003e"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.shape.Circle?\u003e"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"    \u003cchildren\u003e"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"\u003e"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"            \u003cclip\u003e"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"                \u003cCircle centerX\u003d\"48.0\" centerY\u003d\"48.0\" radius\u003d\"48.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"            \u003c/clip\u003e"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"        \u003c/ImageView\u003e"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"    \u003c/children\u003e"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    \u003cpadding\u003e"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"    \u003c/padding\u003e"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"\u003c/fx:root\u003e"}],"authorContributionMap":{"gsmoon97":21}},{"path":"src/main/resources/view/MainWindow.fxml","fileType":"fxml","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.control.Button?\u003e"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.control.ScrollPane?\u003e"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.control.TextField?\u003e"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.layout.AnchorPane?\u003e"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.layout.VBox?\u003e"},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"\u003c?import javafx.scene.text.Font?\u003e"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"luke.gui.MainWindow\"\u003e"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"    \u003cchildren\u003e"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" promptText\u003d\"Please type here.\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":"         \u003cfont\u003e"},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"            \u003cFont name\u003d\"Menlo Regular\" size\u003d\"15.0\" /\u003e"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":"         \u003c/font\u003e\u003c/TextField\u003e"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"            \u003ccontent\u003e"},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"            \u003c/content\u003e"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"        \u003c/ScrollPane\u003e"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"    \u003c/children\u003e"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"\u003c/AnchorPane\u003e"}],"authorContributionMap":{"gsmoon97":23}},{"path":"src/test/java/luke/TaskListTest.java","fileType":"java","lines":[{"lineNumber":1,"author":{"gitId":"gsmoon97"},"content":"package luke;"},{"lineNumber":2,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":3,"author":{"gitId":"gsmoon97"},"content":"import java.time.LocalDate;"},{"lineNumber":4,"author":{"gitId":"gsmoon97"},"content":"import java.util.ArrayList;"},{"lineNumber":5,"author":{"gitId":"gsmoon97"},"content":"import java.util.Arrays;"},{"lineNumber":6,"author":{"gitId":"gsmoon97"},"content":"import java.util.List;"},{"lineNumber":7,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":8,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Deadline;"},{"lineNumber":9,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Event;"},{"lineNumber":10,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Task;"},{"lineNumber":11,"author":{"gitId":"gsmoon97"},"content":"import luke.task.Todo;"},{"lineNumber":12,"author":{"gitId":"gsmoon97"},"content":"import org.junit.jupiter.api.Test;"},{"lineNumber":13,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":14,"author":{"gitId":"gsmoon97"},"content":"import static org.junit.jupiter.api.Assertions.assertArrayEquals;"},{"lineNumber":15,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"public class TaskListTest {"},{"lineNumber":17,"author":{"gitId":"gsmoon97"},"content":"    //    I have referred to viscount-master for this part of the code"},{"lineNumber":18,"author":{"gitId":"gsmoon97"},"content":"    private static final List\u003cTask\u003e DUMMY_TASKS \u003d Arrays.asList("},{"lineNumber":19,"author":{"gitId":"gsmoon97"},"content":"            new Todo(\"do 1\"),"},{"lineNumber":20,"author":{"gitId":"gsmoon97"},"content":"            new Deadline(\"do 2\", LocalDate.of(2020, 2, 22)),"},{"lineNumber":21,"author":{"gitId":"gsmoon97"},"content":"            new Event(\"do 3\", LocalDate.of(2020, 3, 3)),"},{"lineNumber":22,"author":{"gitId":"gsmoon97"},"content":"            new Todo(\"do 4\"),"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"            new Deadline(\"do 5\", LocalDate.of(2020, 5, 5)),"},{"lineNumber":24,"author":{"gitId":"gsmoon97"},"content":"            new Event(\"do 6\", LocalDate.of(2020, 6, 6)));"},{"lineNumber":25,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"    //    I have referred to viscount-master for this part of the code"},{"lineNumber":27,"author":{"gitId":"gsmoon97"},"content":"    @Test"},{"lineNumber":28,"author":{"gitId":"gsmoon97"},"content":"    public void addTask_newTask_tasklistUpdated() {"},{"lineNumber":29,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e test \u003d new ArrayList\u003c\u003e(DUMMY_TASKS);"},{"lineNumber":30,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e(DUMMY_TASKS);"},{"lineNumber":31,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":32,"author":{"gitId":"gsmoon97"},"content":"        Task newTask \u003d new Todo(\"do 7\");"},{"lineNumber":33,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":34,"author":{"gitId":"gsmoon97"},"content":"        TaskList taskList \u003d new TaskList(test);"},{"lineNumber":35,"author":{"gitId":"gsmoon97"},"content":"        taskList.add(newTask);"},{"lineNumber":36,"author":{"gitId":"gsmoon97"},"content":"        expected.add(newTask);"},{"lineNumber":37,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":38,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e actual \u003d taskList.getTasks();"},{"lineNumber":39,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":40,"author":{"gitId":"gsmoon97"},"content":"        assertArrayEquals(expected.toArray(), actual.toArray());"},{"lineNumber":41,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":42,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":43,"author":{"gitId":"gsmoon97"},"content":"    @Test"},{"lineNumber":44,"author":{"gitId":"gsmoon97"},"content":"    public void deleteTask_taskNumber_tasklistUpdated() {"},{"lineNumber":45,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e test \u003d new ArrayList\u003c\u003e(DUMMY_TASKS);"},{"lineNumber":46,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e expected \u003d new ArrayList\u003c\u003e(DUMMY_TASKS);"},{"lineNumber":47,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":48,"author":{"gitId":"gsmoon97"},"content":"        int taskNumber \u003d 3;"},{"lineNumber":49,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":50,"author":{"gitId":"gsmoon97"},"content":"        TaskList taskList \u003d new TaskList(test);"},{"lineNumber":51,"author":{"gitId":"gsmoon97"},"content":"        taskList.deleteTask(taskNumber);"},{"lineNumber":52,"author":{"gitId":"gsmoon97"},"content":"        expected.remove(taskNumber - 1);"},{"lineNumber":53,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":54,"author":{"gitId":"gsmoon97"},"content":"        List\u003cTask\u003e actual \u003d taskList.getTasks();"},{"lineNumber":55,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":56,"author":{"gitId":"gsmoon97"},"content":"        assertArrayEquals(expected.toArray(), actual.toArray());"},{"lineNumber":57,"author":{"gitId":"gsmoon97"},"content":"    }"},{"lineNumber":58,"author":{"gitId":"gsmoon97"},"content":""},{"lineNumber":59,"author":{"gitId":"gsmoon97"},"content":"}"}],"authorContributionMap":{"gsmoon97":59}},{"path":"text-ui-test/runtest.sh","fileType":"sh","lines":[{"lineNumber":1,"author":{"gitId":"-"},"content":"#!/usr/bin/env bash"},{"lineNumber":2,"author":{"gitId":"-"},"content":""},{"lineNumber":3,"author":{"gitId":"-"},"content":"# create bin directory if it doesn\u0027t exist"},{"lineNumber":4,"author":{"gitId":"-"},"content":"if [ ! -d \"../bin\" ]"},{"lineNumber":5,"author":{"gitId":"-"},"content":"then"},{"lineNumber":6,"author":{"gitId":"-"},"content":"    mkdir ../bin"},{"lineNumber":7,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":8,"author":{"gitId":"-"},"content":""},{"lineNumber":9,"author":{"gitId":"-"},"content":"# delete output from previous run"},{"lineNumber":10,"author":{"gitId":"-"},"content":"if [ -e \"./ACTUAL.TXT\" ]"},{"lineNumber":11,"author":{"gitId":"-"},"content":"then"},{"lineNumber":12,"author":{"gitId":"-"},"content":"    rm ACTUAL.TXT"},{"lineNumber":13,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":14,"author":{"gitId":"-"},"content":""},{"lineNumber":15,"author":{"gitId":"-"},"content":"# compile the code into the bin folder, terminates if error occurred"},{"lineNumber":16,"author":{"gitId":"gsmoon97"},"content":"if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"},{"lineNumber":17,"author":{"gitId":"-"},"content":"then"},{"lineNumber":18,"author":{"gitId":"-"},"content":"    echo \"********** BUILD FAILURE **********\""},{"lineNumber":19,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":20,"author":{"gitId":"-"},"content":"fi"},{"lineNumber":21,"author":{"gitId":"-"},"content":""},{"lineNumber":22,"author":{"gitId":"-"},"content":"# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"},{"lineNumber":23,"author":{"gitId":"gsmoon97"},"content":"java -classpath ../bin luke.Luke \u003c input.txt \u003e ACTUAL.TXT"},{"lineNumber":24,"author":{"gitId":"-"},"content":""},{"lineNumber":25,"author":{"gitId":"-"},"content":"# compare the output to the expected output"},{"lineNumber":26,"author":{"gitId":"gsmoon97"},"content":"diff ACTUAL.TXT EXPECTED.TXT"},{"lineNumber":27,"author":{"gitId":"-"},"content":"if [ $? -eq 0 ]"},{"lineNumber":28,"author":{"gitId":"-"},"content":"then"},{"lineNumber":29,"author":{"gitId":"-"},"content":"    echo \"Test result: PASSED\""},{"lineNumber":30,"author":{"gitId":"-"},"content":"    exit 0"},{"lineNumber":31,"author":{"gitId":"-"},"content":"else"},{"lineNumber":32,"author":{"gitId":"-"},"content":"    echo \"Test result: FAILED\""},{"lineNumber":33,"author":{"gitId":"-"},"content":"    exit 1"},{"lineNumber":34,"author":{"gitId":"-"},"content":"fi"}],"authorContributionMap":{"-":31,"gsmoon97":3}}]
