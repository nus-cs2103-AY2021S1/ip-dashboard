[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "# duke.duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.duke.java` file, right-click it, and choose `Run duke.duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "application {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    mainClassName \u003d \"duke.launcher.GuiLauncher\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    archiveBaseName \u003d \"guiDuke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "run{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 59
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":init"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":end"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 84
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.ui.Cli;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Launch Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static void launchDuke() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //there is no need to set default storage, here is just showcasing the usage of Cli"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Cli.getInstance().setStorage(Constants.DEFAULTSTORAGE).loop();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuyiting": 14,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/DukeCommandMatcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.CommandNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.DateFormatException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.LackOfTimeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.NullCommandContentException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.NullCommandException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.TaskNotSpecifyException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.TaskOutOfBoundException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.SingletonTaskList;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.ui.Printer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.UtilFunction;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * The class to match the command to Duke\u0027s response."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class DukeCommandMatcher {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private static final List\u003cString\u003e commandList \u003d new ArrayList\u003c\u003e(Arrays.asList(Constants.LISTPATTERN,"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Constants.EXITPATTERN, Constants.DONEPATTERN, Constants.TODOPATTERN, Constants.DEADLINEPATTERN,"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Constants.EVENTPATTERN, Constants.DELETEPATTERN, Constants.FINDPATTERN, Constants.HELPPATTERN"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    ));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private SingletonTaskList taskList;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public DukeCommandMatcher(Storage database) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.taskList \u003d SingletonTaskList.getInstance(database);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Match the command to corresponding behavior."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param command"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return message of implementation"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws CommandNotFoundException when command is not found"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws NullCommandException when the command is empty"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws LackOfTimeException when event/deadline command lacks time"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws NullCommandContentException when todo/event/deadline lacks content"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws TaskOutOfBoundException when done/delete is implemented on task that does not exist"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws TaskNotSpecifyException when the task to be done/deleted is not specified"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws DateFormatException when input date format is not in the standard format"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String handleCommand(String command) throws CommandNotFoundException, NullCommandException,"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            LackOfTimeException, NullCommandContentException, TaskOutOfBoundException, TaskNotSpecifyException,"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            DateFormatException {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (Objects.equals(command, \"\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new NullCommandException(command);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //get the first command"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String[] splitCommand \u003d command.split(\"\\\\s+\", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //check if the command is in the list"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        for (String commandPattern: commandList) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            //the command is in the list"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (UtilFunction.matchPattern(commandPattern, splitCommand[0])) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                switch (commandPattern) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.EXITPATTERN:"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleExit();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.LISTPATTERN:"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleList();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.DONEPATTERN:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleDone(splitCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.TODOPATTERN:"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleTodo(splitCommand);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.DEADLINEPATTERN:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleDeadline(splitCommand);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.EVENTPATTERN:"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleEvent(splitCommand);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.DELETEPATTERN:"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleDelete(splitCommand);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.FINDPATTERN:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleFind(splitCommand);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                case Constants.HELPPATTERN:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    return handleHelp();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        throw new CommandNotFoundException(command);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleExit() {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Printer.printBye();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Constants.EXITRESPONSE;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleAdd(Task task) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return taskList.add(task);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleList() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return taskList.listAll();"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleDone(String[] targetTask) throws TaskOutOfBoundException, TaskNotSpecifyException {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            int targetTaskPos \u003d Integer.parseInt(targetTask[1]) - 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return taskList.setTaskDone(targetTaskPos);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new TaskNotSpecifyException(\"task to be done not specified\", \"DONE\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleTodo(String[] todoStr) throws NullCommandContentException {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        ToDo todo;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String todoContent \u003d todoStr[1];"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            todo \u003d new ToDo(todoContent);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (NullPointerException | IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new NullCommandContentException(\"Description cannot be null\", \"Todo\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return handleAdd(todo);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleDeadline(String[] deadlineStr) throws NullCommandContentException, LackOfTimeException,"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            DateFormatException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Deadline deadline;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String[] splitDeadline;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String deadlineContent \u003d deadlineStr[1];"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            splitDeadline \u003d deadlineContent.split(\"/\", 2);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new NullCommandContentException(\"Description cannot be null\", \"Deadline\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String standardDate \u003d UtilFunction.formatDateToStandard(splitDeadline[1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            deadline \u003d new Deadline(splitDeadline[0], standardDate);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new LackOfTimeException(\"The time cannot be empty\", \"Duke.Deadline\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return handleAdd(deadline);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleEvent(String[] eventStr) throws NullCommandContentException, LackOfTimeException,"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            DateFormatException {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Event event;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String[] splitEventStr;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String eventContent \u003d eventStr[1];"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            splitEventStr \u003d eventContent.split(\"/\", 2);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (eventContent.trim().isEmpty()) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new NullCommandContentException(\"Description cannot be null\", \"Event\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String standardDate \u003d UtilFunction.formatDateToStandard(splitEventStr[1]);"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            event \u003d new Event(splitEventStr[0], standardDate);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new LackOfTimeException(\"The time cannot be empty\", \"Event\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return handleAdd(event);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleDelete(String[] deleteStr) throws TaskNotSpecifyException, TaskOutOfBoundException {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        int taskToDelete;"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            taskToDelete \u003d Integer.parseInt(deleteStr[1]);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return taskList.delete(taskToDelete);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException | NumberFormatException e) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new TaskNotSpecifyException(\"task to deletion not specified\", \"DELETE\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleFind(String[] findStr) throws NullCommandContentException {"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String queryKey \u003d findStr[1];"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return taskList.query(queryKey);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new NullCommandContentException(\"no query body\", \"FIND\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String handleHelp() {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Printer.printListCommands();"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 192
    }
  },
  {
    "path": "src/main/java/duke/GuiApplication.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class GuiApplication extends Application {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(GuiApplication.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 30
    }
  },
  {
    "path": "src/main/java/duke/dateformats/DateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.dateformats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public interface DateFormat {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    boolean check(String date);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    LocalDate mapToLocalDate(String date);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 8
    }
  },
  {
    "path": "src/main/java/duke/dateformats/DayOnlyFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.dateformats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.DayOfWeek;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.temporal.TemporalAdjusters;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class DayOnlyFormat implements DateFormat {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private final List\u003cString\u003e days \u003d Arrays.asList(\"^MON(DAY)?$\", \"^TUE(SDAY)?$\", \"^WED(NESDAY)?$\", \"^THU(RSDAY)?$\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \"^FRI(DAY)?$\", \"^SAT(URDAY)?$\", \"^SUN(DAY)?$\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public boolean check(String date) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return days.stream().anyMatch(day -\u003e date.matches(day));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Format date string to standard date format as LocalDateTime object."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param date input date string"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public LocalDate mapToLocalDate(String date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return days.stream().filter(day -\u003e date.toUpperCase().matches(day)).map(day -\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                            LocalDate.now().with(TemporalAdjusters.next(DayOfWeek.of(days.indexOf(day) + 1)))"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            ).collect(Collectors.toList()).get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            assert false : \"should only be called after checked\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 34
    }
  },
  {
    "path": "src/main/java/duke/dateformats/StandardDateFormat.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.dateformats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class StandardDateFormat implements DateFormat {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public boolean check(String date) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            LocalDate ld \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public LocalDate mapToLocalDate(String date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            LocalDate ld \u003d LocalDate.parse(date);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return ld;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            assert false : \"should check the date format before you map\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 29
    }
  },
  {
    "path": "src/main/java/duke/exceptions/CommandNotFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class CommandNotFoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public CommandNotFoundException(String err) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"🙈 OOPS!!! \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"Sorry I don\u0027t understand what that means\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 13
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DateFormatException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class DateFormatException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public DateFormatException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"The input format of date is not valid\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"please write date in the forms of \" + Constants.DF_LOCAL_TIME;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chuyiting": 16
    }
  },
  {
    "path": "src/main/java/duke/exceptions/LackOfTimeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class LackOfTimeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String typeOfCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constructor for lack of time exception."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param err"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param typeOfCommand"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public LackOfTimeException(String err, String typeOfCommand) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.typeOfCommand \u003d typeOfCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"⚠️OOPS!!! The time/date of \" + this.typeOfCommand + \" cannot be empty\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 20
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NullCommandContentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class NullCommandContentException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String typeOfCommand;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constructor for null command content exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param err errorMessage"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param typeOfCommand command type"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public NullCommandContentException(String err, String typeOfCommand) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.typeOfCommand \u003d typeOfCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"💔OH NO~~ The description of \" + this.typeOfCommand + \" cannot be empty\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 20
    }
  },
  {
    "path": "src/main/java/duke/exceptions/NullCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class NullCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constructor of null command exception."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param err error message"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public NullCommandException(String err) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"🙈OOPS!!! The command cannot be empty\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 17
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TaskNotSpecifyException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class TaskNotSpecifyException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String typeOfCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constructor for Task not specify exception."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param err errorm message"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param typeOfCommand command type"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public TaskNotSpecifyException(String err, String typeOfCommand) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.typeOfCommand \u003d typeOfCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (Objects.equals(typeOfCommand, \"DELETE\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return \"🙃Your majesty! Please specify which task you want me to delete. Thanks\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } else if (Objects.equals(typeOfCommand, \"DONE\")) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return \"🙃Your majesty! Please specify which task you want me to mark as done. Thanks\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"TaskNotSpecifyException being thrown\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 28
    }
  },
  {
    "path": "src/main/java/duke/exceptions/TaskOutOfBoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class TaskOutOfBoundException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private int taskNum;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constuctor for task out of bound exception."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param err error message"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param taskNum input task number"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public TaskOutOfBoundException(String err, int taskNum) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(err);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.taskNum \u003d taskNum;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"😝OOPS!!! You do not have task \" + taskNum + \" in the schedule.\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 21
    }
  },
  {
    "path": "src/main/java/duke/launcher/CliLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class CliLauncher {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Duke.launchDuke();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 9
    }
  },
  {
    "path": "src/main/java/duke/launcher/GuiLauncher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.launcher;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.GuiApplication;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class GuiLauncher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Application.launch(GuiApplication.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 10
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * Class for the representation of the storage/database."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String databasePath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Storage(String databasePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.databasePath \u003d databasePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Real all the tasks from the database."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return the list of all the tasks from the database"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public List\u003cTask\u003e readAll() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            File databaseFile \u003d new File(databasePath);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            databaseFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            databaseFile.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            BufferedReader csvReader \u003d new BufferedReader(new FileReader(databaseFile));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            while ((line \u003d csvReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                String[] taskStr \u003d line.split(\",\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                task \u003d storageLineParser(taskStr);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            System.err.println(\"Read failed. \\nDatabase connection error.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Update the {@code tasks} to the database."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param tasks tasks to update the database"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void update(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            File databaseFile \u003d new File(databasePath);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            FileWriter csvWriter \u003d new FileWriter(databaseFile);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            for (Task task: tasks) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                String[] formatTask \u003d formatTask(task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                csvWriter.append(String.join(\",\", formatTask));"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                csvWriter.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            csvWriter.flush();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            csvWriter.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            System.err.println(\"Creation failed. \\nDatabase connection error.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String[] formatTask(Task task) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String[] formatTask \u003d new String[] {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                task.getTaskType(),"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                task.getStatus() ? \"1\" : \"0\","
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                task.getTask(),"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                task.getTime().isEmpty() ? \"\" : task.getTime().get()"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        };"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return formatTask;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Query for a specific task in the database with a query key."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param queryKey the key used to query the database"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public List\u003cTask\u003e query(String queryKey) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            File databaseFile \u003d new File(databasePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            BufferedReader csvReader \u003d new BufferedReader(new FileReader(databaseFile));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            while ((line \u003d csvReader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                if (line.contains(queryKey)) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    String[] taskStr \u003d line.split(\",\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    task \u003d storageLineParser(taskStr);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            System.err.println(\"Read failed. \\nDatabase connection error.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return tasks;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Task storageLineParser(String[] taskStr) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        switch (taskStr[0]) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        case \"T\": {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            task \u003d new ToDo(taskStr[2], taskStr[1]);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        case \"E\": {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            task \u003d new Event(taskStr[1], taskStr[2], taskStr[3]);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        case \"D\": {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            task \u003d new Deadline(taskStr[1], taskStr[2], taskStr[3]);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        default: {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            task \u003d null;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 130
    }
  },
  {
    "path": "src/main/java/duke/tasks/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * The class for deadline object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Default constructor for deadline."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Deadline(String task, String deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constructor with status."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param status"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param deadline"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Deadline(String status, String task, String deadline) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(task, Objects.equals(status, \"1\") ? true : false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"[D]\" + super.toString() + \" (\" + deadline + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Optional\u003cString\u003e getTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Optional.of(deadline);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 48
    }
  },
  {
    "path": "src/main/java/duke/tasks/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * The class for event object."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String duration;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Default constructor for a new event object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param duration"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Event(String task, String duration) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Constructor for an event with an existing event object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param status"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param duration"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Event(String status, String task, String duration) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(task, Objects.equals(status, \"1\") ? true : false);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"[E]\" + super.toString() + \" (\" + duration + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Optional\u003cString\u003e getTime() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Optional.of(duration);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 48
    }
  },
  {
    "path": "src/main/java/duke/tasks/SingletonTaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.TaskOutOfBoundException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.ui.Printer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * Class for task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class SingletonTaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private static SingletonTaskList instance; //this class should only be instantiate once"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private SingletonTaskList(Storage database) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.storage \u003d database;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        tasks \u003d storage.readAll();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static synchronized SingletonTaskList getInstance(Storage database) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (instance \u003d\u003d null) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            instance \u003d new SingletonTaskList(database);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return instance;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Add task to the task list and the database."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task task to add"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String add(Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        int numOfTask \u003d tasks.size();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d Printer.printAdd(task, numOfTask);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        storage.update(tasks);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Delete task from the task list ant the database."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param idx the idx of task to delete"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws TaskOutOfBoundException when the idx is not valid"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @see duke.exceptions.TaskOutOfBoundException"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String delete(int idx) throws TaskOutOfBoundException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String message \u003d Printer.printDelete(tasks.get(idx - 1), tasks.size() - 1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            tasks.remove(idx - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new TaskOutOfBoundException(\"task number out of bound\", idx);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * List all the tasks in the task list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String listAll() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return Printer.printNoTaskReminder();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Printer.printAllTask(tasks, true);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Set {@code idx} of task done."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param idx idx of the task"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws TaskOutOfBoundException when the {@code idx} is not valid"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @see duke.exceptions.TaskOutOfBoundException"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String setTaskDone(int idx) throws TaskOutOfBoundException {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Task task \u003d this.tasks.get(idx);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            task.setStatus(true);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String message \u003d Printer.printDoneTask(task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            storage.update(tasks);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return message;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            throw new TaskOutOfBoundException(\"Target number of task out of bound\", idx + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Query tasks in the taskList with the {@code queryKey}."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param queryKey the key used to query the tasks"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String query(String queryKey) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        List\u003cTask\u003e matchedTasks \u003d storage.query(queryKey);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Printer.printAllTask(matchedTasks, false);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 99
    }
  },
  {
    "path": "src/main/java/duke/tasks/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * The class for an abstract idea of task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Boolean status;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    protected Task(String task) { //not meant to be instantiated by classes outside of this package"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.status \u003d false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    protected Task(String task, boolean status) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"task\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Optional\u003cString\u003e getTime() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void setTask(String task) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Boolean getStatus() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return status;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void setStatus(Boolean status) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.status \u003d status;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override public String toString() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"[\" + statusToIcon() + \"] \" + this.task;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String statusToIcon() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (this.status) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return \"✅\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            assert !this.status : \"status is \" + this.status;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            return \"❎\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 60
    }
  },
  {
    "path": "src/main/java/duke/tasks/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * The class for todoo object."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public ToDo(String task) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public ToDo(String task, String status) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        super(task, Objects.equals(status, \"1\") ? true : false);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String getTaskType() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 27
    }
  },
  {
    "path": "src/main/java/duke/ui/Cli.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.DukeCommandMatcher;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.UtilFunction;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Cli {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private static Cli cli;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private static Scanner dukeScanner;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private DukeCommandMatcher dcm;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Cli() {} //this class is not meant to be instantiated"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Get the unique instance of Cli."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return instance of Cli"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static synchronized Cli getInstance() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (cli \u003d\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            cli \u003d new Cli();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            cli.setStorage(Constants.DEFAULTSTORAGE);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return cli;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Storage setter."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param storage"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return Cli object with storage set."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public Cli setStorage(Storage storage) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private boolean checkShouldEndLoop(String response) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return Objects.equals(response, Constants.EXITRESPONSE);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private void startLoop() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Cli.dukeScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private boolean hasInput() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        assert dukeScanner !\u003d null : \"duke scanner has not been initiated yet.\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return dukeScanner.hasNextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String getInput() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return dukeScanner.nextLine();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private String execute() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //setStorage must be invoked before execute"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        assert this.storage !\u003d null : \"storage is not set yet\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        this.dcm \u003d new DukeCommandMatcher(this.storage);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        assert !(this.dcm \u003d\u003d null) : \"duke command matcher is not created yet\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            response \u003d this.dcm.handleCommand(getInput());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (Exception err) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            UtilFunction.printLimit(err.toString());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            response \u003d \"exception thrown\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Launch the Duke loop."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws IllegalStateException"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @see IllegalStateException"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void loop() throws IllegalStateException {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Printer.printGreeting();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        startLoop();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        while (hasInput()) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Printer.printDivision();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String response \u003d execute();"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (checkShouldEndLoop(response)) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Printer.printDivision();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        dukeScanner.close();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 95
    }
  },
  {
    "path": "src/main/java/duke/ui/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.tasks.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.UtilFunction;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    //This is not meant to be initiated."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Printer () {}"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print the add task."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task the task added to the database"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param numOfTask the total number of task in the database"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printAdd(Task task, int numOfTask) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"   \" + task + \u0027\\n\u0027 + \"Now you have \" + numOfTask"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + (numOfTask \u003e 1 ? \" tasks \" : \" task \") + \"in the list.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        UtilFunction.printLimit(message);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print the delete task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task the task deleted from the database"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param numOfTask the total number of task in the database"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printDelete(Task task, int numOfTask) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d \"Noted. I\u0027ve removed this task:\\n\" + \"   \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + task + \"\\n\" + \"Now you have \" + numOfTask + \" duke.tasks in the list.\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        UtilFunction.printLimit(message);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print the reminder when list command is used but the database is empty."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printNoTaskReminder() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d \"😝You don\u0027t have any task in the schedule yet~~\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"use todo/deadline/event command to create your tasks~\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        UtilFunction.printLimit(message);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print the task that has been done."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param task the task that has been done"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printDoneTask(Task task) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d \"Très bien!I have helped you marked task \" + task.getTask() + \" as done\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + task;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        UtilFunction.printLimit(message);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print all the tasks."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param tasks the tasks to print"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printAllTask(List\u003cTask\u003e tasks, boolean withLabel) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d \"\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        for (int i \u003d 1; i \u003c tasks.size() + 1; i++) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            message +\u003d (withLabel ? (i + \". \") : (\"   \")) + tasks.get(i - 1) + \"\\n\";"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        UtilFunction.printLimit(message);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    static void printGreeting() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.println(Constants.DIVIDER);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.println(Constants.GREETING);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.println(Constants.DIVIDER);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print bye message."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return bye message"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printBye() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String message \u003d \"Farewell/再見/さようなら～～\";"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print all available commands for Duke."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return all available commands"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String printListCommands() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String commandList \u003d \"help\\n\" + \"done \u003ctask number\u003e \\n\" + \"todo \u003ctask content\u003e \\n\""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"deadline \u003ctask content\u003e /\u003c\" + Constants.DF_LOCAL_TIME + \"\u003e\\n\""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"event \u003ctask content\u003e /\u003c\" + Constants.DF_LOCAL_TIME + \"\u003e\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"find \u003cquery key\u003e\\n\" + \"delete \u003ctask number\u003e\\n\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                + \"l[i]s[t]\\n\" + \"bye\\n\";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.println(commandList);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return commandList;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Print the division line."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static void printDivision() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.println(Constants.DIVIDER);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 108
    }
  },
  {
    "path": "src/main/java/duke/ui/gui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.UtilFunction;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Label name;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private VBox nameAndDialog;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private HBox fullInfo;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Label timeStamp;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private DialogBox(String text, Image img, boolean isUser) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (isUser) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            name.setText(\"You\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            dialog.setStyle(\"-fx-background-color: #66ff33\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            nameAndDialog.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            name.setText(\"Duke\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            dialog.setStyle(\"-fx-background-color: #ffffff\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        timeStamp.setText(UtilFunction.getCurrentTime());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //move to fxml"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        displayPicture.setRadius(20);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        ObservableList\u003cNode\u003e timeAndDialog \u003d FXCollections.observableArrayList(fullInfo.getChildren());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //flip the avatar and the dialog"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //flip the time stamp and the dialog"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Collections.reverse(timeAndDialog);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        fullInfo.getChildren().setAll(timeAndDialog);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return new DialogBox(text, img, true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        var db \u003d new DialogBox(text, img, false);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 92
    }
  },
  {
    "path": "src/main/java/duke/ui/gui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.ui.gui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Objects;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.DukeCommandMatcher;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.ui.Printer;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.utils.Constants;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.geometry.Insets;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private HBox userPanel;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DonaldTrump.jpg\"));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/Duke.png\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Initializer for main window."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Constants.GREETING, dukeImage));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        userInput.focusedProperty().addListener((event, oldVal, newVal) -\u003e {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (newVal) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userInput.setStyle(\"-fx-background-radius: 10\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userPanel.setPadding(new Insets(3, 5, 3, 5));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userPanel.setSpacing(10.0);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userInput.setPrefWidth(325);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userInput.setStyle(\"-fx-background-radius: 30\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userPanel.setPadding(new Insets(3, 5, 3, 25));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userInput.setPrefWidth(275);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                userPanel.setSpacing(25.0);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        });"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        //handle input"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        if (!Objects.equals(input.trim(), \"\")) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox.getUserDialog(input, userImage));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            handleDukeOutput(input);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            userInput.clear();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private void handleDukeOutput(String input) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Storage database \u003d new Storage(\"data/tasksTable.csv\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            DukeCommandMatcher parser \u003d new DukeCommandMatcher(database);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            String response \u003d parser.handleCommand(input);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            DialogBox db;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (Objects.equals(response, Constants.EXITRESPONSE)) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                db \u003d DialogBox.getDukeDialog(Printer.printBye(), dukeImage);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                assert response !\u003d Constants.EXITRESPONSE : response;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                db \u003d DialogBox.getDukeDialog(response, dukeImage);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            dialogContainer.getChildren().add(db);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            dialogContainer.getChildren().add(DialogBox.getDukeDialog(e.getMessage(), dukeImage));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 94
    }
  },
  {
    "path": "src/main/java/duke/utils/Constants.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.dateformats.DateFormat;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.dateformats.DayOnlyFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.dateformats.StandardDateFormat;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class Constants {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Greeting for Duke."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String GREETING \u003d"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \"Hello/您好/こんにちは I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            + \"What can I do for you?\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Divider for Duke output."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String DIVIDER \u003d \"__________________________________________________\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Exit pattern of the exit command for Duke."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String EXITPATTERN \u003d (\"^(b|B)(y|Y)(e|E)$\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * List pattern of the list command for Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String LISTPATTERN \u003d (\"^(l|L)(i|I)?(s|S)(t|T)?$\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Done pattern of the done command for Duke."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String DONEPATTERN \u003d (\"^(d|D)(o|O)(n|N)(e|E)$\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * TODOPattern for Duke command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String TODOPATTERN \u003d (\"^(t|T)(o|O)(d|D)(o|O)$\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Deadline pattern of the deadline command for Duke."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String DEADLINEPATTERN \u003d (\"^(d|D)(e|E)(a|A)(d|D)(l|L)(i|I)(n|N)(e|E)$\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Event pattern of the event command for Duke."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String EVENTPATTERN \u003d (\"^(e|E)(v|V)(e|E)(n|N)(t|T)$\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Delete pattern of the delete command for Duke."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String DELETEPATTERN \u003d (\"^(d|D)(e|E)(l|L)(e|E)(t|T)(e|E)$\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Standard date format."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String DF_LOCAL_TIME \u003d \"yyyy-mm-dd\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String FINDPATTERN \u003d (\"^(f|F)(i|I)(n|N)(d|D)$\");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String HELPPATTERN \u003d (\"^(h|H)(e|E)(l|L)(p|P)$\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Default console width."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final int CONSOLEWIDTH \u003d 50;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final String EXITRESPONSE \u003d \"EXIT\";"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final Storage DEFAULTSTORAGE \u003d new Storage(\"data/tasksTable.csv\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static final List\u003cDateFormat\u003e DATE_FORMAT_LIST \u003d"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Arrays.asList(new DayOnlyFormat(), new StandardDateFormat());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 80
    }
  },
  {
    "path": "src/main/java/duke/utils/UtilFunction.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.regex.Matcher;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.util.regex.Pattern;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.dateformats.DateFormat;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.DateFormatException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * @author Eddy"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " * @version 1.0.0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": " */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class UtilFunction {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Util function used to match pattern of the string."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param patternStr the pattern you want to check"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param string the string to check"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return true if the string matches the string pattern"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static Boolean matchPattern(String patternStr, String string) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Pattern pattern \u003d Pattern.compile(patternStr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Matcher matcher \u003d pattern.matcher(string);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return matcher.find();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Util function used to format available date input to standard date format."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param dateString input string to format"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @return date in standard format \"MMM d yyyy\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @throws DateFormatException when input string date formal is invalid"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @see duke.exceptions.DateFormatException"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String formatDateToStandard(String dateString) throws DateFormatException {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM d yyyy\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        LocalDate ldt;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        for (DateFormat format: Constants.DATE_FORMAT_LIST) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (format.check(dateString)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                ldt \u003d format.mapToLocalDate(dateString);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                String standardDate \u003d formatter.format(ldt);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                return standardDate;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        throw new DateFormatException(\"The date format is not valid.\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * Util function used to print message within {@value duke.utils.Constants#CONSOLEWIDTH}."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     * @param output the string meant to be printed in the console"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static void printLimit(String output) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String[] sentences \u003d output.split(\"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        for (String sentence: sentences) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (sentence.length() \u003c Constants.CONSOLEWIDTH) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                System.out.println(sentence);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                assert sentence.length() \u003e\u003d Constants.CONSOLEWIDTH : \"sentence length: \" + sentence.length();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                wrapAndDisplay(sentence);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    private static void wrapAndDisplay(String sentence) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        String[] words \u003d sentence.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        int count \u003d 0;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        for (String word: words) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            count +\u003d word.length();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            if (count \u003c Constants.CONSOLEWIDTH) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                System.out.print(word + \" \");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                System.out.print(\u0027\\n\u0027 + word + \" \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                count \u003d word.length();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        System.out.print(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public static String getCurrentTime() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        SimpleDateFormat formatter \u003d new SimpleDateFormat(\"HH:mm\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Date now \u003d new Date(System.currentTimeMillis());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        return formatter.format(now);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 91
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" spacing\u003d\"5\" stylesheets\u003d\"@../css/dialog_box.css\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003cHBox fx:id\u003d\"fullInfo\" alignment\u003d\"BOTTOM_LEFT\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003cLabel fx:id\u003d\"timeStamp\" text\u003d\"timeStamp\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003cVBox fx:id\u003d\"nameAndDialog\" xmlns:fx\u003d\"http://javafx.com/fxml\" \u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    \u003cLabel fx:id\u003d\"name\" text\u003d\"name\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" maxWidth\u003d\"200\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003c/VBox\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003cCircle fx:id\u003d\"displayPicture\"  pickOnBounds\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 24
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" stylesheets\u003d\"@../css/main_window.css\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.ui.gui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003cHBox fx:id\u003d\"userPanel\" layoutY\u003d\"555.0\" prefWidth\u003d\"400.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"565.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"37.0\" promptText\u003d\"type \u0026quot;help\u0026quot; if do know where to start\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003cButton fx:id\u003d\"sendButton\"  mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"37.0\" prefWidth\u003d\"70.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003c/HBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"559.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-color: #99ccff#99ccff;\" stylesheets\u003d\"@../css/main_window.css\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 22
    }
  },
  {
    "path": "src/test/java/duke/DukeCommandMatcherTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class DukeCommandMatcherTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 5
    }
  },
  {
    "path": "src/test/java/duke/dateformats/StandardDateFormatTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.dateformats;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class StandardDateFormatTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void checkTest_correctFormatInput_trueResponse() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        StandardDateFormat sdf \u003d new StandardDateFormat();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(true, sdf.check(\"2020-09-20\"));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void checkTest_incorrectFormatInput_falseResponse() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        StandardDateFormat sdf \u003d new StandardDateFormat();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(false, sdf.check(\"Mon\"));"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void mapToLocalDateTest_correctFormat() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        StandardDateFormat sdf \u003d new StandardDateFormat();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(LocalDate.of(2020, 9, 25), sdf.mapToLocalDate(\"2020-09-25\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 26
    }
  },
  {
    "path": "src/test/java/duke/tasks/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.tasks;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void defaultConstructor_noInput_falseStatusTaskBuilt() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Task task \u003d new Task(\"my task\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(false, task.getStatus());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void normalConstructor_trueInput_trueStatusTaskBuilt() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Task task \u003d new Task(\"my task\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(true, task.getStatus());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 19
    }
  },
  {
    "path": "src/test/java/duke/utils/UtilFunctionTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "package duke.utils;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "import duke.exceptions.DateFormatException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "public class UtilFunctionTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void matchPatternTest() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(true,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "               UtilFunction.matchPattern(\"^(l|L)(i|I)?(s|S)(t|T)?$\", \"ls\"));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(true,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                UtilFunction.matchPattern(\"^(l|L)(i|I)?(s|S)(t|T)?$\", \"list\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void formatDateToFormatTest_standardInput_standardOutput() throws DateFormatException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        Assertions.assertEquals(\"Aug 20 2020\", UtilFunction.formatDateToStandard(\"2020-08-20\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    public void formateDateToFormatTest_invalidInput_exceptionThrown() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Assertions.assertEquals(0, UtilFunction.formatDateToStandard(\"20200820\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Assertions.fail();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        } catch (DateFormatException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "            Assertions.assertEquals(\"The input format of date is not valid\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "                    + \"please write date in the forms of \" + Constants.DF_LOCAL_TIME, e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chuyiting"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 35
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "ls"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "List"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "gibberish"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "deadLiNe"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "deadline return book /2020-08-08"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "deadline return book2 /20200808"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "liSt"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "event"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "event presentation"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "event presentation /2020-08-25"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "event presentation2 /20200826"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "ls"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "find"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "find book"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "java -classpath ..\\bin duke.duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/utils/*.java ../src/main/java/duke/storage/*.java ../src/main/java/duke/tasks/*.java ../src/main/java/duke/ui/*.java ../src/main/java/duke/exceptions/*.java ../src/main/java/duke/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chuyiting"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "chuyiting": 2,
      "-": 36
    }
  }
]
