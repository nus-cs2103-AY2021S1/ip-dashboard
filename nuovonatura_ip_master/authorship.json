[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 14
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    //Selective print list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    private static void printList(ArrayList\u003cTask\u003e lst, boolean printAll) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        for (int i \u003d 1; i \u003c\u003d lst.size(); i++) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            Task task \u003d lst.get(i - 1);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            if (printAll || !task.getStatus()) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                System.out.println(\"\\t\" + i + \". \" + task);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public static String[] command(String text) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        String commandList \u003d \"bye|list|(done|delete)[\\\\s]+[\\\\d]+|todo.*|deadline.*|event.*\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        if (text.matches(commandList)) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            String[] commandParaPair \u003d text.split(\" \", 2);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            return commandParaPair;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            throw new DukeException(\"\\tâ˜¹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public static int[] execute(String[] commandParaPair, ArrayList\u003cTask\u003e list, boolean running, int activeTasks)"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        switch (commandParaPair[0]) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                System.out.println(\"\\tIt was my pleasure assisting you.\\n\\tSee you next Time!\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                running \u003d false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                System.out.println(\"\\tHere are the tasks in your list:\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                printList(list, true);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                int taskNo \u003d Integer.parseInt(commandParaPair[1].replaceAll(\"[\\\\s]+\", \"\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (taskNo \u003e list.size()) { //If requested index is out of bound."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tYou don\u0027t have that many tasks!!!\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else { //If index can be found, set the task to be done and move it to the last."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    Task task \u003d list.get(taskNo - 1);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    list.remove(task);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    if (commandParaPair[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        task.setDone();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        list.add(task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        activeTasks--;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        System.out.println(\"\\tYou have finished this task!\\n\\t\" + task +"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                                \"\\n\\tLet\u0027s move on to the next one!\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        printList(list, false);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        System.out.println(\"\\tYou have deleted this task!\\n\\t\" + task +"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                                \"\\n\\tHere are other tasks on your list:\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        printList(list, true);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                if (commandParaPair.length \u003c 2) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    throw new DukeException(\"\\tâ˜¹ OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    Task newTask;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    if (commandParaPair[0].equals(\"todo\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        newTask \u003d new Todo(commandParaPair[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        String para \u003d commandParaPair[1];"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        String[] contentTimePair \u003d para.split(\" /by | /at \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        if (contentTimePair.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            throw new DukeException(\"\\tâ˜¹ OOPS!!! The time of a deadline / event cannot be empty.\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            if (commandParaPair[0].equals(\"deadline\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                                newTask \u003d new Deadline(contentTimePair[0], contentTimePair[1]);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                                newTask \u003d new Event(contentTimePair[0], contentTimePair[1]);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    list.add(activeTasks, newTask);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    activeTasks++;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    System.out.println(\"\\tadded: \" + newTask);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    System.out.println(\"\\tYou have \" + list.size() + \" tasks, \" + activeTasks + \" undone!\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                    printList(list, true);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        int[] pair \u003d new int[]{running ? 1 : 0, activeTasks};"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return pair;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        //To check if the conversation has ended."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        boolean running \u003d true;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        //Greetings."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        System.out.println(\"\\tHello!\\n\\tI am Baymax, your personal idle time companion.\" +"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                \"\\n\\tHow may I help you?\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        //Add List"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        ArrayList\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        //Keep track of number of tasks undone"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        int noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        while (running) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            String text \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                int[] pair \u003d execute(command(text), list, running, noOfTasks);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                running \u003d pair[0] \u003d\u003d 1;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                noOfTasks \u003d pair[1];"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            } catch (DukeException error) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "                System.out.println(error.getMessage());"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "            }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 112,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 14
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public boolean getStatus() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return \"[\" + getStatusIcon() + \"]\" + \" \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 26
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "blah"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "what"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "deadline return book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "event project meeting"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "deadline homework /by today"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "done 9"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "event lesson /at Friday 10-12am"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "delete 7"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "delete 4"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "SET JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nuovonatura"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nuovonatura": 2,
      "-": 20
    }
  }
]
