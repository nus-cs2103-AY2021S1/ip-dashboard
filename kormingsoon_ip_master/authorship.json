[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    useJUnitPlatform {}"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    mainClassName \u003d \"duke.Main\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 5,
      "-": 43
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "T\tfalse\t eat lunch"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "T\tfalse\t eat dinner"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "T\tfalse\t eat food"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 3
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * A Deadline class to represent tasking that are classified as deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private LocalDateTime durationFormatted;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for deadline task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task  Details of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param duration Duration assigned to the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Deadline(String task, String duration) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(task, Tasktype.DEADLINE, duration);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Overloaded constructor for the deadline class."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Details of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param duration Duration assigned to the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param isDone Completion status of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Deadline(String task, String duration, boolean isDone) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(task, Tasktype.EVENT, duration, isDone);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.durationFormatted \u003d LocalDateTime.parse(duration, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return String.format(\"%s (by: %s)\","
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                super.toString(), durationFormatted.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\")));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 40
    }
  },
  {
    "path": "src/main/java/duke/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 61
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Duke class representing the chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * author Kor Ming Soon"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for the Duke chatbot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        storage \u003d new Storage();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        taskList \u003d new TaskList(storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method to send the preamble and load, if any, existing list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void initialise() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            taskList.loadList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            System.out.print(e.getStackTrace());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method to initialise the acceptance of commands"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String acceptCommands(String input) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        //String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        //while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Parser parser \u003d new Parser(input, ui, taskList);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return parser.retrieveResponse();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method to retrieve the response of Duke."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param input user command."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return the String response."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String getResponse(String input) { // input - whatever the user type"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        // return the chunk of string"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.initialise();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return acceptCommands(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 56,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * A Event class to represent tasking that are classified as Events"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private LocalDateTime durationFormatted;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for event class"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Details of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param duration Duration assigned to the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Event (String task, String duration) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(task, Tasktype.EVENT, duration);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.durationFormatted \u003d LocalDateTime.parse(duration, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Overloaded constructor for the event class."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Details of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param duration Duration assigned to the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param isDone Completion status of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Event (String task, String duration, boolean isDone) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(task, Tasktype.EVENT, duration, isDone);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.durationFormatted \u003d LocalDateTime.parse(duration, DateTimeFormatter.ofPattern(\"dd-MM-yyyy HH:mm\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return String.format(\"%s (at: %s)\", super.toString(),"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                durationFormatted.format(DateTimeFormatter.ofPattern(\"d MMM yyyy, hh:mm a\")));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 42
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 12
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method to start running GUI for Duke."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param stage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To end duke."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public static void endDuke() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Platform.exit();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 43
    }
  },
  {
    "path": "src/main/java/duke/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        UserInterface ui \u003d new UserInterface();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                DialogBox.getDukeDialog(ui.sendWelcomeMessage(), dukeImage)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        );"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        if (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            );"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            Main.endDuke();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 60
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeCommandException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeIndexException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeListException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeTaskException;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Parser class to parse through the input given by the user."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private String parseMessage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private UserInterface ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for Parser."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param parseMessage Message that has to be parsed by the parser."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the parser to trigger printing events."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param taskList taskList that the Parser needs to keep track of."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Parser(String parseMessage, UserInterface ui, TaskList taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.parseMessage \u003d parseMessage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Initialises the parser to start processing the parseMessage. Continues until user terminates."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return the response by Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String start() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String command \u003d parseMessage.split(\" \")[0];"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String response \u003d \"\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                ByeCommand byeCommand \u003d new ByeCommand();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response \u003d byeCommand.execute(taskList, ui);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                ListCommand listCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response \u003d listCommand.execute(taskList, ui);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (command.equals(\"find\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                String wordToFind \u003d this.parseMessage.substring(command.length());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                FindCommand findCommand \u003d new FindCommand(wordToFind);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response \u003d findCommand.execute(taskList, ui);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                int index \u003d Integer.parseInt(parseMessage.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                DoneCommand doneCommand \u003d new DoneCommand(index);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response \u003d doneCommand.execute(taskList, ui);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                int index \u003d Integer.parseInt(parseMessage.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                DeleteCommand deleteCommand \u003d new DeleteCommand(index);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response \u003d deleteCommand.execute(taskList, ui);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (command.equals(\"event\") || command.equals(\"deadline\") || command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                String dissectedMessage \u003d this.parseMessage.substring(command.length());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response \u003d executeTask(command, dissectedMessage);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                String errorMessage \u003d \"Command is wrong. Please start with delete, \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        + \"list, done, deadline, todo or event.\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                throw new DukeCommandException(errorMessage);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            this.taskList.updateStorage();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (DukeCommandException | DukeIndexException | DukeTaskException | DukeListException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return ui.printError(\"INPUT DATE TIME FORMAT IS WRONG\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return ui.printError(e.getMessage());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Helper method to organize the different types of task that can be recorded."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasktype Type of task to be recorded."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param message Details of the task."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response from Duke."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeTaskException When there is an error in the input."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String executeTask(String tasktype, String message) throws DukeTaskException {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String[] parsedMessage \u003d null;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Task newTask \u003d null;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        int taskListSize \u003d this.taskList.getTaskSize();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            if (message.isEmpty()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                throw new IndexOutOfBoundsException();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (tasktype.equals(\"todo\")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                newTask \u003d new Todo(message);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (tasktype.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                parsedMessage \u003d message.split(\"/by \");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                newTask \u003d new Deadline(parsedMessage[0], parsedMessage[1]);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } else if (tasktype.equals(\"event\")) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                parsedMessage \u003d message.split(\"/at \");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                newTask \u003d new Event(parsedMessage[0], parsedMessage[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            this.taskList.addTask(newTask);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return ui.printAddTask(newTask.toString(), this.taskList.getTaskSize());"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String errorMessage \u003d \"You might have left your message or duration empty.\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            throw new DukeTaskException(errorMessage);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * retrieveResponse method to retrieve the response printed by Duke."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response by Duke."
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String retrieveResponse() {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return this.start();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 126
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Class to read the URL path to the locally saved tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private final String DEFAULTPATH \u003d \"./duke.txt\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private final Path path;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for the Storage object to track locally saved tasks."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * The storage object checks for any pre-existing files to load information."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * If not available, the storage object will create a file."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Storage() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        path \u003d Paths.get(DEFAULTPATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        File file \u003d new File(DEFAULTPATH);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        if (Files.notExists(this.path)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                e.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method for the storage to write the current session\u0027s task list locally into the computer."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param taskList List of task to be copied into the local computer."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void writeData(List\u003cTask\u003e taskList) throws IOException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        FileWriter file \u003d new FileWriter(DEFAULTPATH);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        for (Task tasking : taskList) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String toBeSaved \u003d \"\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            switch (tasking.getTasktype()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            case TODO:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                toBeSaved \u003d String.format(\"%s\\t%s\\t%s\","
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.getTasktype(),"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.isTaskDone(),"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.getTask());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            case EVENT:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            case DEADLINE:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                toBeSaved \u003d String.format(\"%s\\t%s\\t%s\\t%s\","
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.getTasktype(),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.isTaskDone(),"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.getTask(),"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        tasking.getDuration());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            file.write(toBeSaved + \"\\n\");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        file.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Storage to search and load from the local computer a list of tasks."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return Returns list of tasks that was historically written existing in the computer."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws IOException When there is no save file found."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public List\u003cTask\u003e load() throws IOException {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        // checks to see if a file is already supposed to be there"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Scanner sc \u003d new Scanner(path.toFile());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        List\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String[] storedTask \u003d sc.nextLine().split(\"\\t\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String tasktype \u003d storedTask[0];"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            boolean isDone \u003d storedTask[1].equals(\"true\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            Task taskToBeAdded \u003d null;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            switch (tasktype) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                taskToBeAdded \u003d new Todo(storedTask[2], isDone);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                taskToBeAdded \u003d new Deadline(storedTask[2], storedTask[3], isDone);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                taskToBeAdded \u003d new Event(storedTask[2], storedTask[3], isDone);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            taskList.add(taskToBeAdded);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 104
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Class to represent possible Tasks created by the user"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    protected Tasktype taskType;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    protected String duration;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Details of a task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param taskType Type of a task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param duration Time given to the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Task(String task, Tasktype taskType, String duration) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Overloaded constructor for a Task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Details of a task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param taskType Type of a task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param duration Time given to the task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param isDone The completion of a task."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Task(String task, Tasktype taskType, String duration, boolean isDone) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskType \u003d taskType;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Determines if the tick or cross will be assigned to a task."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Tick for completed task and vice versa."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return ASCII Tick or Cross"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return isDone ? \"\\u2713\" : \"\\u2718\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Changes the completion status of a task to be completed."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void makeDone() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Checks if a task is completed or not."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return boolean value if task is completed or not."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Retrieves the details of the task."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return Details of the task."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String getTask() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Retrieves the timing or duration which was assigned to the task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return The timing or duration assigned to the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String getDuration() {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return duration;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Retrives the type of tasking that was recorded."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return Type of task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Tasktype getTasktype() {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return taskType;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return String.format(\"[%s][%s] %s\", this.taskType, getStatusIcon(), this.task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 94
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * A Tasklist to handle operations pertaining to the Tasklist."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for the tasklist."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param storage Takes in the storage object for initialisation."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public TaskList(Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void clearList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method to begin loading the list through the storage."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws IOException When there is no pre-loaded file to load."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void loadList() throws IOException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskList \u003d storage.load();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Method to save the current Tasklist into the local storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws IOException When there is no pre-loaded file to write."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void updateStorage() throws IOException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.storage.writeData(this.taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To add new tasks to the Tasklist."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param newTask Task of which to be added."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void addTask(Task newTask) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskList.add(newTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To modify a tasking\u0027s completion status."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param index Position of the task in the list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void makeTaskDone(int index) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskList.get(index).makeDone();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To remove a tasking from the list."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param index Index of tasking desired for removal."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void removeTask(int index) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.taskList.remove(index);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To retrieve the details of a specific task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param index Index of the desired task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return Returns the task."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Task getTaskDetail(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To retrieve the current count of tasks in a list."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return total count of the tasks."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public int getTaskSize() {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 92
    }
  },
  {
    "path": "src/main/java/duke/Tasktype.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public enum Tasktype {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    TODO {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    },"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    EVENT {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return \"E\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    },"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    DEADLINE {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return \"D\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 22
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * A Todo class to represent tasking that are classified as Todo"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for Todo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Task detail."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Todo (String task) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(task, Tasktype.TODO, \"\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Overloaded constructor for Todo to, as default is set to not completed."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Task detail."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param isDone To indicate if the task is done or not."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public Todo (String task, boolean isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(task, Tasktype.TODO, \"\", isDone);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 26
    }
  },
  {
    "path": "src/main/java/duke/UserInterface.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Class to represent the User Interface of which a user interacts with."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class UserInterface {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private static final String LOGO \u003d"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \"       \\\\:.             .:/\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"        \\\\``._________.\u0027\u0027/ \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"         \\\\             / \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \" .--.--, / .\u0027:.   .\u0027:. \\\\\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"/__:  /  | \u0027::\u0027 . \u0027::\u0027 |\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"   / /   |`.   ._.   .\u0027|\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"  / /    |.\u0027         \u0027.|\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \" /___-_-,|.\\\\  \\\\   /  /.|\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"      // |\u0027\u0027\\\\.;   ;,/ \u0027|\\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"      `\u003d\u003d|:\u003d         \u003d:|\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"         `.          .\u0027\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"           :-._____.-:\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"          `\u0027\u0027       `\u0027\u0027\\n\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private static final String THUNDERBOLT \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \"                  .-~*~--,.   .-.\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"          .-~-. ./OOOOOOOOO\\\\.\u0027OOO`9~~-.\\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"        .`OOOOOO.OOM.OLSONOOOOO@@OOOOOO\\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"       /OOOO@@@OO@@@OO@@@OOO@@@@@@@@OOOO`.\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"       |OO@@@WWWW@@@@OOWWW@WWWW@@@@@@@OOOO).\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"     .-\u0027OO@@@@WW@@@W@WWWWWWWWOOWW@@@@@OOOOOO}\\n\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"    /OOO@@O@@@@W@@@@@OOWWWWWOOWOO@@@OOO@@@OO|\\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"   lOOO@@@OO@@@WWWWWWW\\\\OWWWO\\\\WWWOOOOOO@@@O.\u0027\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"    \\\\OOO@@@OOO@@@@@@OOW\\\\     \\\\WWWW@@@@@@@O\u0027.\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"     `,OO@@@OOOOOOOOOOWW\\\\     \\\\WWWW@@@@@@OOO)\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"      \\\\,O@@@@@OOOOOOWWWWW\\\\     \\\\WW@@@@@OOOO.\u0027\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"        `~c~8~@@@@WWW@@W\\\\       \\\\WOO|\\\\UO-~\u0027\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"             (OWWWWWW@/\\\\W\\\\    ___\\\\WO)\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"               `~-~\u0027\u0027     \\\\   \\\\WW\u003d*\u0027\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                         __\\\\   \\\\\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                         \\\\      \\\\\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                          \\\\    __\\\\\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                           \\\\  \\\\\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                            \\\\ \\\\\\n\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                             \\\\ \\\\\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                              \\\\\\\\\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                               \\\\\\\\\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                                \\\\\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"                                 \\\\\\n\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private static final String BORDER \u003d \"      \";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private static final String ERROR \u003d \"    ERROR: \";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private static final String NEWLINE \u003d \"\\n\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To print out the task that is just added to the list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Task of which to be added."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param totalNumber The prevailing number after a task is added."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return string to print whenever a task is added to the list."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String printAddTask(String task, int totalNumber) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String response \u003d BORDER + \"Steady! I add... wait ah..\" + NEWLINE;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        response +\u003d BORDER + BORDER + \"ADDED: \" + task + NEWLINE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        response +\u003d BORDER + \"Now you got \" + totalNumber + \" tasks\" + NEWLINE;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Preamble while the chat bot retrieves list of the tasks."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response from when user prompts List Command"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String listTask() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return BORDER + \"Retrieving your list, patient ah!\\n\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To print out the list of tasks in an ordered fashion."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param listNumber Index of the tasking in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task The details of the task itself."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response from Duke to list Command"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String printTask(int listNumber, String task) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String response \u003d String.format(\"%2d. %s\\n\", listNumber, task);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return BORDER + response;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * To print the preamble as well as the details of the task marked as done."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Task of which to be marked as done."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response from Duke to print Done command"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String printDone(String task) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String response \u003d BORDER + \"Swee la, task done liao:\" + NEWLINE;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        response +\u003d BORDER + BORDER + task + NEWLINE;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Preamble as well as printing of the sequence of deletion."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param task Task to be deleted."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param remaining Remaining number of tasks after deletion."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String printDelete(String task, int remaining) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String response \u003d BORDER + \"Delete liao boss:\" + NEWLINE;"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        response +\u003d BORDER + \"Remaining Tasks: \" + remaining + NEWLINE;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Standard error message to be printed."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param errorMessage The details of the error message itself."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String printError(String errorMessage) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return ERROR + errorMessage + NEWLINE;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Preamble for the initialisation of the Pikachu Chatbot."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response for initialisation and instruction for User."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String sendWelcomeMessage() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String startingMessage1 \u003d \"Pikachu: Hello, I am Pikachu! My pika service creates a to-do list for you!\\n\\n\""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"1. type \u0027list\u0027 and I list all that you said, along if it is completed\\n\""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"2. type either \u0027event\u0027, \u0027deadline\u0027, \u0027todo\u0027, followed by the task!\\n\""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"   2.1. if \u0027event\u0027, type the task followed by a \u0027/at \u003cduration\u003e\u0027 to indicate duration\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"   2.2. if \u0027deadline\u0027, type the task followed by a \u0027/by \u003cdeadline\u003e\u0027 to indicate deadline\\n\""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"   2.3. if \u0027delete\u0027 type the task followed by a number within the list index to delete\\n\""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"   2.4. if \u0027done\u0027 type the task followed by a number within the list index to mark it\\n\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"3. type \u0027done x\u0027 where x is the index of the item you want to be indicated done\\n\""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                + \"4. or you can say \u0027bye\u0027 to end us \u003c/3 Type your command:\\n\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String startingMessage2 \u003d \"Hello! I am PikaDuke, I can help you keep track of your tasks!\\n\";"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return startingMessage2;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Exit messsage when the chat bot terminates."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response when the user ends the interaction with the bot."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String exitMessage() {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String exitMessage \u003d \"Pikachu: Pika byebye! THUNDERBOLT!\\n\";"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return THUNDERBOLT + exitMessage;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 145
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * ByeCommand for when the Bye command is prompted by User"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Execution command for Bye."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasklist list of tasks to be referenced from."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the command to prompt."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return exit message for when the users stops interacting with the bot."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeListException"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeIndexException"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String execute(TaskList tasklist, UserInterface ui) throws DukeListException, DukeIndexException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return ui.exitMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 26
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeListException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * Abstract command class"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "abstract class Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Commmand that all commands are able to execute, with varying purposes dependent on the command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasklist list of tasks to be referenced from."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the command to prompt."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response from Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeListException For when list is empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeIndexException Index given does not match the list."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public abstract String execute(TaskList tasklist, UserInterface ui) throws DukeListException, DukeIndexException;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 25
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeIndexException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DeleteCommand class for when delete command is prompted by User"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for delete command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param index index of the task belonging in the list to be deleted."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Execution command for Delete."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasklist list of tasks to be referenced from."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the command to prompt."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeIndexException When the input index does not match the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return response for when user deletes a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String execute(TaskList tasklist, UserInterface ui) throws DukeIndexException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        if (this.index \u003e tasklist.getTaskSize() - 1 || this.index \u003c 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String errorMessage \u003d \"Wrong list number input. \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"Please put a number between 1 and \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + tasklist.getTaskSize();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            throw new DukeIndexException(errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        String response \u003d ui.printDelete(tasklist.getTaskDetail(index).toString(), tasklist.getTaskSize() - 1);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        tasklist.removeTask(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return response;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 44
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeIndexException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DoneCommand class for when Done command is prompted by User"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for DoneCommand."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param index index of tasking in the list for which to be completed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Execution command for Done"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasklist list of tasks to be referenced from."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the command to prompt."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeIndexException When the input index does not match the list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return Message sent when the user completes a task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String execute(TaskList tasklist, UserInterface ui) throws DukeIndexException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        if (index \u003e tasklist.getTaskSize() - 1 || index \u003c 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String errorMessage \u003d \"Wrong list number input. \""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + \"Please put a number between 1 and \""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    + tasklist.getTaskSize();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            throw new DukeIndexException(errorMessage);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        tasklist.makeTaskDone(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return ui.printDone(tasklist.getTaskDetail(index).toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 44
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeListException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * FindCommand class to execute find command when given by user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private String wordToFind;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for FindCommand"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param wordToFind word give by user to filter out relevant tasks."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public FindCommand(String wordToFind) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        this.wordToFind \u003d wordToFind;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Execution command to begin search for with relevant word given."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasklist list of tasks to be referenced from."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the command to prompt."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return a filtered list according to the user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeListException When the input index does not match the list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String execute(TaskList tasklist, UserInterface ui) throws DukeListException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        TaskList tempTaskList \u003d new TaskList(new Storage());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        tempTaskList.clearList();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        for (int i \u003d 0; i \u003c tasklist.getTaskSize(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            Task taskInCheck \u003d tasklist.getTaskDetail(i);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            if (taskInCheck.getTask().contains(wordToFind)) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                tempTaskList.addTask(taskInCheck);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        if (tempTaskList.getTaskSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            throw new DukeListException(\"Your search result yields nothing.\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        ListCommand listCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        return listCommand.execute(tempTaskList, new UserInterface());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 49
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeListException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * ListCommand class to execute list command when given by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Execute command to begin execution of \u0027List\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param tasklist list of tasks to be referenced from."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param ui UserInterface for the command to prompt."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @return a list of tasking."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @throws DukeListException When the list is empty."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public String execute(TaskList tasklist, UserInterface ui) throws DukeListException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        if (tasklist.getTaskSize() !\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            String response \u003d ui.listTask();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            for (int i \u003d 0; i \u003c tasklist.getTaskSize(); i++) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                response +\u003d ui.printTask(i + 1, tasklist.getTaskDetail(i).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            throw new DukeListException(\"Your list is empty.\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 33
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DukeCommandException class for when the commands or inputs in Duke behaves out of expectations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DukeCommandException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for DukeCommandException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param str Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DukeCommandException(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DukeException class for when the index of tasks in Duke behaves out of expectations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for DukeException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param str Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DukeException(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeIndexException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DukeIndexException class for when the index of tasks in Duke behaves out of expectations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DukeIndexException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for DukeIndexException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param str Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DukeIndexException(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeListException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DukeListException class for when the list of tasks in Duke behaves out of expectations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DukeListException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for DukeListException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param str Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DukeListException(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 17
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeTaskException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * DukeTaskException class for when Duke behaves out of expectations."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " * @author Kor Ming Soon"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class DukeTaskException extends DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * Constructor for DukeTaskException"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     * @param str Error message."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public DukeTaskException(String str) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        super(str);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 17
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefHeight\u003d\"104.0\" prefWidth\u003d\"388.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "      \u003cBorderPane maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "              \u003cLabel fx:id\u003d\"dialog\" style\u003d\"-fx-background-color: #00BFFF; -fx-background-radius: 15;\" text\u003d\"Label\" wrapText\u003d\"true\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "               \u003cBorderPane.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                  \u003cInsets bottom\u003d\"5.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "               \u003c/BorderPane.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "               \u003cpadding\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                  \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "               \u003c/padding\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "               \u003cfont\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                  \u003cFont name\u003d\"Century Gothic\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "               \u003c/font\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \u003c/Label\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "      \u003cBorderPane prefHeight\u003d\"104.0\" prefWidth\u003d\"102.0\"\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003ccenter\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "              \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"103.0\" fitWidth\u003d\"94.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003c/center\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "      \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 36
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.effect.Blend?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.image.Image?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.layout.BorderPane?\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"605.0\" prefWidth\u003d\"388.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"duke.MainWindow\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"44.0\" prefWidth\u003d\"315.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"318.0\" layoutY\u003d\"560.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"28.0\" prefWidth\u003d\"70.0\" style\u003d\"-fx-background-radius: 10;\" text\u003d\"Send\"\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \u003cFont name\u003d\"Dubai Bold\" size\u003d\"18.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"388.0\" style\u003d\"-fx-background-image: bg.jpg;\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"553.0\" prefWidth\u003d\"390.0\"\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    \u003cchildren\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        \u003cBorderPane prefHeight\u003d\"76.0\" prefWidth\u003d\"396.0\"\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                     \u003ccenter\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                \u003cBorderPane prefHeight\u003d\"98.0\" prefWidth\u003d\"367.0\" style\u003d\"-fx-background-color: #daa520; -fx-background-radius: 20;\" styleClass\u003d\"header-section\" BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                    \u003ccenter\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                        \u003cLabel id\u003d\"header-text\" prefHeight\u003d\"68.0\" prefWidth\u003d\"205.0\" text\u003d\"PikaDuke\" textFill\u003d\"#f8f8f8\"\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                 \u003cfont\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                    \u003cFont name\u003d\"Dubai Medium\" size\u003d\"52.0\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                 \u003c/font\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                              \u003c/Label\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                    \u003c/center\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                           \u003ceffect\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                              \u003cBlend /\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                           \u003c/effect\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                           \u003cleft\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                              \u003cImageView fitHeight\u003d\"98.0\" fitWidth\u003d\"100.0\" style\u003d\"-fx-translate-x: 20; -fx-scale-x: 0.9; -fx-scale-y: 0.9;\"\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                 \u003cimage\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                    \u003cImage url\u003d\"@../images/icon.png\" /\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                 \u003c/image\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                              \u003c/ImageView\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                           \u003c/left\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                                \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                     \u003c/center\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                     \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        \u003cInsets top\u003d\"2.5\" /\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                     \u003c/VBox.margin\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                        \u003c/BorderPane\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    \u003c/children\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                \u003c/VBox\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 58
    }
  },
  {
    "path": "src/test/java/ListCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Tasklist;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.UserInterface;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeListException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class ListCommandTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Tasklist tasklist \u003d new Tasklist(storage);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void invalidListCommand() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        tasklist.loadList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            new ListCommand().execute(tasklist, new UserInterface());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (DukeListException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            assertEquals(\"Your list is empty.\", e.getMessage());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 28
    }
  },
  {
    "path": "src/test/java/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Tasklist;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.exception.DukeTaskException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Tasklist tasklist \u003d new Tasklist(storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void addInvalidTask() throws IOException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        tasklist.loadList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            parser.commandTasks(tasklist, \"todo\", \"\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        } catch (DukeTaskException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "            assertEquals(\"You might have left your message or duration empty.\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "                    e.getMessage());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 29
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void validTodo() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Todo dummyTodo \u003d new Todo(\"get out of Hospital\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        assertEquals(\"[T]\" + \"[✘]\" + \" get out of Hospital\", dummyTodo.toString());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    public void invalidTodo() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        Todo dummyTodo \u003d new Todo(\"this task is completed\", true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "        assertEquals(\"[T]\" + \"[✓] this task is completed\", dummyTodo.toString());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 19
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": "javac  -cp ..\\src -Xlint:unchecked -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kormingsoon"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kormingsoon": 3,
      "-": 20
    }
  }
]
