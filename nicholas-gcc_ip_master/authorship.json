[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "D | 1 | homework  | Oct 10 2010"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "D | 1 | homework | Aug 26 2020"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "E | 0 | concert | Aug 28 2020"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 4
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String identifier;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.identifier \u003d \"D\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2); //e.g. do homework/ by 1999-10-21"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] dateArray \u003d desArray[1].split(\" \", 2); //1999-10-21"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.date \u003d LocalDate.parse(dateArray[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    //separates date from description"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String fullDescription \u003d super.getDescription();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d fullDescription.split(\"/\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return desArray[0];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] timeArray \u003d desArray[1].split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"[D]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \"(\" + timeArray[0] + \": \" + getDate() + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 41
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Greet();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        ArrayList\u003cTask\u003e TaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String file \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                String errorMessage \u003d DukeExceptionHandler.handleException(input);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                if (errorMessage !\u003d null) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    System.out.println(errorMessage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    if (!input.contains(\"done\") \u0026\u0026 !input.contains(\"list\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        if (input.contains(\"todo\")) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            String[] textArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            Todo todo \u003d new Todo(textArray[1]);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            TaskList.add(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            add(todo, TaskList);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            writeToFile(file, new Todo(textArray[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        if (input.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            String[] textArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            Deadline deadline \u003d new Deadline(textArray[1]);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            TaskList.add(deadline);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            add(deadline, TaskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            writeToFile(file, new Deadline(textArray[1]));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        if (input.contains(\"event\")) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            String[] textArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            Event event \u003d new Event(textArray[1]);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            TaskList.add(event);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            add(event, TaskList);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            writeToFile(file, new Event(textArray[1]));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            String[] textArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            int taskNum \u003d Integer.parseInt(textArray[1]);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            Task deletedTask \u003d TaskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            TaskList.remove(deletedTask);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                            System.out.println(\"Noted. I\u0027ve removed this task:\\n\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                                    + deletedTask + \"\\nNow you have \" + TaskList.size()"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                                    + \" tasks in the list\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        printList(TaskList);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    } else if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        String[] textArray \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        int taskNum \u003d Integer.parseInt(textArray[1]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        Task doneTask \u003d TaskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        doneTask.markAsDone();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n\" + doneTask);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                        replaceDone(file, doneTask.getDescription());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            Bye();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "       //put 2 catch blocks here"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"File not found\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"Something went wrong: \" + e.getMessage());"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"Date must be in the YYYY-MM-DD format!\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void Greet() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"Hello, I\u0027m Duke\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void printList(ArrayList\u003cTask\u003e TaskList) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        for (Task task : TaskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"     \" + (TaskList.indexOf(task) + 1) + \".\" + task);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void add(Task task, ArrayList\u003cTask\u003e TaskList) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\\n\" + \"       \" + task);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"     Now you have \" + TaskList.size() + \" tasks in the list\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void Bye() {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void writeToFile(String filePath, Task task) throws IOException, FileNotFoundException {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (task instanceof Todo) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fw.write(((Todo) task).getIdentifier() + \" | \" + (task.getDone() ? 1 : 0) + \" | \" + task.getDescription() + \"\\n\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fw.write(((Deadline) task).getIdentifier() + \" | \" + (task.getDone() ? 1 : 0) + \" | \" + task.getDescription() + \"| \" + ((Deadline) task).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        else {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fw.write(((Event) task).getIdentifier() + \" | \" + (task.getDone() ? 1 : 0) + \" | \" + task.getDescription() + \"| \" + ((Event) task).getDate() + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static void replaceDone(String filePath, String replaceWith) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            // input the file content to the StringBuffer \"input\""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            BufferedReader file \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            StringBuffer inputBuffer \u003d new StringBuffer();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            while ((line \u003d file.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                inputBuffer.append(line);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                inputBuffer.append(\u0027\\n\u0027);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            file.close();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            String inputStr \u003d inputBuffer.toString();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            inputStr \u003d inputStr.replace(\"| 0 | \" + replaceWith, \"| 1 | \" + replaceWith);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            // write the new string with the replaced line OVER the same file"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            FileOutputStream fileOut \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fileOut.write(inputStr.getBytes());"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            fileOut.close();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            System.out.println(\"Problem reading file.\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 148,
      "-": 5
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 14
    }
  },
  {
    "path": "src/main/java/DukeExceptionHandler.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class DukeExceptionHandler {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public static String handleException(String input) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        if (input.equals(\"todo\") || input.equals(\"deadline\") || input.equals(\"event\")) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            //tasks created with no description"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            InvalidDescriptionException error \u003d new InvalidDescriptionException(input);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            return error.toString();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        } else if (!input.contains(\"todo\") \u0026\u0026 !input.contains(\"deadline\") \u0026\u0026 !input.contains(\"event\")"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "                \u0026\u0026 !input.contains(\"done\") \u0026\u0026 !input.equals(\"list\") \u0026\u0026 !input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            WrongInputException error \u003d new WrongInputException(input);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "            return error.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 18
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String identifier;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.identifier \u003d \"E\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2); //e.g. do homework/ by 1999-10-21"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] dateArray \u003d desArray[1].split(\" \", 2); //1999-10-21"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.date \u003d LocalDate.parse(dateArray[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDate() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return this.date.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    //separates date from description"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String fullDescription \u003d super.getDescription();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d fullDescription.split(\"/\", 2);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return desArray[0];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] desArray \u003d this.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        String[] timeArray \u003d desArray[1].split(\" \", 2);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"[E]\" + \"[\" + getStatusIcon() + \"] \" + getDescription() + \"(\" + timeArray[0] + \": \" + getDate() + \")\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 42
    }
  },
  {
    "path": "src/main/java/InvalidDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class InvalidDescriptionException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public InvalidDescriptionException(String message) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"Description is invalid. Please specify with more details.\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 11
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    protected String identifier;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public boolean getDone() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return description;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return getStatusIcon() + this.description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 35
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    private String identifier;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        this.identifier \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String getIdentifier() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return identifier;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"[T]\" + \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 19
    }
  },
  {
    "path": "src/main/java/WrongInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "public class WrongInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public WrongInputException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "        return \"Input not in the correct format.\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 6
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "nicholas-gcc"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "nicholas-gcc": 1,
      "-": 20
    }
  }
]
