[
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Duke(String filepath) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.taskList \u003d this.storage.readTasks();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.ui \u003d new Ui();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.ui.showWelcome();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                Command command \u003d Parser.parse(this.ui.readCommand());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                if (command !\u003d null) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    command.execute(this.taskList, this.ui, this.storage);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    isExit \u003d command.isDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String filepath \u003d \"/data/taskList.txt\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Duke duke \u003d new Duke(filepath);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        duke.run();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 41
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 7
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] inputArray \u003d command.split(\"\\\\s+\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            switch (inputArray[0]) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new ByeCommand();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"\":"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new ToDoCommand(command);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new DeadlineCommand(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new EventCommand(command);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new DoneCommand(inputArray);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new DeleteCommand(inputArray);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                return new ListCommand(inputArray);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                throw new DukeException(\"I\u0027m not sure what you\u0027re talking about.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 29
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String filepath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    Storage(String filepath) throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        int i \u003d filepath.lastIndexOf(\"/\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (i !\u003d -1) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            String directory \u003d filepath.substring(0, i);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            new File(directory).mkdirs();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.file \u003d new File(filepath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.file.createNewFile();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Problem reading file.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public TaskList readTasks() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Scanner scanner \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                taskList.add(input);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            System.out.println(\"Problem reading file.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void writeToFile(TaskList taskList) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            taskList.forEach(task -\u003e {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    fileWriter.write(task.print() + System.lineSeparator());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                } catch (IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            });"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void appendToFile(Task task) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(this.filepath, true);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fileWriter.write(task.print() + System.lineSeparator());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 71
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void add(Task task) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks.add(task);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void add(String task) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        // for reading from file"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] input \u003d task.split(\"\\\\s\\\\|\\\\s\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        boolean isDone \u003d input[1].equals(\"1\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        switch (input[0]) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Event event \u003d new Event(input[2], isDone, LocalDate.parse(input[3]));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.add(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ToDo todo \u003d new ToDo(input[2], isDone);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.add(todo);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Deadline deadline \u003d new Deadline(input[2], isDone, LocalDate.parse(input[3]));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.tasks.add(deadline);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task markAsDone(int position) throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (position \u003c\u003d 0 || position \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Invalid task.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.tasks.get(position - 1).markAsDone();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task delete(int position) throws DukeException {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (position \u003c\u003d 0 || position \u003e this.tasks.size()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Invalid task.\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.tasks.remove(position - 1);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showList(Ui ui) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showHorizontalLine();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ui.showIndentedMessage(\"No tasks added.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            int position \u003d 1;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                ui.showIndentedMessage(position + \". \" + task);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                position++;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showHorizontalLine();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showList(LocalDate date, Ui ui) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showHorizontalLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.tasks.size() \u003c\u003d 0) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ui.showIndentedMessage(\"No tasks added.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            int position \u003d 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            boolean hasTask \u003d false;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            for (Task task : this.tasks) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                if ((task instanceof Event || task instanceof Deadline)"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                        \u0026\u0026 task.getDate().equals(date)) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    ui.showIndentedMessage(position + \". \" + task);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                    hasTask \u003d true;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                position++;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            if (!hasTask) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                ui.showIndentedMessage(\"No tasks on that date.\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showHorizontalLine();"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void forEach(Consumer\u003c? super Task\u003e consumer) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.tasks.forEach(consumer);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 97
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private static final String horizontalLine \u003d \"      \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private static final String indentation \u003d \"      \";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Scanner scanner;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String readCommand() throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.scanner.hasNext()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return scanner.nextLine().trim();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"No next line\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String logo \u003d indentation + \" ____        _        \\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + \"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + \"Have a nice day.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showError(String message) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + \"Error: \" + message);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showTaskAdded(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + \"Task added: \" + task);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showTaskDeleted(Task task) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + \"Task deleted: \" + task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showTaskMarkedDone(Task task) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + \"Task marked as done: \" + task);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showIndentedMessage(String message) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(indentation + message);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showHorizontalLine() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.out.println(horizontalLine);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 72
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ByeCommand implements Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 15
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public interface Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    boolean isDone();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 12
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DeadlineCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DeadlineCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Deadline deadline \u003d Deadline.of(this.command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        storage.appendToFile(deadline);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showTaskAdded(deadline);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 26
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DeleteCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String[] command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DeleteCommand(String[] command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length !\u003d 2) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Task task \u003d taskList.delete(Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ui.showTaskDeleted(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 32
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class DoneCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String[] command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public DoneCommand(String[] command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length !\u003d 2) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            Task task \u003d taskList.markAsDone(Integer.parseInt(command[1]));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            ui.showTaskMarkedDone(task);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            storage.writeToFile(taskList);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 32
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class EventCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public EventCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Event event \u003d Event.of(this.command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        storage.appendToFile(event);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showTaskAdded(event);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ListCommand implements Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String[] command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ListCommand(String[] command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            taskList.showList(ui);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else if (command.length \u003d\u003d 2) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(command[1]);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                taskList.showList(date, ui);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                throw new DukeException(\"Please provide date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 36
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ToDoCommand implements Command {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    String command;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ToDoCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ToDo toDo \u003d ToDo.of(this.command);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        taskList.add(toDo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        storage.appendToFile(toDo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showTaskAdded(toDo);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public boolean isDone() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private LocalDate deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Deadline(String title, LocalDate deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Deadline(String title, boolean isDone, LocalDate deadline) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Deadline of(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 9) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Deadline cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] split \u003d command.substring(9).split(\"\\\\s+/by\\\\s+\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Deadline(split[0], LocalDate.parse(split[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Please provide date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.deadline;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String date \u003d this.deadline.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"D | \" + super.print() + \" | \" + this.deadline;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private LocalDate duration;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Event(String title, LocalDate duration) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Event(String title, boolean isDone, LocalDate duration) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.duration \u003d duration;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static Event of(String command) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 6) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Event cannot be empty.\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String[] split \u003d command.substring(6).split(\"\\\\s+/at\\\\s+\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Wrong format.\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return new Event(split[0], LocalDate.parse(split[1]));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Please provide date in yyyy-mm-dd format.\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return this.duration;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String date \u003d this.duration.format(DateTimeFormatter.ofPattern(\"d MMM yyyy\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"E | \" + super.print() + \" | \" + this.duration;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 50
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String title;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task(String title) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task(String title, boolean isDone) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.title \u003d title;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public Task markAsDone() throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (this.isDone) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"Already marked as done.\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            return this;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String status \u003d this.isDone ? \"✓\" : \"✗\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[\" + status + \"] \" + this.title;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String status \u003d this.isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return status + \" | \" + this.title;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public abstract LocalDate getDate();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 41
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package main.java.duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ToDo(String title) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public ToDo(String title, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        super(title, isDone);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public static ToDo of(String command) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        if (command.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "            throw new DukeException(\"ToDo cannot be empty.\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String content \u003d command.substring(5);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return new ToDo(content);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public String print() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return \"T | \" + super.print();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 36
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Parser;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void listCommand() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertDoesNotThrow(() -\u003e Parser.parse(\"list\"));"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 13
    }
  },
  {
    "path": "src/test/java/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String horizontalLine \u003d \"      \u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    private String indentation \u003d \"      \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void welcomeTest() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showWelcome();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String logo \u003d indentation + \" ____        _        \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ysr25"
        },
        "content": "                + indentation + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String expected \u003d horizontalLine + \"\\n\" + indentation + \"Hello from\\n\" + logo + \"\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertEquals(expected, outContent.toString().stripTrailing());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    public void showGoodbye() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        ui.showGoodbye();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String expected \u003d horizontalLine + \"\\n\" + indentation + \"Have a nice day.\\n\" + horizontalLine;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertEquals(expected, outContent.toString().stripTrailing());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 48
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import main.java.duke.task.ToDo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertDoesNotThrow;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    void markTaskAsDone() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        Task task \u003d new ToDo(\"hi\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertDoesNotThrow(() -\u003e task.markAsDone());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        String expected \u003d \"[T][✓] hi\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ysr25"
        },
        "content": "        assertEquals(expected, task.toString());"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ysr25"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ysr25": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ysr25"
        },
        "content": "hello :)"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ysr25"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ysr25"
        },
        "content": "todo buy textbook"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ysr25"
        },
        "content": "deadline CS2103T project /by 2020-08-30"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ysr25"
        },
        "content": "event CS2100 lecture /at tue 4-6pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ysr25"
        },
        "content": "done 100"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list 2020-08-30"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ysr25"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ysr25"
        },
        "content": "list 2020-08-29"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ysr25"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ysr25": 15
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ysr25"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ysr25"
        },
        "content": "java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ysr25": 2,
      "-": 19
    }
  }
]
