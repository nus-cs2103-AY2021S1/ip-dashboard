[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 6
    }
  },
  {
    "path": "command.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "T|0| read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "D|0| return |2020-10-09"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "T|0| return book "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "D|0| buy book |2030-09-09"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "T|0| sleep"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 5
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto init"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if exist \"%JAVA_EXE%\" goto init"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":init"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Get command-line arguments, handling Windows variants"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if not \"%OS%\" \u003d\u003d \"Windows_NT\" goto win9xME_args"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":win9xME_args"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Slurp the command line arguments."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set CMD_LINE_ARGS\u003d"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set _SKIP\u003d2"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":win9xME_args_slurp"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if \"x%~1\" \u003d\u003d \"x\" goto execute"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set CMD_LINE_ARGS\u003d%*"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %CMD_LINE_ARGS%"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":end"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 100
    }
  },
  {
    "path": "src/main/java/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * A kind of the tasks, which has a specific deadline"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected LocalDate deadline;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Deadline(String description, LocalDate deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Deadline(String description, LocalDate deadline, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    private String getDeadline() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return deadline.format(DateTimeFormatter.ofPattern(\" MMM dd yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return \"[D][\" + getStatusIcon()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                + \"]\" + description + \"(by:\" + getDeadline() + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void printDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(toString());"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 37
    }
  },
  {
    "path": "src/main/java/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * Represents a robot who can help the user to make todo list."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * A \u003ccode\u003eDuke\u003c/code\u003e object is an instance of such robots."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * launch the Duke application, initialize the robot."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        ui.start();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Parser parser \u003d new Parser(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        parser.handleCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            parser.updateFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(e);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"IOException from FileWriter!!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * Main method of the project, launch the project."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @param args"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        new Duke(\"./command.txt\").run();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 46,
      "-": 3
    }
  },
  {
    "path": "src/main/java/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * Exceptions which are specific to Duke"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public DukeException(String ErrorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(ErrorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 10
    }
  },
  {
    "path": "src/main/java/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * A kind of the tasks, which has a specific time period"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected String time;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Event(String description, String time) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Event(String description, String time, boolean isDone) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return \"[E][\" + getStatusIcon()"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                + \"]\" + description + \"(at:\" + time + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void printDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(toString());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 29
    }
  },
  {
    "path": "src/main/java/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * Represents a handler of the commands."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * It parses the command the user types in and handles the instructions given"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Parser(TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * Parses the user inputs and call corresponding methods to handle the instructions"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleCommand() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            String command \u003d sc.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            switch (command) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"bye\":"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    handleBye();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"list\":"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    handleList();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleDone();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleDelete();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleTodo();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleDeadline();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleEvent();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleFind();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        handleDefault();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    } catch (DukeException e) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"     \" + e.getMessage());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"bye\""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleBye() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"list\""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleList() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.print(\"     \" + (i + 1) + \".\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            taskList.get(i).printDescription();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"done\""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleDone() throws DukeException {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String doneCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (doneCommand.isEmpty()) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I need to know the index of the task to be done!\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            index \u003d Integer.parseInt(doneCommand.stripLeading());"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"     \\u2639 Please enter a valid integer!!\");"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 Your number is too large!!\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Task currentTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        currentTask.markAsDone();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.print(\"     \");"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        currentTask.printDescription();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"delete\""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleDelete() throws DukeException {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String deleteCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        int index \u003d 0;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (deleteCommand.isEmpty()) {"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I need to know the index of the task to be deleted!\");"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            index \u003d Integer.parseInt(deleteCommand.stripLeading());"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"     \\u2639 Please enter a valid integer!!\");"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            return;"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (index \u003e taskList.size()) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 Your number is too large!!\");"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Task currentTask \u003d taskList.get(index - 1);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Noted! I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.print(\"     \");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        currentTask.printDescription();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"find\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleFind() throws DukeException {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (input.isEmpty()) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! I need to know the keyword!!\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String keyword \u003d input.replaceFirst(\" \", \"\");"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        for (int i \u003d 0, count \u003d 1; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            if (taskList.get(i).description.contains(keyword)) {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                System.out.print(\"     \" + count + \".\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                taskList.get(i).printDescription();"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                count++;"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"todo\""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleTodo() throws DukeException {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String todoDescription \u003d sc.nextLine();"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (todoDescription.isEmpty()) {"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Todo todo \u003d new Todo(todoDescription);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.print(\"       \");"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        todo.printDescription();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"deadline\""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleDeadline() throws DukeException {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String deadlineCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (deadlineCommand.isEmpty()) {"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (!deadlineCommand.contains(\"/by\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The timing of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String[] strings \u003d deadlineCommand.split(\"/by\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String deadlineDescription \u003d strings[0];"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String time \u003d strings[1];"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\" yyyy-MM-dd\");"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Deadline deadline \u003d new Deadline(deadlineDescription, date);"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.print(\"        \");"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        deadline.printDescription();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * handles instruction \"event\""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleEvent() throws DukeException{"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String eventCommand \u003d sc.nextLine();"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (eventCommand.isEmpty()) {"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        if (!eventCommand.contains(\"/at\")) {"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"\\u2639 OOPS!!! The timing of an event cannot be empty.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String[] strings \u003d eventCommand.split(\"/at\");"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String eventDescription \u003d strings[0];"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        String date \u003d strings[1];"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Event event \u003d new Event(eventDescription, date);"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.print(\"        \");"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        event.printDescription();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * throws exceptions when the command is wrongly typed"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void handleDefault() throws DukeException {"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        throw new DukeException(\"\\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * updates the task list in the local hard disk"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void updateFile() throws IOException {"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        FileWriter fw \u003d new FileWriter(\"./command.txt\");"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        FileWriter fwAppend \u003d new FileWriter(\"./command.txt\", true);"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            Task task \u003d taskList.get(i);"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            String line;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            if(task instanceof Todo) {"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                int done \u003d task.isDone? 1:0;"
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                line \u003d \"T|\" + done + \"|\" + task.description;"
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            } else if(task instanceof Deadline) {"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                int done \u003d task.isDone? 1:0;"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                line \u003d \"D|\" + done + \"|\" + task.description + \"|\" +"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                        ((Deadline) task).deadline.format(DateTimeFormatter.ofPattern(\"yyyy-MM-dd\"));"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                int done \u003d task.isDone? 1:0;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                line \u003d \"T|\" + done + \"|\" + task.description + \"|\" + ((Event) task).time;"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                fw.write(line + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            } else if (i \u003c taskList.size() - 1) {"
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                fwAppend.write(line + \u0027\\n\u0027);"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                fwAppend.write(line);"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        fwAppend.close();"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 321
    }
  },
  {
    "path": "src/main/java/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * Represents the local storage of the task list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    ArrayList\u003cTask\u003e taskArrayList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.taskArrayList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * fills the arraylist with the tasks in the hard disk"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @throws IOException"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void fill() throws IOException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Scanner sc;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            f.createNewFile();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            String next \u003d sc.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            String[] token \u003d next.split(\"\\\\|\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            String first \u003d token[0];"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            boolean isDone \u003d (Integer.parseInt(token[1])) \u003d\u003d 1? true: false;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            switch(first) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"T\": {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    String description \u003d token[2];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    taskArrayList.add(new Todo(description, isDone));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"D\": {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    String description \u003d token[2];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    String time \u003d token[3];"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    LocalDate date \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    taskArrayList.add(new Deadline(description, date, isDone));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                case \"E\": {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    String description \u003d token[2];"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    String time \u003d token[3];"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    taskArrayList.add(new Event(description, time, isDone));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * loads the task list from local hard disk"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @return the arraylist that contains the tasks loaded from the local hard disk"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws DukeException {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            fill();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            throw new DukeException(\"Cannot find the file!!\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return taskArrayList;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 79
    }
  },
  {
    "path": "src/main/java/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * Tasks that Duke can do for the users"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * Visualizes the isDone() to a String"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @return the icon that represents whether the task is done"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * marks the task as done"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * prints the task in a easy-read manner"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void printDescription() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"[\" + getStatusIcon() + \"] \" + description);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 41
    }
  },
  {
    "path": "src/main/java/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * Represents a container that holds the tasks"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    ArrayList\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * gives the size of the arraylist"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @return the size of the task list"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * returns a task corresponding to the index given"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @param i index of the wanted task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @return the task corresponding to the index i"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Task get(int i) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        return tasks.get(i);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * adds a new task to the task list"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @param task a new task to be added to the task list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected void add(Task task) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * Deletes a task from the task list"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * @param i index of the task to be removed"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected void remove(int i) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        tasks.remove(i);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 51
    }
  },
  {
    "path": "src/main/java/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * A kind of the tasks, which contains simply a description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void printDescription() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"[T][\" + getStatusIcon() + \"]\" + description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 19
    }
  },
  {
    "path": "src/main/java/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * The User Interface of the robot"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " * It prints the greeting message and remind user to input"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____\\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * prints out the logo and greeting message"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke\\n     What can I do for you?\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"    ____________________________________________________________\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     * prints out the loading error message"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    protected void showLoadingError() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        System.out.println(\"Oops!! There is a Loading error!!\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 30
    }
  },
  {
    "path": "src/test/java/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import main.java.Deadline;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        assertEquals(\"[D][\\u2718] read book(by: Oct 09 2020)\","
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                new Deadline(\" read book\", LocalDate.of(2020, 10, 9)).toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 14
    }
  },
  {
    "path": "src/test/java/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import main.java.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void toStringTest() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        assertEquals(\"[E][\\u2718] read book(at: night)\","
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "                new Event(\" read book\", \" night\").toString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 12
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import main.java.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import main.java.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import main.java.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import main.java.Todo;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void sizeTest() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        tasks.add(new Todo(\"read\"));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        tasks.add(new Event(\"sleep\", \"noon\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        assertEquals(2, taskList.size());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    public void getTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        tasks.add(new Todo(\"read\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        Event event \u003d new Event(\"sleep\", \"noon\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        tasks.add(event);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "        assertEquals(event, taskList.get(1));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 30
    }
  },
  {
    "path": "text-ui-test/command.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "T|1| read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "D|0| return book |2020-10-10"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "T|0| buy bread"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "deadline return book /by 2020-10-10"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "todo buy bread"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "todo"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "blah"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "deadline take a nap"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "event"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "event have dinner"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "list"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "done"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "done this"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "delete"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "delete 6"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "delete this"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 47
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Ringo1225"
        },
        "content": "java -classpath ../bin main.java.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Ringo1225": 1,
      "-": 37
    }
  }
]
