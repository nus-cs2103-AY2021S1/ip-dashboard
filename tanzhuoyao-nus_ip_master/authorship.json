[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Deadline(boolean isComplete, int index, String instructions, String date) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.date \u003d parseTime(date);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Deadline(boolean isComplete, int index, String instructions, LocalDate date) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate parseTime(String time) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[D][✓] \" + this.instructions + \" (by: \" + outputFormatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[D][✗] \" + this.instructions + \" (by: \" + outputFormatter.format(this.date) + \")\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 35
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            tasks \u003d new TaskList(storage.loadData());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ui.showLoadingError();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void run() throws Exception {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.ui.initialise(tasks, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public static void main(String[] args) throws Exception {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        new Duke(\"data/duke.ser\").run();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 3,
      "tanzhuoyao-nus": 22
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private LocalDate time;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Event(boolean isComplete, int index, String instructions, String time) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.time \u003d parseTime(time);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Event(boolean isComplete, int index, String instructions, LocalDate time) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate getTime() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return this.time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public LocalDate parseTime(String time) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-d\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        DateTimeFormatter outputFormatter \u003d DateTimeFormatter.ofPattern(\"d MMM yyyy\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[E][✓] \" + this.instructions + \" (at: \" + outputFormatter.format(this.time) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[E][✗] \" + this.instructions + \" (at: \" + outputFormatter.format(this.time) + \")\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 34
    }
  },
  {
    "path": "src/main/java/ResponseException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class ResponseException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public ResponseException(String errorMessage) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 5
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public List\u003cTask\u003e loadData() throws Exception {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            FileInputStream readData \u003d new FileInputStream(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ObjectInputStream readStream \u003d new ObjectInputStream(readData);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ArrayList\u003cTask\u003e loadedList \u003d (ArrayList\u003cTask\u003e) readStream.readObject();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            readStream.close();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            list \u003d loadedList;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }catch (Exception ex) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (ex instanceof FileNotFoundException) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                throw new FileNotFoundException(\"☹ OOPS!!! I can\u0027t find your file!\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                throw new Exception(\"☹ OOPS!!! There was an error in loading file.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void writeData(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        try{"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            FileOutputStream writeData \u003d new FileOutputStream(filePath);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            ObjectOutputStream writeStream \u003d new ObjectOutputStream(writeData);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            writeStream.writeObject(list);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            writeStream.flush();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            writeStream.close();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 42
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.io.Serializable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Task implements Serializable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected boolean isComplete;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected int index;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    protected String instructions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Task(boolean isComplete, int index, String instructions) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.isComplete \u003d isComplete;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.instructions \u003d instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    // mark a task as complete"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Task markDone() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this instanceof Todo) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Todo(true, this.index, this.instructions);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (this instanceof  Deadline) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Deadline(true, this.index, this.instructions, ((Deadline) this).getDate());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else if (this instanceof  Event) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Event(true, this.index, this.instructions, ((Event) this).getTime());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return new Task(true, this.index, this.instructions);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[✓] \" +  this.instructions;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[✗] \" + this.instructions;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 35
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    private List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return this.list;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String iterateToDo() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        for (Task task : list) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            if (task \u003d\u003d null) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                output +\u003d Integer.toString(counter) + \". \" + task.toString() + \"\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                counter++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void deleteTask(int number) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list.remove(number - 1);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void addTask(int counter, Task task) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        this.list.add(counter, task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 40
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public Todo(boolean isComplete, int index, String instructions) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        super(isComplete, index, instructions);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        if (this.isComplete) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[T][✓] \" + this.instructions;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            return \"[T][✗] \" + this.instructions;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 14
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void showWelcome() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String hor_line \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String logo \u003d \" _ .-\u0027) _               .-. .-\u0027)     (\u0027-.  \\n\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \"( (  OO) )              \\\\  ( OO )  _(  OO)  \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" \\\\     .\u0027_  ,--. ,--.   ,--. ,--. (,------. \\n\""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" ,`\u0027--..._) |  | |  |   |  .\u0027   /  |  .---\u0027 \\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  |  \\\\  \u0027 |  | | .-\u0027) |      /,  |  |     \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  |   \u0027 | |  |_|( OO )|     \u0027 _)(|  \u0027--.  \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  |   / : |  | | `-\u0027 /|  .   \\\\   |  .--\u0027  \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" |  \u0027--\u0027  /(\u0027  \u0027-\u0027(_.-\u0027 |  |\\\\   \\\\  |  `---. \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                + \" `-------\u0027   `-----\u0027    `--\u0027 \u0027--\u0027  `------\u0027 \\n\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        System.out.println(hor_line + \"Hello! I\u0027m Duke la\\n\" + \"What can I do for you ah?\\n\" + hor_line);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void showLoadingError() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        System.out.println(\"☹ AIYO!!! I cannot load the file sia...\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void initialise(TaskList list, Storage storage) throws Exception {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        String hor_line \u003d \"____________________________________\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e todo_list \u003d list.getList();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        showWelcome();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        int counter \u003d todo_list.size();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    System.out.println(hor_line + \"Bye bye. See you soon bro!\\n\" + hor_line);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    sc.close();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    System.out.println(hor_line + \"Here are the things you need to do lor: \\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    System.out.println(list.iterateToDo() + hor_line);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                } else if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    if (command.equals(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        throw new ResponseException(hor_line + \"☹ AIYO!!! Please state which task to delete la... \\n\" +"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                hor_line);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String index \u003d command.substring(command.length() - 1);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        int number \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        System.out.println(hor_line + \"Task deleted liao: \\n\" + todo_list.get(number - 1).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                \"You got \" + Integer.toString(counter - 1) + \" tasks left. \\n\" + hor_line);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        list.deleteTask(number);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        storage.writeData(todo_list);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        counter --;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    if (command.equals(\"done\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        throw new ResponseException(hor_line + \"☹ AIYO!!! Please state which task is done la... \\n\" +"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                hor_line);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String index \u003d command.substring(command.length() - 1);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        int number \u003d Integer.parseInt(index) - 1;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        todo_list.set(number, todo_list.get(number).markDone());"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        System.out.println(hor_line + \"Swee! Now I will mark this as done: \\n\" +"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                todo_list.get(number).toString() + \"\\n\" + hor_line);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        storage.writeData(todo_list);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    if (command.equals(\"todo\")) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        throw new ResponseException(hor_line + \"☹ AIYOYO!!! The description of a todo cannot be empty la... \\n\""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                + hor_line);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String instructions \u003d command.substring(5);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        list.addTask(counter, new Todo(false, counter + 1, instructions));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        System.out.println(hor_line + \"Okok. I add for you: \\n\" +"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                todo_list.get(counter).toString() + \"\\n\" +"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                \"You got \" + Integer.toString(counter + 1) + \" tasks in the list.\\n\" + hor_line);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        storage.writeData(todo_list);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    if (command.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        throw new ResponseException(hor_line +"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                \"☹ AIYO!!! The description of a deadline cannot be empty la... \\n\" + hor_line);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String instructions \u003d command.substring(9);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String[] arr \u003d instructions.split(\"/by\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        instructions \u003d arr[0].substring(0, arr[0].length() - 1);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String date \u003d arr[1].substring(1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        list.addTask(counter, new Deadline(false, counter + 1, instructions, date));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        System.out.println(hor_line + \"Okok. I help you add this task: \\n\" +"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                todo_list.get(counter).toString() + \"\\n\" + \"You got \" +"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                Integer.toString(counter + 1) + \" tasks in the list.\\n\" + hor_line);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        storage.writeData(todo_list);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    if (command.equals(\"event\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        throw new ResponseException(hor_line + \"☹ AIYOYO!!! The description of a event cannot be empty la... \\n\""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                + hor_line);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String instructions \u003d command.substring(5);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String[] arr \u003d instructions.split(\"/at\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        instructions \u003d arr[0].substring(0, arr[0].length() - 1);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        String time \u003d arr[1].substring(1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        list.addTask(counter, new Event(false, counter + 1, instructions, time));"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        System.out.println(hor_line + \"Okay. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                + todo_list.get(counter).toString() + \"\\n\" +  \"You got \" +"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                                Integer.toString(counter + 1) + \" tasks in the list.\\n\" + hor_line);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        storage.writeData(todo_list);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                        counter++;"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                }else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                    throw new ResponseException(hor_line + \"☹ AIYO!!! What do you mean sia? :-( \\n\""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                            + hor_line);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            } catch (ResponseException exception){"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "                System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 122
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testEmptyTaskList(){"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"\", new TaskList().iterateToDo());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testFilledTaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.add(new Todo(false, 1, \"Wash clothes\"));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"1. [T][✗] Wash clothes\\n\", new TaskList(list).iterateToDo());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testDeleteTask() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.add(new Todo(false, 1, \"Wash clothes\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        list.add(new Deadline(false, 2, \"Do testing\", \"2020-10-10\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        TaskList test \u003d new TaskList(list);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        test.deleteTask(1);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"1. [D][✗] Do testing (by: 10 Oct 2020)\\n\", test.iterateToDo());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 29
    }
  },
  {
    "path": "src/test/java/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        public void testTodo() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            Task test \u003d new Todo(false, 1, \"Wash Clothes\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "            assertEquals(\"[T][✗] Wash Clothes\", test.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testDeadline() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Task test \u003d new Deadline(false, 1, \"Wash Clothes\", \"2020-10-23\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"[D][✗] Wash Clothes (by: 23 Oct 2020)\", test.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    public void testMarkDone() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        Task test \u003d new Event(false, 1, \"Wash Car\", \"2020-11-19\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        test \u003d test.markDone();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "        assertEquals(\"[E][✓] Wash Car (at: 19 Nov 2020)\", test.toString());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 23
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "todo wash car"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "deadline project /by tonight 2359"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "list"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "event party /at Orchard 10pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "tanzhuoyao-nus": 7
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "tanzhuoyao-nus"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "-": 37,
      "tanzhuoyao-nus": 1
    }
  }
]
