[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "jar {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    manifest {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        attributes \"Main-Class\": \"Duke\""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 23,
      "-": 43
    }
  },
  {
    "path": "data/tasks.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "1.[T][✘] 3"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "2.[T][✘] 4"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 2
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Marco is a desktop app for task management, optimized for use via a Command Line Interface (CLI) while still having the benefits of a Graphical User Interface (GUI). If you can type fast, Marco can get your contact management tasks done faster than traditional GUI apps."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "### Feature 1 "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Add and delete tasks into an existing task list specified (in the form of todo, event or deadline)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "### Feature 2"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Mark tasks as done when they are completed."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "### Feature 3"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "List all the existing tasks in the task list with their description and status."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Time related to event task, and deadline to deadline task will also be shown."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "### Feature 4"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Search for tasks by keyword in their descriptions."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "### Feature 5"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Tag tasks with a specific tag."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 1. `help` "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Lists all available commands with their formats and usages."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Here are the list of commands that Marco understands:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- help                                    [get a full list of commands and their usage]"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- bye                                     [say goodbye to Marco]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- list                                    [list down all existing tasks in the task list]"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- done TASK_NUMBER                        [mark the task indexed at TASK_NUMBER as done]"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- find KEY_WORD                           [search for tasks contains KEY_WORD in description]"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- delete TASK_NUMBER                      [delete the task indexed at TASK_NUMBER]"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- todo DESCRIPTION                        [add a todo task with DESCRIPTION]"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- event DESCRIPTION /at YYYY-MM-DD        [add an event with DESCRIPTION at YYYY-MM-DD]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- deadline DESCRIPTION /by YYYY-MM-DD     [add a deadline with DESCRIPTION at YYYY-MM-DD]"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 2. `bye` "
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Get the farewell message and terminate the program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "             Awwww, I guess you are gonna leave... o(TヘTo)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "             Marco will keep track of your tasks nicely! "
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "             Call me when you need me! "
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "             Marco is always here waiting for you ☀♪ ~ "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "             Bye~ Have a nice day~ (●\u0027◡\u0027●)ﾉ♥ "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 3. `list` "
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Lists all existing tasks in the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "(if the task list is not empty):"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Here are the tasks in your list:   "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "1.[T][✓] dance practice"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "2.[E][✘] Marco\u0027s Bday (at: Oct 02 2020)   "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "3.[D][✘] prepare gift (by: Sep 28 2020) "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "(if the task list is empty)"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Oops, your list is currently empty. Add some tasks first!"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 4. `find KEY_WORD` "
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Search for tasks that contains certain keyword in their description."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`find practice`"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "(if there is at least one task found to contain the input keyword):"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Here are the matching tasks in your list:  "
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[T][✓] dance practice"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "(if there is no task found to contain the input keyword):"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "There is no matching task in your list! "
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 4. `done TASK_NUMBER` "
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Mark a task as done."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Nice! I\u0027ve marked this task as done: "
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[T][✓] dance practice"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 5. `delete TASK_NUMBER` "
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Delete a task."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Got it. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[T][✘] dance practice"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 6. `tag TASK_NUMBER TAG` "
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Attach a tag to a task."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`tag 3 urgent`"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Nice! I\u0027ve added the tag \u003curgent\u003e for the following task:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[D][✘] prepare gift (by: Sep 28 2020) \u003curgent\u003e"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 7. `todo DESCRIPTION` "
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Create a todo task with a description."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`todo dance practice`"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[T][✘] dance practice"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Now you have 1 tasks in the list."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 8. `event DESCRIPTION /at YYYY-MM-DD` "
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Create an event task with a description and a time."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`event meeting /at 2020-09-21`"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[E][✘] meeting (at: Sep 21 2020)"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "#### 9. `deadline DESCRIPTION /by YYYY-MM-DD` "
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "- Create a deadline task with a description and a time."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "`deadline submit paper /by 2020-09-21`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Expected outcome (example):"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "[D][✘] submit paper (by: Sep 21 2020)"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 169,
      "-": 15
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a specific type of task of the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * that has deadline information stored."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d \"D\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.by \u003d LocalDate.parse(by,inputFormat);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description, isDone, \"D\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.by \u003d LocalDate.parse(by,inputFormat);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String byTime \u003d by.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return super.toString() + \"(by: \" + byTime + \")\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                + (this.tag \u003d\u003d null ? \"\" : (\" \u003c\" + this.tag + \"\u003e\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 33
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents an interactive chat bot named \"Duke\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * who can manage simple tasks for users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected TaskList tasks;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Image k \u003d new Image(this.getClass().getResourceAsStream(\"/images/k.png\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Image marco \u003d new Image(this.getClass().getResourceAsStream(\"/images/marco.png\"));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE_TOP \u003d    \"╭⋟──────────❀• *₊。❀°。─╮\\n\";"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE_BOTTOM \u003d \"╰─────────────────────⋞╯\\n\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for Duke chat bot."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param filePath the relative path of assigned"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *                 file for reading and writing of data."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(ui.showLoadingError());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method simulate the interaction between"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Duke and human users."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        while (ui.getIn().hasNextLine()) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String command \u003d ui.getUserCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Parser.respond(command, ui, tasks, storage.filePath);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This is the main method which makes use of run method."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * A new Duke chat bot will be initiated by reading from and writing"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * into the file of relative path \"data/tasks.txt\"."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args Unused."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return Nothing."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        new Duke(\"data/tasks.txt\").run();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.setSpacing(25.0);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setTitle(\"♡ Marco ♡\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stage.setMinWidth(500.0);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        mainLayout.setPrefSize(500.0, 600.0);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setPrefSize(485, 535);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.setPrefWidth(425.0);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Display welcome messages when the user opens the chat bot."
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().greet(), marco));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Handle user input sent by clicking."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        //Handle user input sent by return on keyboard."
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        });"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Duke testBot \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String formattedInput \u003d LINE_TOP + \"                     \""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                              + userInput.getText() + \u0027\\n\u0027 + LINE_BOTTOM;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label userText \u003d new Label(formattedInput);"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText(),testBot));"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getUserDialog(formattedInput, k),"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(userInput.getText(),testBot), marco)"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private String getResponse(String input, Duke testBot) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return Parser.respond(input, testBot.ui, testBot.tasks, testBot.storage.filePath);"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 184,
      "-": 4
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents an event marked by the user"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * that has time information stored."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for an event."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param at String containing time information of the event."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d \"E\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.at \u003d LocalDate.parse(at,inputFormat);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for an event."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param isDone Boolean value indicating if the event is completed."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param at String containing time information of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Event(String description, boolean isDone, String at) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description, isDone,\"E\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        DateTimeFormatter inputFormat \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.at \u003d LocalDate.parse(at,inputFormat);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String atTime \u003d at.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\"));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return super.toString() + \"(at: \" + atTime + \")\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                (this.tag \u003d\u003d null ? \"\" : (\" \u003c\" + this.tag + \"\u003e\"));"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 44
    }
  },
  {
    "path": "src/main/java/FileReading.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a reader class that can read content from files"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * in local environment."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class FileReading {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static String printFileContents(String filePath) throws FileNotFoundException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        File f \u003d new File(filePath); // create a File for the given file path"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Scanner s \u003d new Scanner(f); // create a Scanner using the File as the source"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(\"Here is the current task status: \\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        while (s.hasNext()) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String str \u003d s.nextLine();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            output \u003d output + str + \u0027\\n\u0027;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(str);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 22
    }
  },
  {
    "path": "src/main/java/FileWriting.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a writer class that can write content into files"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * in local environment."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class FileWriting {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.write(textToAdd);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath, true); // create a FileWriter in append mode"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.write(textToAppend);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 20
    }
  },
  {
    "path": "src/main/java/InvalidInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a class of exceptions that are caused"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * by invalid inputs."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class InvalidInputException extends Exception {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public InvalidInputException(String message) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 9
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            stage.setTitle(\"♡ Marco ♡\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Image k \u003d new Image(this.getClass().getResourceAsStream(\"/images/k.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private Image marco \u003d new Image(this.getClass().getResourceAsStream(\"/images/marco.png\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE_TOP \u003d    \"╭⋟──────────────❀• *₊。❀°。─╮\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE_BOTTOM \u003d \"╰─────────────────────────⋞╯\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.getChildren().add("
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getDukeDialog(new Ui().greet(), marco));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Duke testBot \u003d new Duke(\"data/tasks.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String formattedInput \u003d LINE_TOP"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                + userInput.getText() + \u0027\\n\u0027 + LINE_BOTTOM;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label userText \u003d new Label(formattedInput);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Label dukeText \u003d new Label(getResponse(userInput.getText(),testBot));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getUserDialog(formattedInput, k),"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                DialogBox.getDukeDialog(getResponse(userInput.getText(),testBot),marco)"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        );"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private String getResponse(String input, Duke testBot) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return Parser.respond(input, testBot.ui, testBot.tasks, testBot.storage.filePath);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 63
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a parser that deals with making sense of the user command."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * How the parser will respond to users\u0027 command."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param command  Full command by the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param ui       Ui used in responding."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param taskList Task list referred to in the interaction."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param filePath The relative path to assigned file for reading"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     *                 and writing of data."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return String Response to be returned"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static String respond(String command, Ui ui, TaskList taskList, String filePath) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String[] pieces \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (pieces[0] !\u003d null) : \"Incorrect splitting.\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (command.equals(\"bye\")) { // terminating command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            return ui.bye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (command.equals(\"help\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            return ui.getHelp();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (command.equals(\"list\")) { // listing command"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (taskList.list.isEmpty()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.emptyList();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                Storage storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                TaskList tasks;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String s \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    s \u003d ui.returnAllTasks(tasks);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    e.printStackTrace();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return s;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"find\")) { // listing command"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (taskList.list.isEmpty()) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.emptyList();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.returnRelevantTasks(taskList, pieces[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"done\")) { // Mark Done task command"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (pieces.length \u003d\u003d 1) { // task number is missing"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.markDoneFailure();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    int task \u003d Integer.parseInt(pieces[1]); // get the task number"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    if (task \u003e taskList.noOfTasks) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        return ui.uncreatedTask(); // task has not been created"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        assert (taskList.list.get(task - 1) !\u003d null) : \"Incorrect index.\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        Task cur \u003d taskList.list.get(task - 1);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        cur.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        Storage.updateTasks(taskList.getNoOfTasks(), taskList.list, filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        return ui.markDoneSuccessful(cur);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    return ui.incorrectDoneFormat();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"delete\")) { // delete command"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (pieces.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.incompleteDeleteCommand();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                int num \u003d Integer.valueOf(pieces[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (num \u003e taskList.noOfTasks) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    return ui.uncreatedTask();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    assert (taskList.list.get(num - 1) !\u003d null) : \"Incorrect index.\";"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    Task removed \u003d taskList.list.get(num - 1);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    taskList.deleteTask(removed);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    Storage.updateTasks(taskList.getNoOfTasks(), taskList.list, filePath); // update storage"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    return ui.deleteSuccessful(removed, taskList);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else if (pieces[0].equals(\"tag\")) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String[] p \u003d pieces[1].split(\" \");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            int task \u003d Integer.parseInt(p[0]); // get the task number"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (task \u003e taskList.noOfTasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.uncreatedTask(); // task has not been created"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                assert (taskList.list.get(task - 1) !\u003d null) : \"Incorrect index.\";"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                Task cur \u003d taskList.list.get(task - 1);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String tag \u003d p[1];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                cur.setTag(tag);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                Storage.updateTasks(taskList.getNoOfTasks(), taskList.list, filePath);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return ui.setTagSuccessful(tag,cur);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (pieces.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    String s \u003d Parser.incompleteCommand(ui, pieces[0]);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    return s;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    return successfulCommand(ui, taskList, pieces[0], pieces[1], filePath);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static String successfulCommand (Ui ui, TaskList taskList, String firstCommandWord,"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                            String secondCommandWord, String filePath){"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String[] array;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String s \u003d \"\";"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        switch (firstCommandWord) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                t \u003d new ToDo(secondCommandWord);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                array \u003d secondCommandWord.split(\"/by \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.missingDeadline();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    t \u003d new Deadline(array[0], array[1]);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                array \u003d secondCommandWord.split(\"/at \");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (array.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ui.missingEventTime();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    t \u003d new Event(array[0], array[1]);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (t.description !\u003d \"\") {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            taskList.addTask(t);"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Storage.updateTasks(taskList.getNoOfTasks() - 1, taskList.list, filePath);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            return ui.addSuccessful(t, taskList.getNoOfTasks() - 1 );"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            return s;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static String incompleteCommand(Ui ui, String command) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                stringToReturn \u003d ui.missingDescription(\"todo\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                stringToReturn \u003d ui.missingDescription(\"deadline\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                stringToReturn \u003d ui.missingDescription(\"event\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                stringToReturn \u003d ui.unknownCommand();"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (stringToReturn !\u003d \"\") : \"Switch statement error.\";"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 172
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a class for storage that deals with loading tasks"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * from the file and saving tasks in the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String filePath;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String load() throws FileNotFoundException {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            return FileReading.printFileContents(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (FileNotFoundException e) { // if the required file/path directory is not yet created"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            System.out.println(\"Creating the storage file...\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (!f.getParentFile().exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                f.getParentFile().mkdirs(); //create directory if not created"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    f.createNewFile(); // create file if not created"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } catch (Exception ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    ex.printStackTrace();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            // read the file again"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                return FileReading.printFileContents(filePath);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            } catch (FileNotFoundException ex) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                ex.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return FileReading.printFileContents(filePath);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public static void updateTasks(int count, List\u003cTask\u003e list, String filePath) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String output \u003d \"\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        for (int i \u003d 1; i \u003c count + 1; i++) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Task cur \u003d list.get(i - 1);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            String currentTask \u003d \"\" + i + \".\" + cur + \"\\n\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            output \u003d output + currentTask;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            FileWriting.writeToFile(filePath, output);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 63
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a task of the user. A task object will have its description,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * completion status and task type stored."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected String type;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    protected String tag;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description The detailed description of the task created."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.tag \u003d null;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a task."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description The detailed description of the task created."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param isDone The completion status of the task."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param type The type of the task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Task(String description, boolean isDone, String type) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * A getter for icon that shows completion status of a task."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return A tick for completed task, a cross for uncompleted task."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to mark a task as done."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (!isDone) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert(this.isDone) : \"Mark down failed.\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to mark a task as deleted."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void markAsDeleted() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void setTag(String tag) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.tag \u003d tag;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to set the type of a task."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void setType(String type) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (type \u003d\u003d \"T\" | type \u003d\u003d \"D\" | type \u003d\u003d\"E\") : \"Incorrect type.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return \"[\" + this.type + \"][\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 82
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.text.ParseException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Date;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.text.SimpleDateFormat;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a list of tasks that can execute operations like"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * add and delete tasks inside."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public int noOfTasks;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Default constructor for a task list without any task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a task list with given String input."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param tasks Multiple lines of strings that are formatted"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * in a specific way to represent task information of existing task(s)."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public TaskList(String tasks) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.noOfTasks \u003d 0;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String lines[] \u003d tasks.split(\"\\\\r?\\\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        List\u003cString\u003e taskInfo \u003d Arrays.asList(lines);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        if (!taskInfo.isEmpty()) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            for (String command : taskInfo) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (command.length() \u003c 3) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                command \u003d command.substring(3);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String[] pieces \u003d command.split(\"]\", 3);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String type \u003d pieces[0];"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String icon \u003d pieces[1].substring(pieces[1].length() - 1); // status icon"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                boolean isDone \u003d (icon.equals(\"\\u2713\")); // \\u2713 is the icon for ✓"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String description \u003d \"\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String tag \u003d null;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (pieces[2].contains(\"\u003c\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    String[] smallerPieces \u003d pieces[2].split(\"\u003c\", 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    description \u003d (smallerPieces[0]).substring(1);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    tag \u003d smallerPieces[1].substring(0, smallerPieces[1].length() - 1);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    description \u003d pieces[2].substring(1);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                Task t \u003d new Task(\"\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String[] array;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String OLD_FORMAT \u003d \"MMM dd yyyy\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                String NEW_FORMAT \u003d \"yyyy-MM-dd\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"T\":"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"D\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        array \u003d description.split(\"\\\\(by: \");"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String oldDateString \u003d array[1];"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String newDateString;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        SimpleDateFormat sdf \u003d new SimpleDateFormat(OLD_FORMAT);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        Date d \u003d null;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            d \u003d sdf.parse(oldDateString);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        } catch (ParseException e) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        sdf.applyPattern(NEW_FORMAT);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        newDateString \u003d sdf.format(d);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new Deadline(array[0], isDone, newDateString);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    case \"E\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        array \u003d description.split(\"\\\\(at: \");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String oldDateStr \u003d array[1];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        String newDateStr;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        SimpleDateFormat simpleDateFormat \u003d new SimpleDateFormat(OLD_FORMAT);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        Date date \u003d null;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            date \u003d simpleDateFormat.parse(oldDateStr);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        } catch (ParseException e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                            e.printStackTrace();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        simpleDateFormat.applyPattern(NEW_FORMAT);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        newDateStr \u003d simpleDateFormat.format(date);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        t \u003d new Event(array[0], isDone, newDateStr);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                if (tag !\u003d null) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                    t.setTag(tag);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                list.add(t);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                noOfTasks++;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * A getter of number of tasks in the task list."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param args unused"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * return Number of tasks"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public int getNoOfTasks() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return this.noOfTasks;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Add task to the task list."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param task Task to be added"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * return nothing"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list.add(task);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        noOfTasks ++;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Delete task from the task list."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param task Task to be deleted"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * return nothing"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void deleteTask(Task task) {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.list.remove(task);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        noOfTasks --;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 142
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a to-do task without any specific time attached."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.type \u003d \"T\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * Constructor for a to-do."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param description Description of the to-do."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param isDone Boolean value indicating if the to-do is completed."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @return nothing"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        super(description, isDone, \"T\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return super.toString() + (this.tag \u003d\u003d null ? \"\" : (\" \u003c\" + this.tag + \"\u003e\"));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 24
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.InputStream;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " * Represents a class for storage that deals with interactions with the user."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private final PrintStream out;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE_TOP \u003d    \"╭⋟───────────────────────────❀• *₊。❀°。─╮\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String LINE_BOTTOM \u003d \"╰──────────────────────────────────────⋞╯\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String HELP \u003d \"Here are the list of commands that Marco understands:\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- help\\n\" +"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[get a full list of commands and their usage]\\n\" +"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- bye\\n\" +"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[say goodbye to Marco]\\n\" +"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- list\\n\" +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[list down all existing tasks in the task list]\\n\" +"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- done TASK_NUMBER\\n\" +"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[mark the task indexed at TASK_NUMBER as done]\\n\" +"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- find KEY_WORD\\n\" +"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[search for tasks contains KEY_WORD in description]\\n\" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- delete TASK_NUMBER\\n\" +"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[delete the task indexed at TASK_NUMBER]\\n\" +"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- todo DESCRIPTION\\n\" +"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[add a todo task with DESCRIPTION]\\n\" +"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- event DESCRIPTION /at YYYY-MM-DD\\n\" +"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[add an event with DESCRIPTION at YYYY-MM-DD]\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"- deadline DESCRIPTION /by YYYY-MM-DD\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"[add a deadline with DESCRIPTION at YYYY-MM-DD]\\n\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String GREETING\u003d \"Yo ~ This is M-A-R-C-O Marco!ヾ(≧∇≦*)ゝ \\n\" +"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"The best task manager from the Puppy Universe U｡･ｪ･｡U \\n\" +"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Is there anything that I can do for you?\\n\" +"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Type \u0027help\u0027 to view the list of commands available \\n\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    private static final String BYE \u003d \"Awwww, I guess you are gonna leave... o(TヘTo) \\n\" +"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Marco will keep track of your tasks nicely! \\n\" +"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Call me when you need me! \" +"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Marco is always here waiting for you ☀♪ ~ \" +"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \"Bye~ Have a nice day~ (●\u0027◡\u0027●)ﾉ♥ \\n\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this(System.in, System.out);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Ui(InputStream in, PrintStream out) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.in \u003d new Scanner(in);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        this.out \u003d out;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public Scanner getIn() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return in;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to greet the user."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String greet() {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return LINE_TOP + GREETING + LINE_BOTTOM;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to say good bye to the user."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String bye() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return LINE_TOP + BYE + LINE_BOTTOM;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getHelp() {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return this.HELP;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to get command from the user."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String getUserCommand() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String fullInputLine \u003d in.nextLine();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return fullInputLine;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to print all the tasks in the task list."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * @param taskList The task list used for printing."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void printAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(returnAllTasks(taskList));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String returnAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        int num \u003d taskList.getNoOfTasks();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (num !\u003d 0) : \"There is no existing task in your list! \";"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        for (int i \u003d 1; i \u003c num + 1; i++) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Task cur \u003d taskList.list.get(i - 1);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            stringToReturn +\u003d (\"\" + i + \".\" + cur + \"\\n\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stringToReturn +\u003d LINE_BOTTOM;"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public void printRelevantTasks(TaskList taskList, String keyWord) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        System.out.println(returnRelevantTasks(taskList,keyWord));"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String returnRelevantTasks(TaskList taskList, String keyWord) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        int n \u003d taskList.getNoOfTasks();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (n !\u003d 0) : \"There is no matching task in your list! \";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        for (int i \u003d 1; i \u003c n + 1; i++) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            Task cur \u003d taskList.list.get(i - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            if (!cur.toString().contains(keyWord)) {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            stringToReturn +\u003d (\"\" + i + \".\" + cur + \"\\n\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        stringToReturn +\u003d LINE_BOTTOM;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the list is empty."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String emptyList() {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Oops, your list is currently empty. Add some tasks first!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // ADD RELATED"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String addSuccessful(Task added, int noOfTasks) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + \"Got it. I\u0027ve added this task: \\n\""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                + added + \"\\n\" + \"Now you have \" + noOfTasks +"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                 \" tasks in the list.\\n \" + LINE_BOTTOM ;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the command is undefined."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String unknownCommand() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Ah oh! I didn\u0027t know what that means \u003en\u003c, sorry! \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // DELETE RELATED"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String deleteSuccessful(Task deleted, TaskList list) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (list.getNoOfTasks() \u003e\u003d 0) : \"There must be zero or more tasks in a task list.\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + \"Got it. I\u0027ve removed this task: \\n\" + deleted +"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                \"\\n\" + \"Now you have \" + list.getNoOfTasks() +"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                \" tasks in the list. \" + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return  stringToReturn;"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that task to be deleted is not specified."
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String incompleteDeleteCommand() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Hey, you forgot to tell me which task to delete\");"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String setTagSuccessful(String tag, Task task) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + \"Nice! I\u0027ve added the tag \u003c\" + tag + \"\u003e for the following task: \\n\" +"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                task + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // MODIFY"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String markDoneSuccessful(Task done) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (done.isDone \u003d\u003d true) : \"Task is not marked as done as intended.\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + \"Nice! I\u0027ve marked this task as done: \\n\" +"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                done + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    // PRINT RELATED"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String markDoneFailure() {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Hey, you forgot to tell me which task is done!\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the task referred to has not been created."
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String uncreatedTask() {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Oops, this task has not been created yet!\");"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that there is not prior data from Duke."
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String showLoadingError() {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return \"Creating the storage file...\";"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String  missingDescription(String type) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assert (type \u003d\u003d \"T\" | type \u003d\u003d \"D\" | type \u003d\u003d\"E\") : \"Incorrect type.\";"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Hey, you forget the description for your \" + type +\"!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the deadline information is missing."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String missingDeadline() {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Sorry, but I can\u0027t help if you don\u0027t tell me the exact deadline!\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     * This method is used to warn the user that the event time is missing."
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "     */"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String missingEventTime() {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"I see...But what time is this event at?\");"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    public String incorrectDoneFormat() {"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Exception ex \u003d new InvalidInputException(\"Your input format for \u0027done\u0027 command is wrong!\" +"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                                                 \" It should be \u0027done TASK_NUMBER.\");"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String stringToReturn \u003d LINE_TOP + ex.getMessage() + \"\\n\" + LINE_BOTTOM;"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        return stringToReturn;"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 240
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minHeight\u003d\"-Infinity\" style\u003d\"-fx-background-color: ORANGE; -fx-background-radius: 12px; -fx-border-color: WHITE; -fx-border-radius: 12px;\" text\u003d\"Label\" textAlignment\u003d\"CENTER\" textFill\u003d\"WHITE\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \u003cFont name\u003d\"Chalkduster\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "         \u003c/font\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"80.0\" fitWidth\u003d\"80.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003cInsets bottom\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"5.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 20
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c?import javafx.scene.text.Font?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"500.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutX\u003d\"4.0\" layoutY\u003d\"556.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"43.0\" prefWidth\u003d\"412.0\" text\u003d\" Type your command here...\" AnchorPane.bottomAnchor\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \u003cFont name\u003d\"Ayuthaya\" size\u003d\"13.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "         \u003c/font\u003e\u003c/TextField\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" style\u003d\"-fx-background-color: DARKORANGE; -fx-background-radius: 6px; -fx-border-color: WHITE; -fx-border-radius: 6px;\" text\u003d\"Send\" textFill\u003d\"WHITE\" AnchorPane.rightAnchor\u003d\"3.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "         \u003cfont\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \u003cFont name\u003d\"Chalkboard\" size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "         \u003c/font\u003e\u003c/Button\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"500.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"488.0\" style\u003d\"-fx-background-color: LIGHTYELLOW;\" /\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 26
    }
  },
  {
    "path": "src/test/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void getNoOfTasks() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String tasks \u003d \"1.[T][✓] read book\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        TaskList list \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(1,list.getNoOfTasks());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void addTask() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String tasks \u003d \"1.[T][✓] read book\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        TaskList list \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task t \u003d new Task(\"do homework\", false, \"T\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        list.addTask(t);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(t, list.list.get(1));"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void deleteTask() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        String tasks \u003d \"1.[T][✓] read book\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        TaskList list \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task t \u003d list.list.get(0);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        list.deleteTask(t);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(true, list.list.isEmpty());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 32
    }
  },
  {
    "path": "src/test/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import org.junit.jupiter.api.DynamicTest;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void getType() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task task \u003d new Task(\"study\", false, \"T\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(\"T\", task.getType());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        Task task \u003d new Task(\"study\", false, \"T\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "        assertEquals(true, task.isDone);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 20
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "bye"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 8
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "# BASH RUNTEST.SH"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "if"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003esources.txt"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "  )"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 6,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Event.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Task.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Duke.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/Deadline.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Zhang-Yunjie"
        },
        "content": "../src/main/java/ToDo.java"
      }
    ],
    "authorContributionMap": {
      "Zhang-Yunjie": 5
    }
  }
]
