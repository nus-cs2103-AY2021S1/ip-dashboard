[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String dueDate;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Deadline(String name, String dueDate) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.dueDate \u003d dueDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[D]%s (due: %s)\", super.toString(), dueDate);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 13
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "import java.util.*;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String line \u003d \"------------------------\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(line);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke \\nWhat can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        while(true) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.print(\"your input: \");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            String cmd \u003d sc.nextLine();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(\"\\n\" + line);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            if (cmd.equals(\"bye\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                end();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                handleCmd(cmd, sc, tasks);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                System.out.println(e);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(line);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void handleCmd(String cmd, Scanner sc, List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        switch(cmd) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                list(tasks);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"complete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                complete(sc, tasks);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    todo(sc, tasks);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    deadline(sc, tasks);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    event(sc, tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    delete(sc, tasks);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                    throw e;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "                throw new DukeException(\"That was an invalid command\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void end() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "         System.out.println(\"Bye. Hope to see you again soon!\");       "
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void list(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int i \u003d 1;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"*Here are all your tasks\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        for (Task task: tasks) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(i + \". \" + task);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            i++;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void complete(Scanner sc, List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Which task do you wish to mark complete? \");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int taskNum \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            tasks.get(taskNum - 1).markDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You did not provide a valid task number!\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void todo(Scanner sc, List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"what is the name of the todo: \");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String todoName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (todoName.isEmpty()) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You must provide a name for the todo task!\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tasks.add(new Todo(todoName));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"*added: \" + todoName);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void deadline(Scanner sc, List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"what is the name of the task: \");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String deadlineName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (deadlineName.isEmpty()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You must provide a name for the deadline task!\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"when is the due date: \");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String dueDate \u003d sc.nextLine();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (dueDate.isEmpty()) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You must provide a due date for the deadline task!\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tasks.add(new Deadline(deadlineName, dueDate));"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"*added: \" + deadlineName);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        "
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void event(Scanner sc, List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"what is the name of the event: \");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String eventName \u003d sc.nextLine();"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (eventName.isEmpty()) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You must provide a name for the event!\");"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"when does the event start: \");"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String start \u003d sc.nextLine();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (start.isEmpty()) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You must provide a start time for the event!\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"when does the event end: \");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String end \u003d sc.nextLine();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        if (end.isEmpty()) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You must provide an end time for the event!\");"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        tasks.add(new Event(eventName, start, end));"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"*added: \" + eventName);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private static void delete(Scanner sc, List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Which task would you like to remove: \");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        int taskNum \u003d Integer.parseInt(sc.nextLine());"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            Task task \u003d tasks.remove(taskNum - 1);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(String.format(\"Successfully removed the following task:\\n %s\", task));"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            System.out.println(String.format(\"You have a total of %d tasks left\", tasks.size()));"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "            throw new DukeException(\"You did not provide a valid task number!\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        }"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 148,
      "-": 10
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String error;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    DukeException(String error) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.error \u003d error;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"OOPS! %s\", error);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 12
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String start;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String end;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Event(String name, String start, String end) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.start \u003d start;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.end \u003d end;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[E]%s (start: %s, end: %s)\", super.toString(), start, end);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 15
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private boolean isCompleted;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Task(String name) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(\"Nice, I\u0027ve marked this task as done!\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        System.out.println(this);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        String symbol \u003d isCompleted ? \"\\u2713\" : \"x\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return \"[\" + symbol + \"] \" + name; "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 20
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    Todo(String name) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        super(name);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "        return String.format(\"[T]%s\", super.toString());"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 10
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "todo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "clean my room"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "assignment"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "tomorrow"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "soccer practice"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "4pm"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "6pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 11
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "joshtyf"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "joshtyf": 1,
      "-": 37
    }
  }
]
