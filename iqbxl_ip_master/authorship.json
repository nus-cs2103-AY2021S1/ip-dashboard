[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static Deadline load(String str) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String[] arr \u003d str.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Deadline task \u003d new Deadline(arr[2], LocalDate.parse(arr[3]));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (arr[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"D|\" + super.store() + \"|\" + this.by;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 30
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private static final List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        initialize();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        System.out.println(\"Hello! I\u0027m Duke\\n\" + \"What can I do for you?\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        serveClient();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private static void initialize() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        File dir \u003d new File(\"./data\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        dir.mkdir();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        File file \u003d new File(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            if (!file.createNewFile()) {        // createNewFile() returns true if the file path"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                Scanner sc \u003d new Scanner(file); // does not exist and a new file is created"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    String str \u003d sc.nextLine();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    Task task;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    if (str.startsWith(\"T\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        task \u003d ToDo.load(str);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    } else if (str.startsWith(\"D\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        task \u003d Deadline.load(str);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    } else if (str.startsWith(\"E\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        task \u003d Event.load(str);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    tasks.add(task);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private static void saveTasks() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            FileWriter fw \u003d new FileWriter(\"./data/duke.txt\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                fw.write(task.store() + \"\\n\"); // write the task onto txt with the format"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    private static void serveClient() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                String[] arr \u003d input.split(\" \", 2); // limit is the result threshold; return 2 strings"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                switch (arr[0]) { // use switch case for easy scalability"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"bye\":"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"list\":"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        for (int i \u003d 1; i \u003c\u003d tasks.size(); i++) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            System.out.println(i + \".\" + tasks.get(i - 1));"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"done\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        int index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        Task task \u003d tasks.get(index); // returns the specific task from the list"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n  \" + task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"delete\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        index \u003d Integer.parseInt(arr[1]) - 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        task \u003d tasks.get(index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        tasks.remove(index);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Noted. I\u0027ve removed this task:\\n  \" + task + \"\\nNow you have \" + size + \" tasks in the list.\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"todo\":"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        if (arr.length \u003d\u003d 1 || arr[1].strip().equals(\"\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        task \u003d new ToDo(arr[1]);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"deadline\":"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        if (arr.length \u003d\u003d 1 || arr[1].strip().equals(\"\")) {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        String[] strings \u003d arr[1].split(\"/by\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            task \u003d new Deadline(strings[0].strip(), LocalDate.parse(strings[1].strip()));"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            throw new DukeException(\"OOPS!!! Wrong date format encountered!\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    case \"event\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        if (arr.length \u003d\u003d 1 || arr[1].strip().equals(\"\")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            throw new DukeException(\"OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        strings \u003d arr[1].split(\"/at\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        try {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            task \u003d new Event(strings[0].strip(), LocalDate.parse(strings[1].strip()));"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                            throw new DukeException(\"OOPS!!! Wrong date format encountered!\");"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        tasks.add(task);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        System.out.println(\"Got it. I\u0027ve added this task:\\n  \" + task + \"\\nNow you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                        throw new DukeException(\"OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                saveTasks();"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                if (arr[0].equals(\"bye\")) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 129,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 5
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static Event load(String str) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String[] arr \u003d str.split(\"\\\\|\", 4);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        Event task \u003d new Event(arr[2], LocalDate.parse(arr[3]));"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (arr[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"E|\" + super.store() + \"|\" + this.at;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"d MMM uuuu\")) + \")\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 30
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        //return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return (isDone ? \"✓\" : \"✗\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return this.isDone + \"|\" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 26
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public static ToDo load(String str) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        String[] arr \u003d str.split(\"\\\\|\", 3);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        ToDo task \u003d new ToDo(arr[2]);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        if (arr[1].equals(\"true\")) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return task;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String store() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"T|\" + super.store();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "iqbxl"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 24
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "blah"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "iqbxl"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "iqbxl": 1,
      "-": 20
    }
  }
]
