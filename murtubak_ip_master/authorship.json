[
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Event;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String GREETING_MESSAGE \u003d \"Buenos Dias! Soy Duke, como estas mi amigo?\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String ACTION_LIST \u003d \"list\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TERMINATION \u003d \"bye\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TERMINATION_MESSAGE \u003d \"Adios, amigos!\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_COMPLETED \u003d \"done\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String TASK_EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String DELETE_EVENT \u003d \"delete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String DEADLINE_DATE \u003d \"/by\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private final static String EVENT_DATE \u003d \"/at\";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    private static ArrayList\u003cTask\u003e userInputsList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        System.out.println(GREETING_MESSAGE);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            String userInput \u003d sc.next();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            switch (userInput) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case ACTION_LIST:"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (userInputsList.isEmpty()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! La lista está vacía. ¡Agregue una nueva tarea!\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(\"Estas son las tareas de su lista:\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        for (int i \u003d 0; i \u003c userInputsList.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            System.out.println((i + 1) + \". \" + userInputsList.get(i).toString());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case TERMINATION:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    System.out.println(TERMINATION_MESSAGE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    userInputsList.clear();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case TASK_COMPLETED:"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int positionDone \u003d -1;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (!userInput.isEmpty()) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                positionDone \u003d Integer.parseInt(userInput.substring(1));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                System.out.println(\"☹ OOPS !!! Incapaz de completar\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! Incapaz de completar\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        positionDone \u003d positionDone - 1;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (positionDone \u003c userInputsList.size() \u0026\u0026 positionDone \u003e 0) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            System.out.println(\"Agradable! He marcado esta tarea como hecha:\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            userInputsList.get(positionDone).completeTask();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            System.out.println(userInputsList.get(positionDone));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! ¡Esta tarea aún no existe!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case TASK_TODO:"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (userInput.isEmpty()) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! La descripción de una tarea no puede estar vacía.\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int position \u003d userInputsList.size() + 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        Todo newTodo \u003d new Todo(position, userInput);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInputsList.add(newTodo);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(\"Entendido. He agregado esta tarea:\\n\" +"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                newTodo +"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                \"\\nAhora tienes \" + userInputsList.size() +\" tareas en la lista. \");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch(DukeExceptions e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case TASK_DEADLINE:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (userInput.isEmpty()) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! La descripción de una tarea no puede estar vacía.\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (!userInput.contains(DEADLINE_DATE)) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! Debe establecer una fecha límite para esta tarea.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int byPosition \u003d userInput.indexOf(DEADLINE_DATE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int position \u003d userInputsList.size() + 1;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        String taskDescription \u003d userInput.substring(0, byPosition);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        String dateDescription \u003d userInput.substring(byPosition + 3);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (dateDescription.isEmpty()) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! Debe establecer una fecha límite para esta tarea.\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        Deadline newDeadline \u003d new Deadline(position, taskDescription);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        newDeadline.setTime(dateDescription);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInputsList.add(newDeadline);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(\"Entendido. He agregado esta tarea:\\n\" +"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                newDeadline +"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                \"\\nAhora tienes \" + userInputsList.size() + \" tareas en la lista. \");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch(DukeExceptions e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case TASK_EVENT:"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (userInput.isEmpty()) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! La descripción de una tarea no puede estar vacía.\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (!userInput.contains(EVENT_DATE)) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! Debe establecer la hora del evento para esta tarea.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int atPosition \u003d userInput.indexOf(EVENT_DATE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int position \u003d userInputsList.size() + 1;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        String taskDescription \u003d userInput.substring(0, atPosition);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        String dateDescription \u003d userInput.substring(atPosition + 3);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (dateDescription.isEmpty()) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! Debe establecer la hora del evento para esta tarea.\");"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        Event newEvent \u003d new Event(position, taskDescription);"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        newEvent.setTime(dateDescription);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInputsList.add(newEvent);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(\"Entendido. He agregado esta tarea:\\n\" +"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                newEvent +"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                \"\\nAhora tienes \" + userInputsList.size() + \" tareas en la lista. \");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch(DukeExceptions e) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                case DELETE_EVENT:"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        userInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        int positionDone \u003d -1;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (!userInput.isEmpty()) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            try {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                positionDone \u003d Integer.parseInt(userInput.substring(1));"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                                System.out.println(\"☹ OOPS !!! No se puede borrar\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! No se puede borrar\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        positionDone \u003d positionDone - 1;"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        if (positionDone \u003c userInputsList.size() \u0026\u0026 positionDone \u003e 0) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            System.out.println(\"Célebre. He eliminado esta tarea:\");"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            System.out.println(userInputsList.get(positionDone));"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            userInputsList.remove(positionDone);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            System.out.println(\"Ahora tienes \" + userInputsList.size() + \" tareas en la lista. \");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                            throw new DukeExceptions(\"☹ OOPS !!! ¡Esta tarea aún no existe!\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch (DukeExceptions e) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        throw new DukeExceptions(\"OOPS !!! Lo siento, pero no sé qué significa eso :-(\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    } catch(DukeExceptions e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                        System.out.println(e);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            if (userInput.equals(TERMINATION)) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "murtubak"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 174,
      "-": 4
    }
  },
  {
    "path": "src/main/java/DukeExceptions.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class DukeExceptions extends Exception{"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public DukeExceptions(String message) {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 6
    }
  },
  {
    "path": "src/main/java/Task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "import Task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Deadline(int position, String taskDescription) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(position, taskDescription);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void setTime(String givenDate) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        date \u003d givenDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[D]\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓] \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗] \";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription + \"(by:\" + date + \")\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 25
    }
  },
  {
    "path": "src/main/java/Task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Event(int position, String taskDescription) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(position, taskDescription);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void setTime(String givenDate) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        date \u003d givenDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[E]\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓] \";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗] \";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription + \"(at:\" + date + \")\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 23
    }
  },
  {
    "path": "src/main/java/Task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected int position;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected String taskDescription;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected boolean taskCompleted;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    protected String date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Task(int position, String taskDescription) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.position \u003d position;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        this.taskDescription \u003d taskDescription;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        taskCompleted \u003d false;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public void completeTask() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        taskCompleted \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String getTaskDescription() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return taskDescription;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 22
    }
  },
  {
    "path": "src/main/java/Task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "package Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public Todo(int position, String taskDescription) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        super(position, taskDescription);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        String base \u003d \"[T]\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        if (taskCompleted) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✓] \";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "            base \u003d base + \"[✗] \";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        base \u003d base + taskDescription;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "        return base;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "murtubak"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "murtubak": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "murtubak"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "murtubak"
        },
        "content": "todo return book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "murtubak"
        },
        "content": "deadline return book /by sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "murtubak"
        },
        "content": "event return book /at sunday 12pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "murtubak"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "murtubak"
        },
        "content": "blah"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "murtubak"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "todo"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "murtubak"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "murtubak"
        },
        "content": "event"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "deadline 321"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "murtubak"
        },
        "content": "event 123"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "murtubak"
        },
        "content": "delete"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "murtubak"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "murtubak"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "murtubak"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "murtubak"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "murtubak": 17
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "murtubak"
        },
        "content": "del D:\\uni\\CS2103T\\Duke(iP)\\ip\\text-ui-test\\data"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "murtubak"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin D:\\uni\\CS2103T\\Duke(iP)\\ip\\src\\main\\java\\Duke.java D:\\uni\\CS2103T\\Duke(iP)\\ip\\src\\main\\java\\Task\\* D:\\uni\\CS2103T\\Duke(iP)\\ip\\src\\main\\java\\DukeExceptions.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "murtubak"
        },
        "content": "java -classpath D:\\uni\\CS2103T\\Duke(iP)\\ip\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "murtubak": 3,
      "-": 19
    }
  }
]
