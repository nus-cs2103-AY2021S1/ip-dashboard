[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003ch1 align\u003d\"center\"\u003eWelcome to Duke! ðŸ‘‹\u003c/h1\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003ch3 align\u003d\"center\"\u003eDuke is your one-stop software for managing all your tasks. "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c/h3\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "From deadlines, todos to events, Duke provides support for all kinds of tasks you may encounter in life"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 4,
      "-": 2
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    toolVersion \u003d \u00278.35\u0027"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 15,
      "-": 41
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "* Add a new *Task*"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  * *Todo*"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  * *Event*"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  * *Deadline*"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "* Remove task"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "* List all tasks"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "* Mark a task as done"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "* Find a particular task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### Add a new *Todo*"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `Todo TASK_NAME` "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Adds a new Todo Task called `TASK_NAME`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`Todo CS2103 Assignment`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### Add a new *Event*"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `event TASK_NAME /at TIME` "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Adds a new Event Task called `TASK_NAME` that starts at `TIME`"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`event team meeting /at 2020-12-31`"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### Add a new *Deadline*"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `deadline TASK_NAME /by TIME` "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Adds a new Deadline Task called `TASK_NAME` whose deadline is at `TIME`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`deadline team project /by 2020-12-31`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### List all tasks"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `list` "
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Lists all the tasks, including those that are done."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### Remove a task"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `delete TASK_INDEX` "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Removes the task at index given. Index starts at 1 for the first task and increases by 1."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "To find out the index of a particular task, refer to `list`."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### Mark a task as done"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `done TASK_INDEX` "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Sets the task at index given as done. Index starts at 1 for the first task and increases by 1."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "To find out the index of a particular task, refer to `list`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "### Find a task "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "##### `find TASK_NAME` "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Find the task whose name starts with `TASK_NAME` or any of its sub-words"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`find cook curry` will match any task with `cook` or `curry`"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "`find book` will match any task with `book`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chunyongg": 66,
      "-": 14
    }
  },
  {
    "path": "menu.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.scene.layout.GridPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\"    xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"sample.Controller\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003cchildren\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003cSplitPane dividerPositions\u003d\"0.5\" layoutX\u003d\"102.0\" layoutY\u003d\"51.0\" orientation\u003d\"VERTICAL\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"25.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    \u003citems\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003cAnchorPane maxHeight\u003d\"100.0\" prefHeight\u003d\"80.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "           \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "              \u003cTextField fx:id\u003d\"display\" layoutX\u003d\"150.0\" layoutY\u003d\"42.0\" prefHeight\u003d\"100.0\" prefWidth\u003d\"598.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                 \u003cfont\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cFont size\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                 \u003c/font\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "              \u003c/TextField\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "           \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003cAnchorPane minHeight\u003d\"0.0\" minWidth\u003d\"0.0\" prefHeight\u003d\"230.0\" prefWidth\u003d\"598.0\"\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "           \u003cchildren\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "              \u003cGridPane layoutY\u003d\"6.0\" prefHeight\u003d\"267.0\" prefWidth\u003d\"598.0\" AnchorPane.bottomAnchor\u003d\"0.0\" AnchorPane.leftAnchor\u003d\"0.0\" AnchorPane.rightAnchor\u003d\"0.0\" AnchorPane.topAnchor\u003d\"0.0\"\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                \u003ccolumnConstraints\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cColumnConstraints hgrow\u003d\"SOMETIMES\" minWidth\u003d\"10.0\" prefWidth\u003d\"100.0\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                \u003c/columnConstraints\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                \u003crowConstraints\u003e"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cRowConstraints minHeight\u003d\"10.0\" prefHeight\u003d\"30.0\" vgrow\u003d\"SOMETIMES\" /\u003e"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                \u003c/rowConstraints\u003e"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                 \u003cchildren\u003e"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cButton fx:id\u003d\"maxmin\" alignment\u003d\"CENTER\" contentDisplay\u003d\"CENTER\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" onAction\u003d\"#maxmin\" prefHeight\u003d\"134.0\" prefWidth\u003d\"199.0\" text\u003d\"Max-Min\"\u003e"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003cfont\u003e"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                          \u003cFont size\u003d\"28.0\" /\u003e"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003c/font\u003e"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cButton fx:id\u003d\"maxprod\" alignment\u003d\"CENTER\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"134.0\" prefWidth\u003d\"199.0\" text\u003d\"Max_Product\" GridPane.columnIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003cfont\u003e"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                          \u003cFont size\u003d\"28.0\" /\u003e"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003c/font\u003e"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cButton fx:id\u003d\"maxavg\" alignment\u003d\"CENTER\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"134.0\" prefWidth\u003d\"199.0\" text\u003d\"Max_Average\" GridPane.columnIndex\u003d\"2\"\u003e"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003cfont\u003e"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                          \u003cFont size\u003d\"27.0\" /\u003e"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003c/font\u003e"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cButton fx:id\u003d\"add\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"134.0\" prefWidth\u003d\"199.0\" text\u003d\"Addition\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003cfont\u003e"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                          \u003cFont size\u003d\"28.0\" /\u003e"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003c/font\u003e"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cButton fx:id\u003d\"sub\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"134.0\" prefWidth\u003d\"199.0\" text\u003d\"Subtraction\" GridPane.columnIndex\u003d\"1\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003cfont\u003e"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                          \u003cFont size\u003d\"28.0\" /\u003e"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003c/font\u003e"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003cButton fx:id\u003d\"minmax\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" mnemonicParsing\u003d\"false\" prefHeight\u003d\"134.0\" prefWidth\u003d\"199.0\" text\u003d\"Min-Max\" GridPane.columnIndex\u003d\"2\" GridPane.rowIndex\u003d\"1\"\u003e"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003cfont\u003e"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                          \u003cFont name\u003d\"System Bold\" size\u003d\"28.0\" /\u003e"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                       \u003c/font\u003e"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                    \u003c/Button\u003e"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                 \u003c/children\u003e"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "              \u003c/GridPane\u003e"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "           \u003c/children\u003e"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        \u003c/AnchorPane\u003e"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    \u003c/items\u003e"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003c/SplitPane\u003e"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003c/children\u003e"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chunyongg"
        },
        "content": " \u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 74
    }
  },
  {
    "path": "src/main/java/Controller.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Controller extends Application implements Initializable {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public TextField command;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public TextArea console;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static final DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static TaskList taskList;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static Ui ui;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static File file;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static Storage storage;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static final char LINE \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Parent root \u003d FXMLLoader.load(getClass().getResource(\"sample.fxml\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    stage.setTitle(\"Duke, your personal assistant\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    stage.setScene(new Scene(root, 600, 600));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    stage.show();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.setStyle("
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        \"-fx-control-inner-background:#000000; -fx-font-family: Consolas; -fx-highlight-fill: #ffffff; -fx-highlight-text-fill: #000000; -fx-text-fill: #00f7ff; \");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    command.setStyle("
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        \"-fx-control-inner-background:#000000; -fx-font-family: Consolas; -fx-highlight-fill: #ffffff; -fx-highlight-text-fill: #000000; -fx-text-fill: #ffffff; \");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String filePath \u003d home + \"/tasks.txt\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    ui \u003d new Ui(taskList, storage);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    loadFile(filePath);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    boolean fileExists \u003d file.exists();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (fileExists) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      readFile();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    printWelcomeMessage();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Loads a file from a given file path."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param filePath Location of the file"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static void loadFile(String filePath) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    file \u003d new File(filePath);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Given a file path, read all contents of the file and convert them to Tasks. */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static void readFile() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cString\u003e sentences \u003d storage.readFile();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    for (String sentence : sentences) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String taskName \u003d \"\";"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      int index;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (sentence.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // Sentence is in the form [T][\u003cStatus of duke.task.Task\u003e ]  \u003cduke.task.Task Name\u003e"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // find out whether task is done"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 1) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove [T]"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 1);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        boolean isCompleted \u003d sentence.startsWith(\"[DONE]\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get index after closing bracket ]"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 3) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task name"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskName \u003d sentence.substring(index + 3);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        Task toBeAdded \u003d isCompleted ? new Todo(taskName, true) : new Todo(taskName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskList.addTask(toBeAdded);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      } else if (sentence.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // Sentence is in the form [D][\u003cStatus of duke.task.Task\u003e]  \u003cduke.task.Task Name\u003e"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // (\u003cduke.task.Deadline\u003e)"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove [D]"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 1) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 1);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // check if task is completed"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        boolean isCompleted \u003d sentence.startsWith(\"[DONE]\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get index after closing bracket ]"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 3) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task name, i.e. everything before opening bracket"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 3);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskName \u003d getStringBeforeCharacter(sentence, \u0027(\u0027);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (taskName.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task deadline"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String deadline \u003d getStringAfterCharacter(sentence, \u0027 \u0027);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (deadline.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove () brackets and by"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d deadline.indexOf(\":\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d deadline.length() - 1) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        deadline \u003d deadline.substring(index + 2);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove ) closing bracket"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        deadline \u003d deadline.substring(0, deadline.length() - 1);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // add task"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          LocalDate deadlineDate \u003d LocalDate.parse(deadline, formatter);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          Task toBeAdded \u003d new Deadline(taskName, deadlineDate, isCompleted);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          taskList.addTask(toBeAdded);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted input"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      } else if (sentence.startsWith(\"[E\")) {"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // Sentence is in the form [E][\u003cStatus of duke.task.Task\u003e]   (at: tmr)"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove [E]"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 1) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 1);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // check if task is completed"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        boolean isCompleted \u003d sentence.startsWith(\"[DONE]\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get index after closing bracket ]"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 3) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task name"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 3);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskName \u003d getStringBeforeCharacter(sentence, \u0027(\u0027);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (taskName.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task deadline"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String time \u003d getStringAfterCharacter(sentence, \u0027 \u0027);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove () brackets and at"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d time.indexOf(\":\");"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d time.length() - 1) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        time \u003d time.substring(index + 2);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove ) closing bracket"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        time \u003d time.substring(0, time.length() - 1);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // add task"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          LocalDate timeDate \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          Task toBeAdded \u003d new Event(taskName, timeDate, isCompleted);"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          taskList.addTask(toBeAdded);"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted input"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Get the substring that comes after the first instance of the character Returns an empty String"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * if character is not found in the String Example: getStringAfterCharacter(\"abc def\", \u0027 \u0027)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * returns \"def\""
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param task String to be operated on"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param character Character for the String to search for"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Substring after the character"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String getStringAfterCharacter(String task, Character character) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // gets String after character, e.g. if input is \"Apple Juice\" and character is \" \", method"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // returns \"Juice\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d task.indexOf(character);"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d task.length() - 1) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // index not found, or index is last char in string"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"\";"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // get everything after the space"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String taskName \u003d task.substring(index + 1);"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return taskName;"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Get the substring that comes before the first instance of the character Returns an empty String"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * if character is not found Example: getStringAfterCharacter(\"abc def\", \u0027 \u0027) returns \"abc\""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param task String to be operated on"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param character Character for the String to search for"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Substring after the character"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String getStringBeforeCharacter(String task, char character) {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // gets a string before the first character"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // e.g. if input is \"Apple juice\", and character is \" \", method returns \"Apple\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d task.indexOf(character);"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // space not found, or index is first char in String"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"\";"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return task.substring(0, index);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  void printWelcomeMessage() {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(\"Hello! I\u0027m Duke. \\n What can I do for you?\\n\");"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints the line, e.g. ******************* */"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  String printLine() {"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String star \u003d \"*\";"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int n \u003d 50;"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String repeated \u003d IntStream.range(0, n).mapToObj(i -\u003e star).collect(Collectors.joining(\"\"));"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return repeated + \"\\n\";"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void handleItemEntered() {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String commandWord \u003d command.getText();"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    command.clear();"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (commandWord.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      console.appendText(\"See you again soon!\");"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Stage stage \u003d (Stage) console.getScene().getWindow();"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // do what you have to do"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      stage.close();"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return;"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d ui.handleInteraction(commandWord);"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(output);"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    launch(args);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 285
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.userinterface.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.net.URL;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.ResourceBundle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.concurrent.CompletableFuture;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.concurrent.TimeUnit;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.stream.IntStream;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.fxml.Initializable;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.Parent;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.control.TextArea;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.scene.layout.BorderPane;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Duke extends Application implements Initializable {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public TextField command;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public TextArea console;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static TaskList taskList;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static Ui ui;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static File file;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private static Storage storage;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static final char LINE \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void start(Stage stage) throws Exception {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      FXMLLoader fxmlLoader \u003d new FXMLLoader(Duke.class.getResource(\"/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      System.out.println(fxmlLoader);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      BorderPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      stage.setScene(scene);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      System.out.println(4);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "//    Parent root \u003d FXMLLoader.load(getClass().getResource(\"sample.fxml\"));"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "//    stage.setScene(new Scene(root, 600, 600));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      stage.show();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (Exception e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      System.out.println(e);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void initialize(URL location, ResourceBundle resources) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.setStyle(\"-fx-font-family: Consolas;\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    command.setStyle(\"-fx-font-family: Consolas;\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String home \u003d System.getProperty(\"user.home\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String filePath \u003d home + \"/tasks.txt\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    ui \u003d new Ui(taskList, storage);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    loadFile(filePath);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    boolean fileExists \u003d file.exists();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (fileExists) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      readFile();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    printWelcomeMessage();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Loads a file from a given file path."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param filePath Location of the file"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static void loadFile(String filePath) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    file \u003d new File(filePath);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Given a file path, read all contents of the file and convert them to Tasks. */"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static void readFile() {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cString\u003e sentences \u003d storage.readFile();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    for (String sentence : sentences) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String taskName \u003d \"\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      int index;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (sentence.startsWith(\"[T]\")) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // Sentence is in the form [T][\u003cStatus of duke.task.Task\u003e ]  \u003cduke.task.Task Name\u003e"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // find out whether task is done"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove [T]"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 1);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        boolean isCompleted \u003d sentence.startsWith(\"[DONE]\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get index after closing bracket ]"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 3) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task name"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskName \u003d sentence.substring(index + 3);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        Task toBeAdded \u003d isCompleted ? new Todo(taskName, true) : new Todo(taskName);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskList.addTask(toBeAdded);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      } else if (sentence.startsWith(\"[D]\")) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // Sentence is in the form [D][\u003cStatus of duke.task.Task\u003e]  \u003cduke.task.Task Name\u003e  (\u003cduke.task.Deadline\u003e)"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove [D]"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 1) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 1);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // check if task is completed"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        boolean isCompleted \u003d sentence.startsWith(\"[DONE]\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get index after closing bracket ]"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 3) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task name, i.e. everything before opening bracket"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 3);"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskName \u003d getStringBeforeCharacter(sentence, \u0027(\u0027);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (taskName.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task deadline"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String deadline \u003d getStringAfterCharacter(sentence, \u0027 \u0027);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (deadline.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove () brackets and by"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d deadline.indexOf(\":\");"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d deadline.length() - 1) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        deadline \u003d deadline.substring(index + 2);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove ) closing bracket"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        deadline \u003d deadline.substring(0, deadline.length() - 1);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // add task"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          LocalDate deadlineDate \u003d LocalDate.parse(deadline, formatter);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          Task toBeAdded \u003d new Deadline(taskName, deadlineDate, isCompleted);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          taskList.addTask(toBeAdded);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted input"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      } else if (sentence.startsWith(\"[E\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // Sentence is in the form [E][\u003cStatus of duke.task.Task\u003e]   (at: tmr)"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove [E]"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 1) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 1);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // check if task is completed"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        boolean isCompleted \u003d sentence.startsWith(\"[DONE]\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get index after closing bracket ]"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d sentence.indexOf(\"]\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d sentence.length() - 3) {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task name"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        sentence \u003d sentence.substring(index + 3);"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        taskName \u003d getStringBeforeCharacter(sentence, \u0027(\u0027);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (taskName.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // get task deadline"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String time \u003d getStringAfterCharacter(sentence, \u0027 \u0027);"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (time.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted entry"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove () brackets and at"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        index \u003d time.indexOf(\":\");"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (index \u003d\u003d -1 || index \u003e\u003d time.length() - 1) {"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        time \u003d time.substring(index + 2);"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // remove ) closing bracket"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        time \u003d time.substring(0, time.length() - 1);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        // add task"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          LocalDate timeDate \u003d LocalDate.parse(time, formatter);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          Task toBeAdded \u003d new Event(taskName, timeDate, isCompleted);"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          taskList.addTask(toBeAdded);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          // corrupted input"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          continue;"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Get the substring that comes after the first instance of the character Returns an empty String"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * if character is not found in the String Example: getStringAfterCharacter(\"abc def\", \u0027 \u0027)"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * returns \"def\""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param task String to be operated on"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param character Character for the String to search for"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Substring after the character"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String getStringAfterCharacter(String task, Character character) {"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // gets String after character, e.g. if input is \"Apple Juice\" and character is \" \", method"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // returns \"Juice\""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d task.indexOf(character);"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d task.length() - 1) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // index not found, or index is last char in string"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // get everything after the space"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String taskName \u003d task.substring(index + 1);"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return taskName;"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Get the substring that comes before the first instance of the character Returns an empty String"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * if character is not found Example: getStringAfterCharacter(\"abc def\", \u0027 \u0027) returns \"abc\""
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param task String to be operated on"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param character Character for the String to search for"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Substring after the character"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String getStringBeforeCharacter(String task, char character) {"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // gets a string before the first character"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // e.g. if input is \"Apple juice\", and character is \" \", method returns \"Apple\""
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d task.indexOf(character);"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d 0) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // space not found, or index is first char in String"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"\";"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return task.substring(0, index);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  void printWelcomeMessage() {"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(\"Hello! I\u0027m Duke. \\n What can I do for you?\\n\");"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints the line, e.g. ******************* */"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  String printLine() {"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String STAR \u003d \"*\";"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int n \u003d 50;"
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String repeated \u003d IntStream.range(0, n).mapToObj(i -\u003e STAR).collect(Collectors.joining(\"\"));"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return repeated + \"\\n\";"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void handleItemEntered() {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String commandWord \u003d command.getText();"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    assert commandWord.length() \u003e 0 : \"Please enter a command\";"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    command.clear();"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (commandWord.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      console.appendText(\"See you again soon!\\n\");"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Stage stage \u003d (Stage) console.getScene().getWindow();"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // do what you have to do"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      stage.close();"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d ui.handleInteraction(commandWord);"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(output);"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    console.appendText(printLine());"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    launch(args);"
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "-"
        },
        "content": "  }"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "chunyongg": 292,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public static void main(String[] args) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Duke.main(args);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 6
    }
  },
  {
    "path": "src/main/java/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c!--\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e Not necessary, is default option --\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003ctop\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        \u003cHBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cTextField fx:id\u003d\"command\" onAction\u003d\"#handleItemEntered\" promptText\u003d\"Input command here\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                     \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                     \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003c/TextField\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003c/VBox.margin\u003e\u003c/HBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003c/top\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   \u003ccenter\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003cTextArea fx:id\u003d\"console\" editable\u003d\"false\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   \u003c/center\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 32
    }
  },
  {
    "path": "src/main/java/TestStorage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Goodbye"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 2
    }
  },
  {
    "path": "src/main/java/duke/exception/EmptyArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class EmptyArgumentException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  String errorMessage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public EmptyArgumentException(String errorMessage) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.errorMessage \u003d errorMessage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return errorMessage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 14
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  String filePath;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  File file;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Storage(String filePath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.file \u003d new File(filePath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Reads a file line by line and returns the contents as a List of Strings."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return List of Strings"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public List\u003cString\u003e readFile() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cString\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (!this.file.exists()) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return items; // empty list"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Scanner s \u003d new Scanner(this.file);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      while (s.hasNext()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        items.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return items;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return items; // empty list"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Reads a List of Strings and re-writes the file at the location filePath."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param sentences List of Sentences"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Whether operation succeeded"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public boolean updateFile(List\u003cString\u003e sentences) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      FileWriter fw \u003d new FileWriter(this.filePath);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      boolean hasError \u003d false;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      for (String sentence : sentences) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          fw.write(sentence + System.lineSeparator());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          System.out.println(e);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "          hasError \u003d true;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      fw.close();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return !hasError; // return true if operation succeeded"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (IOException e) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return false;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 66
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  LocalDate deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Deadline(String taskName, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.deadline \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Deadline(String taskName, LocalDate deadline, boolean isCompleted) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    super(taskName, isCompleted);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String deadlineFormatted \u003d deadline.format(formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return String.format(\"%s%s%s%s\", \"[D]\", super.toString(), \"(by: \", deadlineFormatted + \")\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  LocalDate time;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Event(String taskName, LocalDate date) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    super(taskName);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.time \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Event(String taskName, LocalDate time, boolean isCompleted) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    super(taskName, isCompleted);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.time \u003d time;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy\");"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String timeFormatted \u003d time.format(formatter);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return String.format(\"%s%s%s%s\", \"[E]\", super.toString(), \"(at: \", timeFormatted + \")\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 26
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  String taskName;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  boolean isCompleted;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Create a new duke.task.Task."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param task Name of the duke.task.Task"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Task(String task) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.taskName \u003d task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Create a new task whose status is isCompleted."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param task duke.task.Task name"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param isCompleted Whether it is completed"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Task(String task, boolean isCompleted) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.taskName \u003d task;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.isCompleted \u003d isCompleted;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private boolean matchesWord(String keyword) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String[] getWords \u003d taskName.split(\" \");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int numberMatches \u003d 0;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    for (String word : getWords) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (word.equals(keyword)) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        numberMatches++;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return numberMatches \u003e 0;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Given an array of words, check if the task name matches any of them."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param words Array of words"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Whether task name matches"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public boolean matchesWordList(String[] words) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    boolean matchesTask \u003d false;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    for (String word : words) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (matchesWord(word)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        matchesTask \u003d true;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return matchesTask;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Sets a task as completed."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return A new duke.task.Task whose status is completed"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Task setTaskAsCompleted() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return new Task(taskName, true);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String tickOrCross \u003d isCompleted ? \"DONE\" : \"NOT DONE\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return String.format(\"%s%s%s %s\", \"[\", tickOrCross, \"] \", taskName);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 68
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.userinterface.Printer;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "/** Wrapper behind a List that performs operations on the List of Tasks. */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public TaskList() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return tasks;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Iterate through all Tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return String containing all tasks."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String iterate() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (tasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Hooray! You have no tasks in the list\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    StringBuilder output \u003d new StringBuilder(\"Here are the tasks in your list: \\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      output.append(i + 1).append(\". \").append(tasks.get(i)).append(\"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return output.toString();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Given an array of words, return a List of all tasks that match the search word."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param search Array of words"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return List of all matching tasks"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public List\u003cTask\u003e findMatchingTasks(String[] search) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    for (Task t : tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (t.matchesWordList(search)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        matchingTasks.add(t);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return matchingTasks;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Gets the size of the List."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return size of List"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public int size() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return tasks.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Adds a duke.task.Task to the List."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param t duke.task.Task to be added"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Whether operation succeeded"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public boolean addTask(Task t) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    tasks.add(t);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return true;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Removes a duke.task.Task from a given index"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param index Index of duke.task.Task to be removed from"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Optional\u003cduke.task.Task\u003e if the removal was successful, otherwise an empty Optional"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *     object."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Optional\u003cTask\u003e removeTask(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return Optional.of(tasks.remove(index));"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (Exception e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Sets a duke.task.Task status to Done"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param index Index of duke.task.Task to change"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Optional\u003cduke.task.Task\u003e if the task was set as done, otherwise an empty Optional"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *     object."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Optional\u003cTask\u003e setAsDone(int index) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Task originalTask \u003d tasks.get(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Task newTask \u003d originalTask.setTaskAsCompleted();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return Optional.of(originalTask);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Printer.printTaskNotFound();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return Optional.empty();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 104
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Todo(String taskName) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    super(taskName);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Todo(String taskName, boolean isCompleted) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    super(taskName, isCompleted);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Todo setTaskAsCompleted() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return new Todo(taskName, true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String toString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return String.format(\"%s%s\", \"[T]\", super.toString());"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 21
    }
  },
  {
    "path": "src/main/java/duke/userinterface/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.DateTimeException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  TaskList taskList;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Constructor for duke.userinterface.Parser."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param taskList List of tasks that the duke.userinterface.Parser interacts with"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param storage duke.storage.Storage that the duke.userinterface.Parser interacts with"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  Parser(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.storage \u003d storage;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Update the storage after an operation is performed. */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  void updateStorage() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cTask\u003e tasks \u003d taskList.getTaskList();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cString\u003e taskStrings \u003d tasks.stream().map(Task::toString).collect(Collectors.toList());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    storage.updateFile(taskStrings);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Makes sense of a user\u0027s command."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param command Command given"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Whether operation was successful"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  String handleCommand(String command) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (command.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleDelete(command);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleDone(command);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleAddTodo(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleAddDeadline(command);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleAddEvent(command);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"list\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleList();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return handleSearchTask(command);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else if (command.startsWith(\"bye\")) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"\";"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Printer.printCustomStatement(\"Sorry, command not recognized!\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleSearchTask(String command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (command.length() \u003c 6) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Printer.printCustomStatement(\"Command must be in the form \u0027find \u003ctask name\u003e\u0027\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Command must be in the form \u0027find \u003ctask name\u003e\u0027\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String name \u003d command.substring(5); // remove everything before \"find\""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String[] words \u003d name.split(\" \");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cTask\u003e tasksThatMatched \u003d taskList.findMatchingTasks(words);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d \"\";"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (tasksThatMatched.size() \u003e 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Printer.printCustomStatement(\"Here\u0027s what you were looking for\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      output +\u003d \"Here\u0027s what you were looking for\";"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      for (Task t : tasksThatMatched) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        output +\u003d String.format(\"\\n %s\", t.toString());"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      output \u003d \"No matching tasks found! Try again?\";"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleDelete(String command) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      index \u003d Integer.parseInt(command.substring(7)) - 1;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // no proper number given"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Printer.printTaskNotFound();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No task name given\";"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Optional\u003cTask\u003e task \u003d taskList.removeTask(index);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (task.isPresent()) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String output \u003d Printer.printSuccessDeleteTask(task.get(), taskList.size());"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      updateStorage();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return output;"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Task deletion failed! Try again?\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleDone(String command) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d Character.getNumericValue(command.charAt(5));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Optional\u003cTask\u003e task \u003d taskList.setAsDone(index);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (task.isPresent()) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String output \u003d Printer.printSuccessSetTaskAsDone(task.get());"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      updateStorage();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return output;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Sorry! Task not found\";"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleAddTodo(String command) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d command.indexOf(\" \");"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1) {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No task name given\";"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    command \u003d command.substring(index + 1);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Task toDo \u003d new Todo(command);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    boolean isSuccess \u003d taskList.addTask(toDo);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (isSuccess) {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String output \u003d Printer.printSuccessAddTask(toDo, taskList.size());"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      updateStorage();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return output;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No task name given\";"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleAddDeadline(String command) {"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get content after the space"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d command.length() - 1) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No task name given\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get stuff after the space if there are still characters after the space"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String content \u003d command.substring(index + 1);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    index \u003d content.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get content after the slash"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d content.length() - 1) {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // nothing after the slash, or slash is not found"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No deadline given!\";"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // for String formatting reasons, check if there is a space before the slash"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d 0 || content.charAt(index - 1) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Command must be in the format \u0027deadline \u003ctask name\u003e /by \u003cyyyy-mm-dd\u003e\u0027 \";"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String taskName \u003d content.substring(0, index - 1);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get keyword, e.g. \"by\" or \"at\""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String keyword \u003d content.substring(index + 1, index + 3);"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    boolean matches \u003d keyword.equals(\"by\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (!matches) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Printer.printCustomStatement(\"duke.task.Task name does not start with proper arguments\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Task name does not start with proper arguments\";"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // get the deadline, e.g. deadline do homework /by tmr returns \"tmr\""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String deadline \u003d content.substring(index + 4);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      LocalDate dateTime \u003d LocalDate.parse(deadline);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Task newTask \u003d new Deadline(taskName, dateTime);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      boolean isSuccessful \u003d taskList.addTask(newTask);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (isSuccessful) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String output \u003d Printer.printSuccessAddTask(newTask, taskList.size());"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        return \"Sorry! Addition failed. Try again?\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No task name given\";"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Time given must be in the format yyyy-mm-dd\";"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleAddEvent(String command) {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    int index \u003d command.indexOf(\u0027 \u0027);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get content after the space"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d command.length() - 1) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No task name given\";"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get stuff after the space if there are still characters after the space"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String content \u003d command.substring(index + 1);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    index \u003d content.indexOf(\u0027/\u0027);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get content after the slash"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d -1 || index \u003d\u003d content.length() - 1) {"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"No event time given!\";"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // for String formatting reasons, check if there is a space before the slash"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (index \u003d\u003d 0 || content.charAt(index - 1) !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Command must be in the format \u0027event \u003ctask name\u003e /at \u003cyyyy-mm-dd\u003e\u0027 \";"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String taskName \u003d content.substring(0, index - 1);"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    // get keyword, e.g. \"by\" or \"at\""
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String keyword \u003d content.substring(index + 1, index + 3);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    boolean matches \u003d keyword.equals(\"at\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (!matches) {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Task name does not start with proper arguments\";"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    try {"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      // get the time, e.g. deadline do homework /by tmr returns \"tmr\""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String time \u003d content.substring(index + 4);"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      LocalDate dateTime \u003d LocalDate.parse(time);"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      Task newTask \u003d new Event(taskName, dateTime);"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      boolean isSuccessful \u003d taskList.addTask(newTask);"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      if (isSuccessful) {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        updateStorage();"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String output \u003d Printer.printSuccessAddTask(newTask, taskList.size());"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      } else {"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        return \"Sorry! Adding task failed\";"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      String output \u003d \"No task name given\";"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return output;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } catch (DateTimeException e) {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Time given must be in the format yyyy-mm-dd\";"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  private String handleList() {"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return taskList.iterate();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 239
    }
  },
  {
    "path": "src/main/java/duke/userinterface/Printer.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.exception.EmptyArgumentException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "/** Handles printing of messages to the User. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Printer {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Prints the message that is shown to user after a task is deleted."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param deletedTask duke.task.Task that was deleted"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param lengthAfterDeletion Number of tasks left after deletion"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Output of operation"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String printSuccessDeleteTask(Task deletedTask, int lengthAfterDeletion) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d String.format(\"Noted. I\u0027ve removed this task:\\n\" + deletedTask + \"\\n\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    output +\u003d"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String.format("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            \"Now you have %s %s in the list.\","
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            lengthAfterDeletion, lengthAfterDeletion \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Prints the message that is shown to user after a task is successfully set as down."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param successDone duke.task.Task that was set as done"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Success message"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String printSuccessSetTaskAsDone(Task successDone) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d String.format(\"Nice! I\u0027ve marked this task as done: \\n\" + successDone);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Prints the message that is shown to user after a task is successfully added."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param toDo duke.task.Task that was added"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param size Number of tasks left after the task was added"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @return Success message"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static String printSuccessAddTask(Task toDo, int size) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d \"Got it. I\u0027ve added this task: \" + toDo.toString() + \"\\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String numberTasks \u003d"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        String.format(\"Now you have %s %s in the list.\", size, size \u003d\u003d 1 ? \"task\" : \"tasks\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    output +\u003d numberTasks;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    return output;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints an error message when the duke.task.Task to be operated on couldn\u0027t be found. */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public static void printTaskNotFound() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println(new EmptyArgumentException(\"Sorry! Duke could not find the task\"));"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints an error message when the input given by user is invalid. */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static void printEmptyArgument() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println(new EmptyArgumentException(\"No task name given\"));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * Prints a custom String."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   *"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   * @param s String to be printed"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static void printCustomStatement(String s) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println(s);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 68
    }
  },
  {
    "path": "src/main/java/duke/userinterface/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "package duke.userinterface;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.stream.Stream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  Parser parser;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  static final char LINE \u003d \u0027*\u0027;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public Ui(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    this.parser \u003d new Parser(taskList, storage);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    start();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Handles I/O interaction with users and passes the command to the duke.userinterface.Parser. */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public String handleInteraction(String input) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    printTopLine();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d parser.handleCommand(input);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    printBottomLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    if (output \u003d\u003d \"\") {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return \"Sorry! Command not recognized \\n\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      return output + \"\\n\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints a welcome message to the user. */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  void start() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    printTopLine();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println(\"Hello! I\u0027m Duke \\n What can I do for you?\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    printBottomLine();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints the top line, e.g. ******************* */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  void printTopLine() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Stream.generate(() -\u003e LINE).limit(50).forEach(System.out::print); // _ _ _ _ _"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  /** Prints the bottom line e.g. **************** */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  void printBottomLine() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    Stream.generate(() -\u003e LINE).limit(50).forEach(System.out::print); // _ _ _ _ _"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    System.out.println();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 50
    }
  },
  {
    "path": "src/main/resources/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c!--\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e Not necessary, is default option --\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.geometry.*?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.scene.text.*?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import java.lang.*?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.scene.control.*?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c?import javafx.scene.layout.*?\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003cBorderPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"400.0\" prefWidth\u003d\"600.0\" xmlns\u003d\"http://javafx.com/javafx/8\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"Duke\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003ctop\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    \u003cVBox BorderPane.alignment\u003d\"CENTER\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003cchildren\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        \u003cHBox\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003cchildren\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cTextField fx:id\u003d\"command\" onAction\u003d\"#handleItemEntered\" promptText\u003d\"Input command here\"\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                     \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                        \u003cInsets left\u003d\"10.0\" top\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                     \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003c/TextField\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003c/children\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003cVBox.margin\u003e"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                  \u003cInsets bottom\u003d\"8.0\" left\u003d\"8.0\" right\u003d\"8.0\" top\u003d\"8.0\" /\u003e"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "               \u003c/VBox.margin\u003e\u003c/HBox\u003e"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003c/children\u003e"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    \u003c/VBox\u003e"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  \u003c/top\u003e"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   \u003ccenter\u003e"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "      \u003cTextArea fx:id\u003d\"console\" editable\u003d\"false\" BorderPane.alignment\u003d\"CENTER\" /\u003e"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "   \u003c/center\u003e"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "\u003c/BorderPane\u003e"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 32
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void testGetStringAfterCharacter() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d Duke.getStringAfterCharacter(\"abc def\", \u0027 \u0027);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    assertEquals(\"def\", output);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void getStringAfterCharacter_testNoCharacter_emptyString() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d Duke.getStringAfterCharacter(\"abc\", \u0027 \u0027);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    assertEquals(\"\", output);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void testGetStringBeforeCharacter() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d Duke.getStringBeforeCharacter(\"abc def\", \u0027 \u0027);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    assertEquals(\"abc\", output);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  public void getStringBeforeCharacter_testNoCharacter_emptyString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    String output \u003d Duke.getStringAfterCharacter(\"abc\", \u0027 \u0027);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    assertEquals(\"\", output);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "  }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 31
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    public void readFile() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        //UPDATE PATH OF TESTSTORAGE"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        Storage storage \u003d new Storage(\"C:/Users/Chunz/Desktop/ip/src/test/java/TestStorage.txt\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        List\u003cString\u003e output \u003d storage.readFile();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        List\u003cString\u003e expectedOutput \u003d readFileFromText(\"C:/Users/Chunz/Desktop/ip/src/test/java/TestStorage.txt\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        assertEquals(expectedOutput,output);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "chunyongg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    List\u003cString\u003e readFileFromText(String filePath) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        List\u003cString\u003e items \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        if (!file.exists()) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            return items; //empty list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            Scanner s \u003d new Scanner(file);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            while (s.hasNext()) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                String task \u003d s.nextLine();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "                items.add(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            return items;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "            return items; //empty list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 39
    }
  },
  {
    "path": "src/test/java/TestStorage.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Hello"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "Goodbye"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 2
    }
  },
  {
    "path": "text-ui-test/run.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "@echo off"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "cmd /k runtest.bat"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 2
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "chunyongg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "chunyongg": 1,
      "-": 20
    }
  }
]
