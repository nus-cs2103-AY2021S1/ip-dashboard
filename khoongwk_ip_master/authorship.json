[
  {
    "path": "data/taskList.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "todo - 1 - make coffee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "event - 1 - go for tutorial - Thursday 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "todo - 0 - eat dinner"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "event - 0 - presentation - 20th Sept 2pm"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 4
    }
  },
  {
    "path": "src/main/java/DateTimeProcessor.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.time.Month;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.Optional;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class DateTimeProcessor {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private ArrayList\u003cString\u003e possibleDateFormats \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            Arrays.asList("
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    \"dd/MM/yyyy\", \"yyyy/MM/dd\", \"MM/dd/yyyy\","
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    \"dd-MM-yyyy\", \"yyyy-MM-dd\", \"MM-dd-yyyy\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    )"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private ArrayList\u003cString\u003e possibleDateTimeFormats \u003d new ArrayList\u003c\u003e("
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            Arrays.asList("
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    \"dd/MM/yyyy HHmm\", \"yyyy/MM/dd HHmm\", \"MM/dd/yyyy HHmm\","
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    \"HHmm dd/MM/yyyy\", \"HHmm yyyy/MM/dd\", \"HHmm MM/dd/yyyy\","
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    \"dd-MM-yyyy HHmm\", \"yyyy-MM-dd HHmm\", \"MM/dd/yyyy HHmm\","
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    \"HHmm dd-MM-yyyy\", \"HHmm yyyy-MM-dd\", \"HHmm MM-dd-yyyy\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            )"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    );"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private Optional\u003cLocalDateTime\u003e parseDateTime(String input) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        for (String format : possibleDateTimeFormats) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Optional.of(LocalDateTime.parse(input, DateTimeFormatter.ofPattern(format)));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } catch (DateTimeParseException e) {}"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private Optional\u003cLocalDate\u003e parseDate(String input) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        for (String format : possibleDateFormats) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Optional.of(LocalDate.parse(input, DateTimeFormatter.ofPattern(format)));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } catch (DateTimeParseException e) {}"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return Optional.empty();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String getParsedDate(String input) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        Optional\u003cLocalDateTime\u003e possibleDateTime \u003d parseDateTime(input);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        Optional\u003cLocalDate\u003e possibleDate \u003d parseDate(input);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        if (possibleDateTime.isPresent()) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            LocalDateTime dateTime \u003d possibleDateTime.get();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            Month month \u003d dateTime.getMonth();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int day \u003d dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int year \u003d dateTime.getYear();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int hour \u003d dateTime.getHour();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int min \u003d dateTime.getMinute();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            String meridiem \u003d hour \u003e 12 ? \"PM\" : \"AM\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            return month.toString() + \" \" + day + \" \""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    + year + \" \" + (hour \u003e 12 ? hour - 12 : hour)"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    + \":\" + min + \" \" + meridiem;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } else if (possibleDate.isPresent()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            LocalDate dateTime \u003d possibleDate.get();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            Month month \u003d dateTime.getMonth();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int day \u003d dateTime.getDayOfMonth();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int year \u003d dateTime.getYear();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            return month.toString() + \" \" + day + \" \" + year;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // If no possible format can be found, just return"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // the same string."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            return input;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 72
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    String deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Deadline(String description, String deadline) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Deadline(String description, String deadline, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                + deadline + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String getDescriptionForDatabase() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"deadline - \" + (this.isTaskDone() ? \"1\" : \"0\") + \" - \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                this.getDescription() + \" - \" + this.deadline;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 26
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private boolean isRunning;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private enum Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        BYE, LIST, DONE, DELETE, TODO, EVENT, DEADLINE, FIND, INVALID"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.filePath \u003d System.getProperty(\"user.dir\")"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                + (System.getProperty(\"user.dir\").endsWith(\"text-ui-test\")"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    ? \"\\\\..\\\\data\\\\taskList.txt\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    : \"\\\\data\\\\taskList.txt\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.isRunning \u003d true;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Take the first keyword from the user\u0027s input, and return"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * an integer corresponding to the right command."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private Command getCommand(String input) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String lowerCaseInput \u003d input.toLowerCase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        switch (lowerCaseInput) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"bye\":"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.BYE;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"list\":"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.LIST;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"done\":"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.DONE;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"delete\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.DELETE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"todo\":"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.TODO;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"event\":"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.EVENT;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"deadline\":"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.DEADLINE;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            case \"find\":"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.FIND;"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                return Command.INVALID;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Main control system which loops user input until user exits with the"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * command \u0027bye\u0027."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void run() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        // TODO Need to GET saved list file and process it into ArrayList."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        openTaskList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String introduction \u003d"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                \"Hi, I\u0027m your Professor, Martin.\" +"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\nWhat can I do for you? You can ask me to do these:\" +"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\nlist: List the current tasks in your list.\" +"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\ntodo: Add a To-Do task.\" +"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\nevent: Add an Event task.\" +"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\ndeadline: Add a Deadline task.\" +"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"\\nfind: Find a task which matches your description.\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(introduction);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String input;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        // Loop program until command \u0027bye\u0027 is entered as input."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        while (isRunning) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Enter input:\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                Command command \u003d getCommand(input.split(\" \")[0]);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case BYE:"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        // TODO Need to implement saving mechanism."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        closeDuke();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case LIST:"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        listAllTasks();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case DONE:"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        if (input.substring(4).length() \u003e 1) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            // For processing \"done\" command with the corresponding integer value."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String numString \u003d input.substring(5);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            int entryNum \u003d Integer.parseInt(numString);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            markTaskDone(entryNum);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            throw new DukeException(\"Invalid number for done command.\");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case DELETE:"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        if (input.substring(6).length() \u003e 1) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String numString \u003d input.substring(7);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            int entryNum \u003d Integer.parseInt(numString);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            deleteTask(entryNum);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            throw new DukeException(\"Invalid number for delete command.\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case TODO:"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        if (input.substring(4).length() \u003e 1) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String description \u003d input.substring(5);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            Todo d \u003d new Todo(description);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            addTask(d);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            throw new DukeException(\"The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case EVENT:"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        if (input.substring(5).length() \u003e 1) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String description \u003d input.substring(6);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String[] processedDesc \u003d processTimedTask(description);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            Event e \u003d new Event(processedDesc[0], processedDesc[1]);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            addTask(e);"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            throw new DukeException(\"The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case DEADLINE:"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        if (input.substring(8).length() \u003e 1) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String description \u003d input.substring(9);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            String[] processedDesc \u003d processTimedTask(description);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            Deadline d \u003d new Deadline(processedDesc[0], processedDesc[1]);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            addTask(d);"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            throw new DukeException(\"The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    case FIND:"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        break;"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    // Default for INVALID command."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    default:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Exception occurred during main loop: \" + e);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        sc.close();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * List all tasks currently stored in the system."
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void listAllTasks() {"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        int numEntries \u003d taskList.size();"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        if (numEntries \u003d\u003d 0) {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"No tasks found.\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int i \u003d 0; i \u003c numEntries; i++) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println((i + 1) + \". \" + taskList.get(i));"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "-"
        },
        "content": "        }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Store task into the ArrayList."
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param t Task to be stored into the ArrayList."
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void addTask(Task t) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        taskList.add(t);"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(\"Got it, I\u0027ve added this task: \" + t);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Given a particular task number, mark that task in the task list as done."
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * as done."
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param taskNum The task number to mark as done."
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void markTaskDone(int taskNum) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (taskNum \u003c 0 || taskNum \u003e taskList.size()) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                throw new DukeException(\"Task number does not exist.\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                Task t \u003d taskList.get(taskNum - 1);"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                t.markDone();"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(t);"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while marking task as done: \" + e);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void deleteTask(int taskNum) {"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (taskNum \u003e 0 \u0026\u0026 taskNum \u003c\u003d taskList.size()) {"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Noted. I have removed this task:\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(taskList.get(taskNum - 1));"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                taskList.remove(taskNum - 1);"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                throw new DukeException(\"Invalid task number for current task list.\");"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while deleting task: \" + e);"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Helper function to process a timed task description (Event, Deadline) and"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * split it into 2 strings, the description and the task date."
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param str The raw string to be processed."
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @return A String array of size 2. Index 0 contains the task\u0027s description,"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * index 1 contains the date of the task."
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private String[] processTimedTask(String str) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        String[] result \u003d new String[2];"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // Split the string first then loop through to find the stop point at either /at or /by."
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            String[] arr \u003d str.split(\" \");"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            int indexToStop \u003d -1;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int i \u003d 0; i \u003c arr.length; i++) {"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (arr[i].equals(\"/at\") || arr[i].equals(\"/by\")) {"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    indexToStop \u003d i;"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    // Stop index when indicator /at or /by is found."
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (indexToStop \u003d\u003d -1) throw new DukeException(\"Incorrect Input for timed task.\");"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // Use StringBuilder Class to recreate the description and time separately."
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            StringBuilder sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int j \u003d 0; j \u003c indexToStop; j++) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                sb.append(arr[j]);"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (j !\u003d indexToStop - 1) sb.append(\" \");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // Event / Deadline description has been built, pass it to result[0]."
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            result[0] \u003d sb.toString();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // TODO Need to check if date and time match pattern for level 8."
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            sb \u003d new StringBuilder();"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            for (int k \u003d indexToStop + 1; k \u003c arr.length; k++) {"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                sb.append(arr[k]);"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (k !\u003d arr.length - 1) sb.append(\" \");"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            String date \u003d sb.toString();"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            // Now to check if this date can be formatted nicely using DateTimeProcessor class."
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            String parsedDate \u003d new DateTimeProcessor().getParsedDate(date);"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            result[1] \u003d parsedDate;"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while processing timed task: \" + e);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Get task list from the taskList.txt and transfer the contents"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * to the taskList ArrayList."
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void openTaskList() {"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            File savedList \u003d new File(filePath);"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (!savedList.exists()) {"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.print("
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        \"Welcome, first time user. Let me create \" +"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                \"a new database to store your tasks..\""
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                );"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(savedList.createNewFile() ? \" Success.\" : \" Failure.\");"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"Found your data! Give me some time to read it...\");"
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                // TODO Get content from file. Transfer to arraylist."
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                Scanner taskReader \u003d new Scanner(savedList);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                while (taskReader.hasNextLine()) {"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    String taskFromFile \u003d taskReader.nextLine();"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    // Note, this is assuming that format of"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    // Task.getDescriptionForDatabase() remains the same."
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    String[] formattedTaskString \u003d taskFromFile.split(\" - \");"
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    Command taskCommand \u003d getCommand(formattedTaskString[0]);"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    boolean isTaskDone \u003d formattedTaskString[1].equals(\"0\");"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    switch (taskCommand) {"
      },
      {
        "lineNumber": 286,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        case TODO:"
      },
      {
        "lineNumber": 287,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            taskList.add(new Todo(formattedTaskString[2], isTaskDone));"
      },
      {
        "lineNumber": 288,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 289,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        case EVENT:"
      },
      {
        "lineNumber": 290,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            taskList.add("
      },
      {
        "lineNumber": 291,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                    new Event("
      },
      {
        "lineNumber": 292,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                            formattedTaskString[2],"
      },
      {
        "lineNumber": 293,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                            formattedTaskString[3],"
      },
      {
        "lineNumber": 294,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                            isTaskDone"
      },
      {
        "lineNumber": 295,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                    )"
      },
      {
        "lineNumber": 296,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            );"
      },
      {
        "lineNumber": 297,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 298,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                        case DEADLINE:"
      },
      {
        "lineNumber": 299,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            taskList.add("
      },
      {
        "lineNumber": 300,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                    new Deadline("
      },
      {
        "lineNumber": 301,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                            formattedTaskString[2],"
      },
      {
        "lineNumber": 302,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                            formattedTaskString[3],"
      },
      {
        "lineNumber": 303,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                            isTaskDone"
      },
      {
        "lineNumber": 304,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                                    )"
      },
      {
        "lineNumber": 305,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            );"
      },
      {
        "lineNumber": 306,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 307,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 308,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 309,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                taskReader.close();"
      },
      {
        "lineNumber": 310,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 311,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 312,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch ("
      },
      {
        "lineNumber": 313,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                Exception exception) {"
      },
      {
        "lineNumber": 314,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception while opening task list file:\" + exception);"
      },
      {
        "lineNumber": 315,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 316,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 317,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 318,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 319,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Save the current list into a file and closes the program"
      },
      {
        "lineNumber": 320,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * by setting isRunning to false."
      },
      {
        "lineNumber": 321,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 322,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private void closeDuke() {"
      },
      {
        "lineNumber": 323,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        isRunning \u003d false;"
      },
      {
        "lineNumber": 324,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        // Begin process of saving Tasks in the taskList to the file."
      },
      {
        "lineNumber": 325,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 326,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            if (taskList.size() \u003e 0) {"
      },
      {
        "lineNumber": 327,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                File savedList \u003d new File(filePath);"
      },
      {
        "lineNumber": 328,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                FileWriter taskWriter \u003d new FileWriter(savedList);"
      },
      {
        "lineNumber": 329,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                // Need to clear the existing file before writing."
      },
      {
        "lineNumber": 330,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                if (savedList.exists()) {"
      },
      {
        "lineNumber": 331,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    savedList.delete();"
      },
      {
        "lineNumber": 332,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    savedList.createNewFile();"
      },
      {
        "lineNumber": 333,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 334,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                for (Task t : taskList) {"
      },
      {
        "lineNumber": 335,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    taskWriter.write(t.getDescriptionForDatabase());"
      },
      {
        "lineNumber": 336,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                    taskWriter.write(\"\\n\");"
      },
      {
        "lineNumber": 337,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                }"
      },
      {
        "lineNumber": 338,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                System.out.println(\"...Saved your list.\");"
      },
      {
        "lineNumber": 339,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                taskWriter.close();"
      },
      {
        "lineNumber": 340,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            }"
      },
      {
        "lineNumber": 341,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 342,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "            System.out.println(\"Exception occurred while closing Duke: \" + e.toString());"
      },
      {
        "lineNumber": 343,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        }"
      },
      {
        "lineNumber": 344,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        System.out.println(\"Bye, see you soon. Exiting...\");"
      },
      {
        "lineNumber": 345,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 346,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 347,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 348,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * Initialise program with a new instance of Duke."
      },
      {
        "lineNumber": 349,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     *"
      },
      {
        "lineNumber": 350,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     * @param args String array passed into main."
      },
      {
        "lineNumber": 351,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "     */"
      },
      {
        "lineNumber": 352,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 353,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        Duke dukeProgram \u003d new Duke();"
      },
      {
        "lineNumber": 354,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        dukeProgram.run();"
      },
      {
        "lineNumber": 355,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 356,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 350,
      "-": 6
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private String errorMsg;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public DukeException(String msg) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.errorMsg \u003d msg;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return errorMsg;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 13
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    String eventDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Event(String description, String date) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.eventDate \u003d date;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Event(String description, String date, boolean isDone) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.eventDate \u003d date;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                + eventDate + \")\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String getDescriptionForDatabase() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"event - \" + (this.isTaskDone() ? \"1\" : \"0\") + \" - \" +"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                this.getDescription() + \" - \" + this.eventDate;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 26
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    protected Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    protected Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[\" + (isDone ? \"✓\" : \"X\") + \"] \" + this.description;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public boolean isTaskDone() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public abstract String getDescriptionForDatabase();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 35
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    public String getDescriptionForDatabase() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "        return \"todo - \" + (this.isTaskDone() ? \"1\" : \"0\") +"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "                \" - \" + this.getDescription();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 21
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "todo make coffee"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "event go for tutorial /at Thursday 2pm"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "deadline individual project stage 8 /by Saturday 4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "todo eat dinner"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "\u003c\u003c\u003c\u003c\u003c\u003c\u003c HEAD"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "event presentation /at 20th Sept 2pm"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "\u003d\u003d\u003d\u003d\u003d\u003d\u003d"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "event 4th event /at 20-10-2021 1245"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "\u003e\u003e\u003e\u003e\u003e\u003e\u003e branch-Level-8"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "khoongwk": 14
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "javac -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "IF %ERRORLEVEL% EQU 0 ("
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    echo Files are the same."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ")"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "IF %ERRORLEVEL% EQU 1 ("
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "khoongwk"
        },
        "content": "    echo Files are different."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ")"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "khoongwk"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "khoongwk": 8,
      "-": 20
    }
  }
]
