[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "# main.java.duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/main.java.duke.Duke.java` file, right-click it, and choose `Run main.java.duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Deadline extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String taskType \u003d \"D\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    LocalDate localDate \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    LocalTime localTime \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String[] descSplitBySlash \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String[] descSplitBySpace \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Deadline(String description) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public LocalTime stringToLocalTime(String hour, String minutes) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        LocalTime lc \u003d LocalTime.parse(hour +\":\" + minutes);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return lc;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns a formatted description of the Deadline task, with the date and time dateline wrapped in parenthesis"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return a formatted description of the Deadline task, with the date and time dateline wrapped in parenthesis"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String formattedDescription() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // an array where index 0 contains \"deadline return book\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // an array where index 1 contains \"by 2019-10-15 1800\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        descSplitBySlash \u003d super.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        if (descSplitBySlash.length \u003e 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // description came from user input"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // an array where index 0 contains \"by\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // index 1 contains date"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // index 2 contains time"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            descSplitBySpace \u003d descSplitBySlash[1].split(\" \", 3);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            localDate \u003d LocalDate.parse(descSplitBySpace[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String timeString \u003d descSplitBySpace[2];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            localTime \u003d stringToLocalTime(timeString.substring(0, timeString.length() - 2),"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    timeString.substring(timeString.length() - 2));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return descSplitBySlash[0] + \"(\" + descSplitBySpace[0] + \": \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localDate.getMonth() + \" \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localDate.getYear()"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    +\", \""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localTime.format(DateTimeFormatter.ofPattern(\"HH:mm a\"))"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + \")\";"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // description came from System file."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return descSplitBySlash[0];"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns a string representation of the Deadline object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return a string representation of the Deadline object."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + taskType + \"]\" + \"[\" + super.getStatusIcon()"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"] \" + formattedDescription();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 63
    }
  },
  {
    "path": "src/main/java/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    Ui ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    TaskList taskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an instance of main.java.duke.Duke"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param filepath the directory of the tasklist.txt file where tasks are stored"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Duke(String filepath) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        storage \u003d new Storage(filepath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // task"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        taskList \u003d new TaskList(storage.getStartupTaskList());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        ui \u003d new Ui(taskList, storage);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Starts the user interface"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        ui.handleUserInput();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String workingDir \u003d System.getProperty(\"user.dir\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        Duke application \u003d new Duke(workingDir + File.separator"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"tasklist.txt\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        application.run();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 32,
      "-": 4
    }
  },
  {
    "path": "src/main/java/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class DukeException extends Exception{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an instance of DukeException, a custom class for exceptions found within the Duke application"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param error the strign representation of the error"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 13
    }
  },
  {
    "path": "src/main/java/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.LocalTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Event extends Task{"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String taskType \u003d \"E\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    LocalDate localDate \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    LocalTime localTime \u003d null;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String[] descSplitBySlash \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String[] descSplitBySpace \u003d null;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Event(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public LocalTime stringToLocalTime(String hour, String minutes) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        LocalTime lc \u003d LocalTime.parse(hour +\":\" + minutes);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return lc;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String formattedDescription() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // an array where index 0 contains \"deadline return book\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // an array where index 1 contains \"by 2019-10-15 1800\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        descSplitBySlash \u003d super.description.split(\"/\", 2);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        if (descSplitBySlash.length \u003e 1) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // description came from user input"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // an array where index 0 contains \"by\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // index 1 contains date"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // index 2 contains time"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            descSplitBySpace \u003d descSplitBySlash[1].split(\" \", 3);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            localDate \u003d LocalDate.parse(descSplitBySpace[1]);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String timeString \u003d descSplitBySpace[2];"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            localTime \u003d stringToLocalTime(timeString.substring(0, timeString.length() - 2),"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    timeString.substring(timeString.length() - 2));"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return descSplitBySlash[0] + \"(\" + descSplitBySpace[0] + \": \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localDate.getMonth() + \" \""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localDate.getDayOfMonth() + \" \""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localDate.getYear()"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    +\", \""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + localTime.format(DateTimeFormatter.ofPattern(\"HH:mm a\"))"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    + \")\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // description came from System file."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return descSplitBySlash[0];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + taskType + \"]\" + \"[\" + super.getStatusIcon()"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"] \" + formattedDescription();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 56
    }
  },
  {
    "path": "src/main/java/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns a task object according to the type of Task added by the user"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param input the string user input"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return a task object according to the type of Task added by the user"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Task handleInput(String input) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String[] commandComponents \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        String taskType \u003d commandComponents[0];"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        Task taskToReturn;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        if (taskType.equals(\"event\")) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return new Event(commandComponents[1]);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } else if (taskType.equals(\"deadline\")) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return new Deadline(commandComponents[1]);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } else if (taskType.equals(\"todo\")) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return new Todo(commandComponents[1]);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            return null;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 25
    }
  },
  {
    "path": "src/main/java/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private File file \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private Scanner fileScanner \u003d null;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private FileWriter appendFileWriter \u003d null;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private FileReader fileReader \u003d null;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private BufferedWriter bufferedAppendWriter \u003d null;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private BufferedReader bufferedReader \u003d null;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private ArrayList\u003cTask\u003e startupTaskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an instance of Storage and initializes File, Scanner, FileWriter, FileReader,"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * BufferedWriter and BufferedReader, some of which are used to do appending operations on the tasklist.txt file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param filepath"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Storage(String filepath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        // what about the IOException"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        file \u003d new File(filepath);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (!file.exists()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                file.createNewFile();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                fileScanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // while there is still a line of string to read, populate the tasklist"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                while(fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    // dissect the line of String to create Task objects."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    String taskDesc \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    String[] lineComponents \u003d taskDesc.split(\" \", 2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    Task toAdd \u003d null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    if (taskDesc.contains(\"[T]\")) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        toAdd \u003d new Todo(lineComponents[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } else if (taskDesc.contains(\"[D]\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        toAdd \u003d new Deadline(lineComponents[1]);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } else if (taskDesc.contains(\"[E]\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        toAdd \u003d new Event(lineComponents[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        System.out.println(\"Couldn\u0027t read saved tasks from System\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    if (taskDesc.contains(\"\\u2713\")) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        // description has a tick"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        toAdd.markDone();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    startupTaskList.add(toAdd);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // appendFileWriter appends new text whenever we write to the file"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            appendFileWriter \u003d new FileWriter(file, true);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            bufferedAppendWriter \u003d new BufferedWriter(appendFileWriter);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } catch (FileNotFoundException fnfe) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            System.out.println(fnfe.getMessage());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Writes a string input to the text file."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param input"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void writeToFile(String input) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            bufferedAppendWriter.write(input + System.lineSeparator());"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            bufferedAppendWriter.flush();"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Overrides the existing text file using the overriding bufferedWriter."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void changeFileContents(TaskList taskList) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // the FileWriter and BufferedWriters are created on demand here"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            // as they tend to change over time."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            FileWriter overrideFileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            BufferedWriter bufferedOverrideWriter \u003d new BufferedWriter(overrideFileWriter);;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                Task toWrite \u003d taskList.getTask(i);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                bufferedOverrideWriter.write(toWrite.toString() + System.lineSeparator());"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            bufferedOverrideWriter.flush();"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        } catch (IOException ioe) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            ioe.printStackTrace();"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns the task list saved previously in the text file."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public ArrayList\u003cTask\u003e getStartupTaskList() {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return startupTaskList;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 113
    }
  },
  {
    "path": "src/main/java/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an instance of the Task class, the parent class for Todo, Deadline and Event classes"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param description description of the task"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns the symbol indicating if the task has been completed"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Marks this instance of Task as done."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Marks this instance of Task as undone."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void markUndone() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns a string representation of the Task object."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return a string representation of the Task object."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + description;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 46
    }
  },
  {
    "path": "src/main/java/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an isntance of TaskList which is a wrapper class for an ArrayList"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param taskList"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Adds a task to the list"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param task to be added"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return true if the task was successfully added, false otherwise"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public boolean addTask(Task task) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return this.taskList.add(task);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns the task removed"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param taskIndex 0-indexed position of the task to be removed"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return the task removed"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Task removeTask(int taskIndex) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return this.taskList.remove(taskIndex);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns the task at the specified index parameter"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param taskIndex 0-indexed position of the task to be retrieved without removing it."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return the task at the specified index parameter"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return this.taskList.get(taskIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns the size of the arraylist task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return Returns the size of the task list"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Iterates through all tasks in the task ArrayList and appends tasks with descriptions"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * containing the keyword to the returned result."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param keyword to be used for the search"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return a string with all tasks that have descriptions containing the keyword."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String searchWithKeyword(String keyword) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        StringBuilder matches \u003d new StringBuilder();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String taskString \u003d taskList.get(i).toString();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (taskString.contains(keyword)) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                if (matches.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    matches.append(System.lineSeparator());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                matches.append(\"  \" + taskString + System.lineSeparator());"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return matches.toString();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Lists all tasks within the task list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (i \u003d\u003d taskList.size() - 1) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                result.append(\"  \" + (i+1) + \".\" + taskList.get(i));"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                result.append(\"  \" + (i+1) + \".\" + taskList.get(i) + System.lineSeparator());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 88
    }
  },
  {
    "path": "src/main/java/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    String taskType \u003d \"T\";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an instance of Todo class"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Returns a string representation of the Todo object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @return a string representation of the Todo object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        return \"[\" + taskType + \"]\" + \"[\" + super.getStatusIcon()"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                + \"] \" + super.description;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 24
    }
  },
  {
    "path": "src/main/java/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package main.java.duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private TaskList taskList \u003d null;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private Storage storage \u003d null;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Creates an instance of the Ui class"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param taskList taskList object used to store tasks"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param storage storage object used to read and write for the tasklist.txt file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public Ui(TaskList taskList, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Prints the DukeException error message."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * @param errMsg"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public static void invalidInput(String errMsg) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        DukeException exception \u003d new DukeException(errMsg);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        System.out.println(exception.getMessage());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Prints a horizontal line of fixed length."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public static void horiLine(int length) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        for (int i \u003d 0; i \u003c length; i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            System.out.print(\"-\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (i \u003d\u003d length - 1) System.out.println(\"\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * Takes in user input via a Scanner object. For commands bye, done and delete this"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * method updates the TaskList object and writes the changes to the System via the Storage object."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     * The inputting of new tasks is passed to the Parser object. Thereafter the application\u0027s responses are printed."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void handleUserInput() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        horiLine(60);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        System.out.println(\"  Hello! I\u0027m IntelliGent!\\n  What can I do for you?\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        horiLine(60);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String nextInput \u003d sc.nextLine();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String[] commandComponents \u003d nextInput.split(\" \", 2);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            String taskType \u003d commandComponents[0];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            horiLine(60);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            if (nextInput.equals(\"hello\")) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"  Hey! welcome to your nightmare!\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (nextInput.equals(\"bye\")) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(\"  Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                sc.close();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (nextInput.equals(\"list\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(taskList.toString());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (commandComponents[0].equals(\"done\")) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(commandComponents[1]) - 1;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    Task toMark \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    toMark.markDone();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    storage.changeFileContents(taskList);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"  Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"    \" + toMark.toString());"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"The task number does not exist!\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (commandComponents[0].equals(\"delete\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(commandComponents[1]) - 1;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    Task toDisplay \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    taskList.removeTask(taskIndex);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    storage.changeFileContents(taskList);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"  Noted. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"    \" + toDisplay.toString());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"  Now you have \" + taskList.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    System.out.println(\"The task number does not exist!\");"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else if (commandComponents[0].equals(\"find\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                String keyword \u003d commandComponents[1];"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                System.out.println(taskList.searchWithKeyword(keyword));"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                // pass user input to parser"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                if (commandComponents.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    invalidInput(\"  \\u2639 OOPS!!! The description of a task cannot be empty.\");"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        Task toAdd \u003d parser.handleInput(nextInput);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        if (toAdd \u003d\u003d null) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            invalidInput(\"  \\u2639 OOPS!!! I\u0027m sorry, but I don\u0027t know what \" +"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    \"that means :-(\");"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            storage.writeToFile(toAdd.toString());"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            System.out.println(\"  Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    + \"    \" + toAdd.toString() + \"\\n  Now you have \""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                    + (taskList.size()+1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                            taskList.addTask(toAdd);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } catch(ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        invalidInput(\"  \\u2639 OOPS!!! A deadline/event task must be input with a \" +"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                                \"forward slash and the deadline\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    } catch (DateTimeParseException dtpe) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                        System.out.println(\"Sorry, please key in a valid date and time format\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "            horiLine(60);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 122
    }
  },
  {
    "path": "src/test/java/duke/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import main.java.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void toStringTest1() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Complete assignment /by 2019-10-15 1233\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        assertEquals(\"[D][\\u2718] Complete assignment (by: OCTOBER 15 2019, 12:33 PM)\", deadline.toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void toStringTest2() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Have breakfast /by 2019-10-15 0800\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        assertEquals(\"[D][\\u2718] Have breakfast (by: OCTOBER 15 2019, 08:00 AM)\", deadline.toString());"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 20
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import main.java.duke.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import main.java.duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    public void addTest() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        TaskList taskList \u003d new TaskList(new ArrayList\u003c\u003e());"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "        assertEquals(true, taskList.addTask(new Deadline(\"Complete assignment /by 2019-10-15 1233\")));"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 18
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "return book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "todo buy iPhone"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline CS2103T Assignment /by Thursday 2359"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline sleep /by 3am"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "deadline invalid with no \\by ..."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "event invalid with no \\by ..."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "blah"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "1 done"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 18
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\main.java.duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "java -classpath ..\\bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/main.java.duke.Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ngzhenteng"
        },
        "content": "java -classpath ../bin main.java.duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ngzhenteng": 2,
      "-": 36
    }
  }
]
