[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 3,
      "-": 45
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 2,
      "-": 10
    }
  },
  {
    "path": "src/main/java/emily/command/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Customised exception to handle general exception"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * thrown when the program runs"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public DukeException(String error) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(error);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "underthehai": 14
    }
  },
  {
    "path": "src/main/java/emily/command/Emily.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Main program"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Emily {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private static final String FILE_PATH \u003d \"data/emily.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Initialises Emily bot"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param filePath location to store the information"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Emily(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            tasks \u003d new TaskList(storage.readData());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            File f \u003d new File(FILE_PATH);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Interact with the user"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Read the user commands, modifies the task list, prints out information"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String divider \u003d \"-------------------\";"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        boolean end \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        System.out.println(\"Hello, I am Emily\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + \"What can i do for you?\\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + divider);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        while (!end) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                while (!input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    ui.reading(input, tasks);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    storage.reWrite(tasks.getStore());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                end \u003d true;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(\"    OOPS! \" + e.getMessage() + \"\\n\" + divider);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        System.out.println(\"bye\\n\" + divider + \"\\nBye~, hope to see you again!\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        new Emily(FILE_PATH).run();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 68
    }
  },
  {
    "path": "src/main/java/emily/command/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Deals with making sense of the user command"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    Parser() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Convert the user input string to a proper Task"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param str of user input"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return A new Task with the input details"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException when the user input is invalid or is not in the proper form"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Task process(String str) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Task item \u003d new Task(\"\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (str.contains(\"todo\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String describe \u003d str.substring(5);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                item \u003d new ToDos(describe);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(\"    Got it! I have added this task:\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(\"        \" + item);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                return item;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else if (str.contains(\"deadline\")) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String description \u003d str.substring(9);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String[] temp \u003d description.split(\"/by \");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                item \u003d new Deadline(temp[0], temp[1]);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                return item;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String description \u003d str.substring(6);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String[] temp \u003d description.split(\"/at \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                item \u003d new Event(temp[0], temp[1]);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                return item;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"Invalid input\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (java.time.DateTimeException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"Invalid timestamp, should be in the form of yyy-mm--dd\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 57
    }
  },
  {
    "path": "src/main/java/emily/command/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.ToDos;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Deals with loading tasks from the txt file and saving tasks in the file"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private static String filepath;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    Storage(String filepath) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.filepath \u003d filepath;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Returns a list of tasks"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Reads the information from the txt file and process into a list of task"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return an Arraylist of Task"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException when the file is invalid"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e readData() throws DukeException {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        File f \u003d new File(filepath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        f.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (f.exists()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                while (sc.hasNext()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    String line \u003d sc.nextLine();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    char type \u003d line.charAt(0);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    boolean isCompleted \u003d line.charAt(1) \u003d\u003d \u00271\u0027;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    String[] temp;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    switch (type) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        case \u0027T\u0027:"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            temp \u003d line.split(\",\", 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            Task t \u003d new ToDos(temp[1]);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            t.setFinished(isCompleted);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            store.add(t);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        case \u0027D\u0027:"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            temp \u003d line.split(\",\", 3);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            Task d \u003d new Deadline(temp[1], temp[2]);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            d.setFinished(isCompleted);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            store.add(d);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        case \u0027E\u0027:"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            temp \u003d line.split(\",\", 3);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            Task e \u003d new Event(temp[1], temp[2]);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            e.setFinished(isCompleted);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            store.add(e);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            break;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        default:"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            throw new DukeException(\"invalid type of task\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                f.createNewFile();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            return store;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"file is not found\");"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"file already existed\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Updates the txt file when there are modifications to the task list"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param store contains the updated list of task"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException for invalid file"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void reWrite(ArrayList\u003cTask\u003e store) throws DukeException {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            FileWriter fw \u003d new FileWriter(this.filepath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String txt \u003d \"\";"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            for (int i \u003d 0; i \u003c store.size(); i++) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String temp \u003d \"\";"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                Task current \u003d store.get(i);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                if (current instanceof ToDos) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    temp \u003d \"T\" + (current.isFinished() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            + \",\" + current.getDescription();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                } else if (current instanceof Deadline) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    temp \u003d \"D\" + (current.isFinished() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            + \",\" + current.getDescription() + \",\" + ((Deadline) current).getBy();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                } else if (current instanceof Event) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    temp \u003d \"E\" + (current.isFinished() ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                            + \",\" + current.getDescription() + \",\" + ((Event) current).getAt();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                txt \u003d txt + temp + System.lineSeparator();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            fw.write(txt);"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"invalid file\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 121
    }
  },
  {
    "path": "src/main/java/emily/command/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Modifies the arraylist of tasks and contains the most updated list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * of tasks"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    private ArrayList\u003cTask\u003e store \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    TaskList(ArrayList\u003cTask\u003e store) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.store \u003d store;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e getStore() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.store;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void add(Task t) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        store.add(t);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Removes the corresponding task based on the index"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param index provided by the user"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void delete(int index) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        store.remove(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Looks through the list of tasks."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Provides a list of tasks containing the given keyword."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param keyword matches the task description"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return a list of task the user is finding"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ArrayList\u003cTask\u003e finder(String keyword) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        ArrayList\u003cTask\u003e ls \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        for (Task t : this.store) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            String d \u003d t.getDescription();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (d.contains(keyword)) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                ls.add(t);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return ls;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 52
    }
  },
  {
    "path": "src/main/java/emily/command/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Deals with interactions with the user"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Receives commands from the user"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    Ui() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Read a line of input from the user and modify the task list accordingly"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param input command from the user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param ls    to be modified"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @throws DukeException when there is invalid command"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void reading(String input, TaskList ls) throws DukeException {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Task current;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        Parser p \u003d new Parser();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        String divider \u003d \"    ---------------\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        if (input.isEmpty() || input.trim().isEmpty()) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"input is empty\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"list\")) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            int num \u003d 1;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            for (Task c : ls.getStore()) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String item \u003d \"    \" + num + \". \" + c;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                num++;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(item);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            System.out.println(divider);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"todo\") || input.contains(\"deadline\") || input.contains(\"event\")) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (input.trim().equals(\"todo\") || input.trim().equals(\"deadline\") || input.trim().equals(\"event\")"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    || input.trim().equals(\"deadline/by\") || input.trim().equals(\"event/at\")) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                throw new DukeException(\"The description of \" + input + \" cannot be empty\");"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                //call parser to convert to task"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                current \u003d p.process(input);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                ls.add(current);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(\"    Now you have \" + (ls.getStore().size())"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        + \" tasks in the list\" + \"\\n\" + divider);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else if (input.contains(\"done\") || input.contains(\"delete\") || input.contains(\"find\")) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            if (input.contains(\"done\")) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                int index \u003d Character.getNumericValue(input.charAt(5)) - 1;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                current \u003d ls.getStore().get(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                current.setFinished(true);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(divider + \"\\n    Nice work, I have marked this task as done: \""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        + current + \"\\n\" + divider);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else if (input.contains(\"delete\")) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                if (input.trim().equals(\"delete\")) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    throw new DukeException(\"missing index\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                int index \u003d Character.getNumericValue(input.charAt(7)) - 1;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                if ((index + 1) \u003e ls.getStore().size()) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    throw new DukeException(\"Invalid index\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                current \u003d ls.getStore().get(index);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                ls.delete(index);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(divider + \"\\n    I have deleted this task for you: \" + current);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(\"    You have \" + ls.getStore().size() + \" tasks in your list now\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                        + \"\\n\" + divider);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            } else { //case of finding"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                if (input.trim().equals(\"find\")) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    throw new DukeException(\"missing keyword\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                String keyword \u003d input.substring(5);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                ArrayList\u003cTask\u003e arr \u003d ls.finder(keyword);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(divider + \"\\n    Here are the matching tasks in your list\");"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                int index \u003d 1;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                for (Task t : arr) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    System.out.println(index + \". \" + t);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                System.out.println(divider);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "underthehai"
        },
        "content": "            throw new DukeException(\"Command is not recognised\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 109
    }
  },
  {
    "path": "src/main/java/emily/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents a Deadline task which has a timestamp by a given date"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * and a description detail"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected String timeStamp;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Subclass of Task with timestamp"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param timeStamp"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Deadline(String description, String timeStamp) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.by \u003d LocalDate.parse(timeStamp);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Getter method to retrieve timestamp"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return timestamp in the format yyy-mm--dd"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getBy() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.timeStamp;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[D]\" + super.toString() + \"(by: \""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + this.by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 44
    }
  },
  {
    "path": "src/main/java/emily/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents an Event task which has a timestamp at a given time"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * and description"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected String timeStamp;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Subclass of Task with a timestamp"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param timeStamp"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Event(String description, String timeStamp) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.timeStamp \u003d timeStamp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.at \u003d LocalDate.parse(timeStamp);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.type \u003d \u0027E\u0027;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Getter method to retrieve timestamp"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @return String of the date in the form yyy-mm-dd"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getAt() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return timeStamp;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[E]\" + super.toString()"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": "                + \"(at: \" + this.at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\")) + \")\";"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 41
    }
  },
  {
    "path": "src/main/java/emily/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents the basic structure of a sample task from the user input."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * A task will have a string of description detail."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected char type;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    protected boolean isFinished;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.isFinished \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void setFinished(boolean b) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.isFinished \u003d b;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public boolean isFinished() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.isFinished;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return (isFinished ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public char getType() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return this.type;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 44
    }
  },
  {
    "path": "src/main/java/emily/task/ToDos.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package main.java.emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": " * Represents a task that has a simple description"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class ToDos extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * Subclass of Task with a given type"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     *"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     * @param description"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public ToDos(String description) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        this.type \u003d \u0027T\u0027;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 22
    }
  },
  {
    "path": "src/test/java/ToDosTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package test.java;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "public class ToDosTest {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 4
    }
  },
  {
    "path": "src/test/java/emily/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "class TaskTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    public void testIsFinished(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        assertEquals(false, new Task(\"\").isFinished());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 14
    }
  },
  {
    "path": "src/test/java/test/java/emily/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "package test.java.emily.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import main.java.emily.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "import static org.junit.jupiter.api.Assertions.*;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "underthehai"
        },
        "content": "class DeadlineTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    void testToString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "underthehai"
        },
        "content": "        assertEquals(\"[D][✘] return book(by: Sep 9 2020)\", new Deadline(\"return book\", \"2020-09-09\").toString());"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "underthehai"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "underthehai"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "underthehai": 14
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": "deadline return book /by Monday"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "underthehai"
        },
        "content": "todo Math"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "underthehai"
        },
        "content": "event book reading /at 430pm Tuesday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "underthehai"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "underthehai"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "underthehai"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "underthehai"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "underthehai": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "underthehai"
        },
        "content": ""
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "underthehai"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "underthehai"
        },
        "content": "java -classpath ..\\bin main.java.Emily \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "underthehai": 3,
      "-": 19
    }
  }
]
