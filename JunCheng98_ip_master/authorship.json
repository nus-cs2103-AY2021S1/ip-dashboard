[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.4.2\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.4.2\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    mainClassName \u003d \"duke.main.Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/*"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " *"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * This is a general purpose Gradle build."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Learn how to create Gradle builds at https://guides.gradle.org/creating-new-gradle-builds"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 68
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "T \u003e N \u003e this thing"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "E \u003e N \u003e attend meeting \u003e at: 2020-08-29"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "D \u003e Y \u003e do project \u003e by: 2019-01-09"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "T \u003e Y \u003e something"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "D \u003e N \u003e something else \u003e by: 2020-08-01"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "E \u003e N \u003e another one \u003e at: 2020-01-01"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 6
    }
  },
  {
    "path": "gradlew.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Copyright 2015 the original author or authors."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Licensed under the Apache License, Version 2.0 (the \"License\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem you may not use this file except in compliance with the License."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem You may obtain a copy of the License at"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem      https://www.apache.org/licenses/LICENSE-2.0"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Unless required by applicable law or agreed to in writing, software"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem distributed under the License is distributed on an \"AS IS\" BASIS,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem See the License for the specific language governing permissions and"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem limitations under the License."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@if \"%DEBUG%\" \u003d\u003d \"\" @echo off"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem  Gradle startup script for Windows"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem ##########################################################################"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Set local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" setlocal"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set DIRNAME\u003d%~dp0"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if \"%DIRNAME%\" \u003d\u003d \"\" set DIRNAME\u003d."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set APP_BASE_NAME\u003d%~n0"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set APP_HOME\u003d%DIRNAME%"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Resolve any \".\" and \"..\" in APP_HOME to make it shorter."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "for %%i in (\"%APP_HOME%\") do set APP_HOME\u003d%%~fi"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Add default JVM options here. You can also use JAVA_OPTS and GRADLE_OPTS to pass JVM options to this script."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set DEFAULT_JVM_OPTS\u003d\"-Xmx64m\" \"-Xms64m\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Find java.exe"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if defined JAVA_HOME goto findJavaFromJavaHome"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set JAVA_EXE\u003djava.exe"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "%JAVA_EXE% -version \u003eNUL 2\u003e\u00261"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if \"%ERRORLEVEL%\" \u003d\u003d \"0\" goto execute"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo ERROR: JAVA_HOME is not set and no \u0027java\u0027 command could be found in your PATH."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ":findJavaFromJavaHome"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set JAVA_HOME\u003d%JAVA_HOME:\"\u003d%"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set JAVA_EXE\u003d%JAVA_HOME%/bin/java.exe"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if exist \"%JAVA_EXE%\" goto execute"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo ERROR: JAVA_HOME is set to an invalid directory: %JAVA_HOME%"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo Please set the JAVA_HOME variable in your environment to match the"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "echo location of your Java installation."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "goto fail"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ":execute"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Setup the command line"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "set CLASSPATH\u003d%APP_HOME%\\gradle\\wrapper\\gradle-wrapper.jar"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem Execute Gradle"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\"%JAVA_EXE%\" %DEFAULT_JVM_OPTS% %JAVA_OPTS% %GRADLE_OPTS% \"-Dorg.gradle.appname\u003d%APP_BASE_NAME%\" -classpath \"%CLASSPATH%\" org.gradle.wrapper.GradleWrapperMain %*"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ":end"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "@rem End local scope for the variables with windows NT shell"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if \"%ERRORLEVEL%\"\u003d\u003d\"0\" goto mainEnd"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ":fail"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "rem Set variable GRADLE_EXIT_CONSOLE if you need the _script_ return code instead of"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "rem the _cmd.exe /c_ return code!"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if  not \"\" \u003d\u003d \"%GRADLE_EXIT_CONSOLE%\" exit 1"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "exit /b 1"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ":mainEnd"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if \"%OS%\"\u003d\u003d\"Windows_NT\" endlocal"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ":omega"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 89
    }
  },
  {
    "path": "settings.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/*"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * This file was generated by the Gradle \u0027init\u0027 task."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " *"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * The settings file is used to specify which projects to include in your build."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Detailed information about configuring a multi-project build in Gradle can be found"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * in the user manual at https://docs.gradle.org/6.6.1/userguide/multi_project_builds.html"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "rootProject.name \u003d \u0027ip\u0027"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 10
    }
  },
  {
    "path": "src/main/java/duke/command/CheckCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the Command which checks and loads tasks which occur"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * on the date specified in the check command entered by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class CheckCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public CheckCommand(LocalDate date) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String result \u003d ui.printCheckStatement(date);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (lib.get(i).getDate() \u003d\u003d null) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (lib.get(i).getDate().equals(date)) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                result +\u003d ui.showTask(lib.get(i).toString());"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return result + ui.printEndLine();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 40
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the parent Command class with abstract methods for execute and"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * checking completion status of program."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public abstract String execute(TaskList tasks, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 15
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which creates a new Deadline task to add to the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a deadline command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param time The date of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DeadlineCommand(String description, String time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Deadline deadline \u003d new Deadline(description, time);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.addDeadline(deadline);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printAddStatements(deadline.toString(), lib.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printExceptions(ex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 45
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which deletes a task from the task list."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (index \u003e\u003d lib.size() || lib.size() \u003d\u003d 0 || index \u003c 0) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printExceptions(new DukeException("
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"This task ID does not exist in the database!\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String task \u003d lib.get(index).toString();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            int size \u003d lib.size() - 1;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printDeleteStatement(task, size);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 38
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which marks a task in the list as complete."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (index \u003e\u003d lib.size() || lib.size() \u003d\u003d 0 || index \u003c 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printExceptions(new DukeException("
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    \"This task ID does not exist in the database!\"));"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.completeTask(index);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printDoneStatement(lib.get(index).toString());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 34
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which creates a new Event task to add to the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates an event command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param time The event date."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public EventCommand(String description, String time) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.time \u003d time;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Event event \u003d new Event(description, time);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks.addEvent(event);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printAddStatements(event.toString(), lib.size());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printExceptions(ex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a command which facilitates leaving the Duke program."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            storage.save(tasks.getTaskList());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.showEndMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printExceptions(ex);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 24
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String keyWord;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public FindCommand(String keyWord) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.keyWord \u003d keyWord;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String result \u003d ui.printFindStatement();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (lib.get(i).getDescription().contains(keyWord)) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                result +\u003d ui.showTask(lib.get(i).toString());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return result + ui.printEndLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 32
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return ui.showCommands();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 14
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which lists out all the tasks in the list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return ui.showCurrentTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 17
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a Command which creates a new ToDo task to add to the task"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * list."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String execute(TaskList tasks, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d tasks.getTaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ToDo todo \u003d new ToDo(description);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        tasks.addTodo(todo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return ui.printAddStatements(todo.toString(), lib.size());"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 32
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the exception system that Duke uses to handle"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * program issues that occur during its runtime."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 12
    }
  },
  {
    "path": "src/main/java/duke/main/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.DialogBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the core class which coordinates with all other key classes to"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * take in input, process it and produce the output that the Duke program displays"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * to its users."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    // attributes for multi-class coordination"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Parser parser \u003d new Parser();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    // attributes for JavaFX"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a Duke object which holds a file path and uses it to load"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * the text file from the hard drive or create one if it does not yet exist."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * It also creates new Ui and Storage objects for functionality."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String filePath \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            handleExceptions(\"FileNotFound\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            storage.createFile();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            handleExceptions(\"DukeException\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        //Step 2.5. Deal with exception handling and start message printing when app starts to run"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        handleStart();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        showList();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        userInput.setOnAction((event) -\u003e handleUserInput());"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        //Scroll down to the end every time dialogContainer\u0027s height changes."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * and then appends them to the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String response \u003d getResponse(input);"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                DialogBox.getUserDialog(new Label(input), new ImageView(user)),"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                DialogBox.getDukeDialog(new Label(response), new ImageView(duke))"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        );"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        // exit Duke if \"bye\" was called"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (input.equals(\"bye\") || input.equals(\"b\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Platform.exit();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private void handleExceptions(String errorName) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assert (errorName !\u003d null) : \"The error name cannot be null!\";"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String printedStatement \u003d \"\";"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (errorName.equals(\"FileNotFound\")) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            printedStatement \u003d ui.loadFileError();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (errorName.equals(\"DukeException\")) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            printedStatement \u003d ui.loadDateError();"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                DialogBox.getDukeDialog(new Label(printedStatement), new ImageView(duke)));"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private void handleStart() {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                DialogBox.getDukeDialog(new Label(ui.showStartMessage()), new ImageView(duke)));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private void showList() {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                DialogBox.getDukeDialog(new Label(ui.showCurrentTasks(tasks.getTaskList())),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        new ImageView(duke)));"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assert (input !\u003d null) : \"The input cannot be null!\";"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ui.showCurrentTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Command c \u003d parser.parse(input);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return c.execute(tasks, ui, storage);"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DukeException ex) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return ui.printExceptions(ex);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 186,
      "-": 2
    }
  },
  {
    "path": "src/main/java/duke/main/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 14
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.CheckCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Parses the string commands passed into the program by the user through"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * the console, and afterward processes them to create Command objects."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Checks if a given String is a number"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param test The String to test"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A boolean confirming if the String is a number"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public boolean isNumeric(String test) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            Integer.parseInt(test);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (NumberFormatException ex) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses the input given by the user into the program."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param command The command entered by the user."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A new Command object."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If command is invalid or missing details."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command parse(String command) throws DukeException {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String[] parsedCommand \u003d command.split(\" \", 2);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (parsedCommand.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return checkOneWord(command);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return checkTwoWords(parsedCommand);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses one word commands. (e.g. bye, list)"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param command The command entered by the user."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A command"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If command is invalid or is missing some details."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command checkOneWord(String command) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"b\":"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"l\":"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"help\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"h\":"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"t\":"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"d\":"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"e\":"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a valid\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    + \" description for your task!\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"o\":"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the ID \""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    + \"of the task you would like to complete.\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"x\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please retry and enter \""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    + \"the ID of the task to be deleted.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"check\":"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"c\":"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a date to check!\");"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"f\":"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a keyword to search for.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter a valid \""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    + \"command into the console.\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses two word commands. (e.g. done 2, delete 3)"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param parsedCommand The parsed command entered by the user."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A command."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If the command entered is invalid."
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command checkTwoWords(String[] parsedCommand) throws DukeException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String task \u003d parsedCommand[0];"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        switch (task) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"o\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (!isNumeric(parsedCommand[1])) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter a valid task number to complete!\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                int index \u003d Integer.parseInt(parsedCommand[1]) - 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new DoneCommand(index);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"x\":"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (!isNumeric(parsedCommand[1])) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter a valid task number for deletion!\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                int index \u003d Integer.parseInt(parsedCommand[1]) - 1;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new DeleteCommand(index);"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"check\":"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"c\":"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                LocalDate checkedDate \u003d LocalDate.parse(parsedCommand[1]);"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new CheckCommand(checkedDate);"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        case \"f\":"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            return new FindCommand(parsedCommand[1]);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (task.equals(\"todo\") || task.equals(\"t\")) {"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return new TodoCommand(parsedCommand[1]);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else if (task.equals(\"deadline\") || task.equals(\"event\")"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                || task.equals(\"d\") || task.equals(\"e\")) {"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                return checkValidTime(parsedCommand);"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"Please enter a valid task name to add into the list!\");"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Parses commands involving time-based tasks."
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param parsedCommand The parsed command entered by the user."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A command."
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If the date entered is in the wrong format."
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Command checkValidTime(String[] parsedCommand) throws DukeException {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String task \u003d parsedCommand[0];"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String[] processTimePrefix \u003d parsedCommand[1].split(\"/\");"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        if (processTimePrefix.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"You need to include \u0027/by\u0027 or \u0027/at\u0027 for this task to describe the time.\");"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String[] time \u003d processTimePrefix[1].split(\" \", 2);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (time.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                throw new DukeException(\"The time description cannot be left blank!\");"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                if (task.equals(\"deadline\") || task.equals(\"d\")) {"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    return new DeadlineCommand(processTimePrefix[0].trim(),"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                            time[1].trim());"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    assert (task.equals(\"event\") || task.equals(\"e\")) : \"This task name does not exist!\";"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                    return new EventCommand(processTimePrefix[0].trim(),"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                            time[1].trim());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 184
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a save-and-load system that allows task information to be saved to the hard drive"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * via a text file when the program ends, as well as allow the information to be loaded to"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * the UI system when the program begins."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private static final String DONE \u003d \"Y\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a file and its parent directory in reference to the project root"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * folder. If the file exists, nothing will change."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void createFile() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            saveFile.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            saveFile.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (IOException ex) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            ex.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Loads the contents of the text file onto an ArrayList to create a task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A task list."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws FileNotFoundException If file cannot be found."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format is incorrect."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ArrayList\u003cTask\u003e load() throws FileNotFoundException, DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ArrayList\u003cTask\u003e lib \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        File file \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Scanner reader \u003d new Scanner(file);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        while (reader.hasNext()) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String next \u003d reader.nextLine();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String[] parsedNext \u003d next.split(\"\u003e\");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (parsedNext[0].trim().equals(\"D\")) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                String[] time \u003d parsedNext[3].trim().split(\" \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                Deadline deadline \u003d new Deadline(parsedNext[2].trim(),"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        time[1], parsedNext[1].trim().equals(DONE));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                lib.add(deadline);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (parsedNext[0].trim().equals(\"E\")) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                String[] time \u003d parsedNext[3].trim().split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                Event event \u003d new Event(parsedNext[2].trim(),"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        time[1], parsedNext[1].trim().equals(DONE));"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                lib.add(event);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (parsedNext[0].trim().equals(\"T\")) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ToDo toDo \u003d new ToDo(parsedNext[2].trim(),"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                        parsedNext[1].trim().equals(DONE)"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                );"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                lib.add(toDo);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return lib;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Writes the task list to a text file."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param filePath The path that the text file resides."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param textToAdd The text to add to the file."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws IOException If FileWriter has issues with the given path."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void writeToFile(String filePath, String textToAdd) throws IOException {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.write(textToAdd);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Appends the text provided to a text file."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param filePath The path where the text file is."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param textToAppend The text to append to the file."
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws IOException If FileWriter has issues with the given path."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void appendToFile(String filePath, String textToAppend) throws IOException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        FileWriter writer \u003d new FileWriter(filePath, true);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.write(textToAppend);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        writer.close();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Save the data from the updated task list to the text file and hence the hard"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * drive."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param lib The updated task list."
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws IOException If issues occur when writing the text to the file path."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void save(ArrayList\u003cTask\u003e lib) throws IOException {"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c lib.size(); i++) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            String curr \u003d lib.get(i).saveData();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            if (i \u003d\u003d 0) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                writeToFile(\"data/duke.txt\", curr + \"\\n\");"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else if (i \u003d\u003d (lib.size() - 1)) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                appendToFile(\"data/duke.txt\", curr);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                appendToFile(\"data/duke.txt\", curr + \"\\n\");"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 131
    }
  },
  {
    "path": "src/main/java/duke/storage/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the list of tasks that the user currently stores. Allows"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * for the deletion and addition of all types of supported tasks."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a TaskList object with an existing task list from the hard drive."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param taskList The saved task list from hard drive."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assert (this.taskList !\u003d null) : \"List cannot be null!\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ArrayList\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void completeTask(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.get(index).finishTask();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void addDeadline(Deadline deadline) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.add(deadline);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void addEvent(Event event) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.add(event);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void addTodo(ToDo todo) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.add(todo);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 54
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a deadline task which contains a valid LocalDate."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a deadline task with a description and deadline date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task to complete by deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param by The date that the task has to be completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format entered is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Deadline(String description, String by) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a completed deadline task with description and date. Used only when loading"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * data to the program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task that is completed."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param by The date which should have passed."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param isDone The task completion status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Deadline(String description, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"D \u003e \" + super.saveData() + \" \u003e by: \" + this.date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"D \u003e \" + super.toString() + \" \u003e by: \" + printDate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates an event task which contains a valid LocalDate."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates an event task with description and attendance date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param at The attendance date."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format entered is invalid."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Event(String description, String at) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a completed event task with description and attendance date. Used only when"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * loading data to program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param at The attendance date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param isDone The task completion status."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @throws DukeException If date format is invalid."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Event(String description, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        } catch (DateTimeParseException ex) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            throw new DukeException(\"Please enter the date in this format: yyyy-mm-dd\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"E \u003e \" + super.saveData() + \" \u003e at: \" + this.date;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"E \u003e \" + super.toString() + \" \u003e at: \" + printDate();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 56
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the parent class for all types of tasks."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private static final String DONE \u003d \"Y\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private static final String NOT_DONE \u003d \"N\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    protected LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a generic task with a description."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assert (this.description !\u003d null) : \"The description cannot be left empty.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                ? DONE"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                : NOT_DONE;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints the date in a different format"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return The new format of the date."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printDate() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return this.date.getDayOfWeek() + \", \" + this.date.getMonth() + \" \""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + this.date.getDayOfMonth() + \" \" + this.date.getYear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void finishTask() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return getStatusIcon() + \" \u003e \" + this.description;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return getStatusIcon() + \" \u003e \" + this.description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 65
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a ToDo task."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a ToDo event."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param description The task details."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param isDone Informs program if task is done."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String saveData() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"T \u003e \" + super.saveData();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"T \u003e \" + super.toString();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 31
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Creates a box that holds text as well as the user\u0027s profile image."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param l The label."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param iv The profile image."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 57
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates a UI system which is responsible for printing the responses that the"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * user can interact with. It also reads and passes commands to the Duke class."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String startLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\\n\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    private String endLine \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Shows a message when program starts to run."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return The starting message."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String showStartMessage() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"Hello! I\u0027m Duke!\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"\\n\" + showCommands();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints the available list of commands."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return The list of commands."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String showCommands() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return \"Here are a list of commands you can use \""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"(You can type the letter labelled next to any of the following commands \""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"as a shortcut, instead of their full name):\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"1. (l) list (shows all currently listed tasks)\\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"2. (b) bye (exit the program)\\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"3. (o) done \u003ctask number\u003e (mark the task with \u003ctask number\u003e as complete)\\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"4. (x) delete \u003ctask number\u003e (delete this task with \u003ctask number\u003e from list)\\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"5. (c) check \u003cyyyy-mm-dd\u003e (check tasks that are due or occurring on \u003cyyyy-mm-dd\u003e)\\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"6. (t) todo \u003cdescription\u003e (adds todo task to list with \u003cdescription\u003e)\\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"7. (d) deadline \u003cdescription\u003e /by \u003ctime\u003e (adds deadline to list with \""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"\u003cdescription\u003e and due by \u003ctime\u003e)\\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"8. (e) event \u003cdescription\u003e /at \u003ctime\u003e (adds event to list with \""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"\u003cdescription\u003e and occurs at \u003ctime\u003e)\\n\""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"9. (f) find \u003cword\u003e (list tasks that contain \u003cword\u003e in description)\\n\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \"10. (h) help (show this instruction list again)\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + endLine;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String showTask(String taskString) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return taskString + \"\\n\";"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints the list of current tasks."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param tasks The list of tasks."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return The string representation of the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String showCurrentTasks(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String start \u003d startLine + \"Here are the task(s) in your list:\\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        String append \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            append +\u003d (i + 1) + \". \" + tasks.get(i).toString() + \"\\n\";"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return start + append + endLine;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printEndLine() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return endLine;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints a confirmation message that a task is done."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param taskString The toString result of the task."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A confirmation message."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printDoneStatement(String taskString) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"Nice! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + taskString + \"\\n\" + endLine;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints a confirmation message for a deletion of a task."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param taskString The toString result of the task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param size The size of the task list."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A confirmation message."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printDeleteStatement(String taskString, int size) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"The following task has been deleted:\\n\""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + taskString + \"\\n\" + \"Now you have \" + size + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + endLine;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints the result of checking tasks with the given date."
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param date The given date."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A statement."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printCheckStatement(LocalDate date) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"You have the following\""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + \" tasks on \" + date + \":\\n\";"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printFindStatement() {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"Here are the matching tasks in your list:\\n\";"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints a confirmation that a task has been added."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param taskString The toString result of the task."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @param size The number of tasks."
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A confirmation message"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printAddStatements(String taskString, int size) {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"Got it. I\u0027ve added this task:\\n\""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + taskString + \"\\n\" + \"Now you have \" + size + \" task(s) in the list.\\n\""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + endLine;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints a date loading error."
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return An error message."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String loadDateError() {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"Please enter the date in this format: yyyy-mm-dd\\n\""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + endLine;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints a file load error."
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return An error message."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String loadFileError() {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"File cannot be found. Creating new file now.\\n\""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                + endLine;"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String printExceptions(Exception ex) {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + ex.getMessage() + \"\\n\" + endLine;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * Prints ending comment to user."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     * @return A farewell message."
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "     */"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public String showEndMessage() {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        return startLine + \"Bye. Hope to see you again soon!\\n\""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            + endLine;"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 152
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 19
    }
  },
  {
    "path": "src/test/java/duke/main/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "package duke.main;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.storage.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * Encapsulates the main test system that the developer uses to test the"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " * functionality of the Duke program."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void datePrintTest() throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"Test the printDate() method\", \"2020-08-23\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(\"SUNDAY, AUGUST 23 2020\", deadline.printDate());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void toStringTest() throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Event event \u003d new Event(\"Test the toString() method\", \"2020-08-23\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(\"E \u003e ✘ \u003e Test the toString() method \u003e at: SUNDAY, AUGUST 23 2020\","
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                event.toString());"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void commandBooleanTest() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ListCommand testCommand \u003d new ListCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(false, testCommand.isDone());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void commandBooleanTest2() throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        Parser parser \u003d new Parser(ui);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(true, parser.parse(\"bye\").isDone());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    public void taskListTest() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Test the TaskList class for the Duke project\");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        taskList.addTodo(todo);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "        assertEquals(\"T \u003e ✘ \u003e Test the TaskList class for the Duke project\","
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "                taskList.getTaskList().get(0).toString());"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 59
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "deadline orbital splashdown /by 18th August"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "event sports day /at Sunday 1030"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 10
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "JunCheng98"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "JunCheng98": 1,
      "-": 37
    }
  }
]
