[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    mainClassName \u003d \"seedu.duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    toolVersion \u003d \u00278.32\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 1,
      "-": 45
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public Deadline(String name, String by, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        super(name, TaskType.DEADLINE, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            this.by \u003d LocalDateTime.parse(by.substring(1), Duke.dateTimeFormat);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeWrongFormattingException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Adds a new deadline to the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void newDeadline(String inputSuffix, TaskList taskList, boolean isDone, boolean shouldAnnounce)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String[] deadlineParts \u003d inputSuffix.split(\"/by\", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String deadlineName \u003d deadlineParts[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (deadlineParts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeEmptyDescException(TaskType.EVENT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            String by \u003d deadlineParts[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            if (Ui.isBlankString(by)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                throw new DukeEmptyDescException(TaskType.EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                taskList.addTask(new Deadline(deadlineName, by, isDone), shouldAnnounce);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return String.format(\"[D]%s(by: %s)\", super.toString(), by.format(Duke.dateTimeFormat));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return String.format(\"[D]%s/by %s\", super.toString(), by.format(Duke.dateTimeFormat));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 45
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private Label text;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public DialogBox(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        text \u003d l;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        displayPicture \u003d iv;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        text.setWrapText(true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        displayPicture.setFitWidth(100.0);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        displayPicture.setFitHeight(100.0);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        this.setAlignment(Pos.TOP_RIGHT);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        this.getChildren().addAll(text, displayPicture);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        this.setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        FXCollections.reverse(tmp);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        this.getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static DialogBox getUserDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return new DialogBox(l, iv);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static DialogBox getDukeDialog(Label l, ImageView iv) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        var db \u003d new DialogBox(l, iv);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 47
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.layout.Region;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Duke extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    protected static DateTimeFormatter dateTimeFormat \u003d DateTimeFormatter.ofPattern(\"dd-MM-yyyy HHmm\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private Scene scene;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private Image user \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private Image duke \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            taskList \u003d Storage.loadFromMem();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            Ui.printWithLines(e.toString() + \"\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        Ui.processInput(taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        //Step 1. Setting up required components"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        //The container for the content of the chat to scroll."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane \u003d new ScrollPane();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dialogContainer \u003d new VBox();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane.setContent(dialogContainer);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        userInput \u003d new TextField();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        sendButton \u003d new Button(\"Send\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        AnchorPane mainLayout \u003d new AnchorPane();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        mainLayout.getChildren().addAll(scrollPane, userInput, sendButton);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scene \u003d new Scene(mainLayout);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        stage.setScene(scene);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        stage.show();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        //Step 2. Formatting the window to look as expected"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        stage.setResizable(false);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        stage.setMinHeight(600.0);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        stage.setMinWidth(400.0);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        mainLayout.setPrefSize(400.0, 600.0);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane.setPrefSize(385, 535);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane.setHbarPolicy(ScrollPane.ScrollBarPolicy.NEVER);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane.setVbarPolicy(ScrollPane.ScrollBarPolicy.ALWAYS);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane.setVvalue(1.0);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        scrollPane.setFitToWidth(true);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        // You will need to import `javafx.scene.layout.Region` for this."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dialogContainer.setPrefHeight(Region.USE_COMPUTED_SIZE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        userInput.setPrefWidth(325.0);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        sendButton.setPrefWidth(55.0);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        AnchorPane.setTopAnchor(scrollPane, 1.0);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        AnchorPane.setBottomAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        AnchorPane.setRightAnchor(sendButton, 1.0);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        AnchorPane.setLeftAnchor(userInput , 1.0);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        AnchorPane.setBottomAnchor(userInput, 1.0);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dialogContainer.heightProperty().addListener((observable) -\u003e scrollPane.setVvalue(1.0));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        //Step 3. Add functionality to handle user input."
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(\"Help pls\"));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            userInput.clear();"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            dialogContainer.getChildren().add(getDialogLabel(userInput.getText()));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//            userInput.clear();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        });"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Ui.initialise(userInput, dialogContainer, this, user, duke);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList \u003d Storage.loadFromMem();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Ui.printWithLines(e.toString() + \"\\n\");"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        sendButton.setOnMouseClicked((event) -\u003e {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        });"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        userInput.setOnAction((event) -\u003e {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            handleUserInput();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        });"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private Label getDialogLabel(String text) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        // You will need to import `javafx.scene.control.Label`."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Label textToAdd \u003d new Label(text);"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        textToAdd.setWrapText(true);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return textToAdd;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Iteration 2:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        Label userText \u003d new Label(userInput.getText());"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        Label dukeText \u003d new Label(getResponse(userInput.getText()));"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//                DialogBox.getUserDialog(userText, new ImageView(user)),"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//                DialogBox.getDukeDialog(dukeText, new ImageView(duke))"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        );"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "//        userInput.clear();"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Ui.startInput(taskList);"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * You should have your own function to generate a response to user input."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Replace this stub with your completed method."
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private String getResponse(String input) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return \"Duke heard: \" + input;"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 149,
      "-": 3
    }
  },
  {
    "path": "src/main/java/DukeEmptyDescException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class DukeEmptyDescException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private final String type;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    DukeEmptyDescException(TaskType taskType) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case TODO:"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            type \u003d \"todo\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case EVENT:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            type \u003d \"event\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case DEADLINE:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            type \u003d \"deadline\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            type \u003d \"\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return super.toString() + String.format(\"You can\u0027t have an empty description for this %s task silly!\","
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                type);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 28
    }
  },
  {
    "path": "src/main/java/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return \"☹ OOPS!!! \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 6
    }
  },
  {
    "path": "src/main/java/DukeNoSaveFileFoundException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class DukeNoSaveFileFoundException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return super.toString() + \"I cannot find an existing save file, so I shall create a new one!\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 7
    }
  },
  {
    "path": "src/main/java/DukeNoSuchInputException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class DukeNoSuchInputException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return super.toString() + \"I\u0027m not quite sure what that means, apologies, try again!\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 6
    }
  },
  {
    "path": "src/main/java/DukeWrongFormattingException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class DukeWrongFormattingException extends DukeException {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return super.toString() + \"Sorry! The format for a date and time is: dd-mm-yy tttt\";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 6
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    protected LocalDateTime at;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public Event(String name, String at, boolean isDone) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        super(name, TaskType.EVENT, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            this.at \u003d LocalDateTime.parse(at.substring(1), Duke.dateTimeFormat);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeWrongFormattingException();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Adds a new event to the task list."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void newEvent(String inputSuffix, TaskList taskList, boolean isDone, boolean shouldAnnounce)"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throws DukeException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String[] eventParts \u003d inputSuffix.split(\"/at\", 2);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String eventName \u003d eventParts[0];"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (eventParts.length \u003d\u003d 1) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeEmptyDescException(TaskType.EVENT);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            String at \u003d eventParts[1];"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            if (Ui.isBlankString(at)) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                throw new DukeEmptyDescException(TaskType.EVENT);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                taskList.addTask(new Event(eventName, at, isDone), shouldAnnounce);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return String.format(\"[E]%s(at: %s)\", super.toString(), at.format(Duke.dateTimeFormat));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return String.format(\"[E]%s/at %s\", super.toString(), at.format(Duke.dateTimeFormat));"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 45
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Application.launch(Duke.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 10
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Considers the command input and performs actions accordingly."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void handleInput(String inputPrefix, String inputSuffix, TaskList taskList, Duke dukeApp)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throws Exception {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        switch (inputPrefix) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"list\":"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList.printList();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"done\":"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList.completeTask(Integer.parseInt(inputSuffix) - 1);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"todo\":"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList.addTask(new Todo(inputSuffix), true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"deadline\":"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Deadline.newDeadline(inputSuffix, taskList, false, true);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"event\":"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Event.newEvent(inputSuffix, taskList, false, true);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"delete\":"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList.deleteTask(Integer.parseInt(inputSuffix) - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"find\":"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList.lookFor(inputSuffix);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \"bye\":"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            dukeApp.stop();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeNoSuchInputException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Storage.createNewSave(taskList.toData());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 39
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static String filePath \u003d \"./src/main/data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Attempts to load an existing save file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static TaskList loadFromMem() throws DukeException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        File saveFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (saveFile.exists()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            return convertToTaskList();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeNoSaveFileFoundException();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Creates a new file that contains the saved tasks."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void createNewSave(String data) throws DukeException {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        new File(\"./src/main/data\").mkdirs();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            new File(filePath).createNewFile();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            File newFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            writeToFile(data, newFile);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static void writeToFile(String data, File file) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        FileWriter fileWriter \u003d new FileWriter(file, false);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        fileWriter.write(data);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        fileWriter.close();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static TaskList convertToTaskList() throws DukeException {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            BufferedReader br \u003d new BufferedReader(new FileReader(filePath));"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            br.lines().forEach(s -\u003e {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                    convertToTask(s, taskList);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                } catch (DukeException e) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                    Ui.printWithLines(e.toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            });"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static void convertToTask(String line, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        boolean isDone;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (line.startsWith(\"O\", 4)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            isDone \u003d true;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else if (line.startsWith(\"Ø\", 4)) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        switch (line.charAt(1)) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \u0027T\u0027:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            taskList.addTask(new Todo(line.substring(7)), false);"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \u0027D\u0027:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Deadline.newDeadline(line.substring(7), taskList, isDone, false);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        case \u0027E\u0027:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Event.newEvent(line.substring(7), taskList, isDone, false);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeException();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 87
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private final String name;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public Task(String name, TaskType taskType) throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (Ui.isBlankString(name)) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeEmptyDescException(taskType);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            isDone \u003d false;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public Task(String name, TaskType taskType, boolean isDone) throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (Ui.isBlankString(name)) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            throw new DukeEmptyDescException(taskType);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            this.name \u003d name;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return (isDone ? \"Ø\" : \"O\"); //return tick or X symbols"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Completes the task."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public boolean hasKeyword(String key) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String[] words \u003d name.split(\" \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        for (String word : words) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            if (key.equals(word)) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return String.format(\"[%s] %s\", getStatusIcon(), name);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return toString();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 55
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class TaskList extends ArrayList\u003cTask\u003e {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Prints itself in a readable form."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void printList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Ui.printWithLines(toString());"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Completes a specific task in itself."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void completeTask(int i) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String prefix \u003d \"Roger roger! I\u0027m gonna mark this task as done:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Task task \u003d super.get(i);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        task.complete();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Ui.printWithLines(String.format(\"  %s%s\\n\", prefix, task));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Adds a task to itself."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void addTask(Task newTask, boolean announce) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        super.add(newTask);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (announce) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            String prefix \u003d \"Okay! I shall add this task:\\n\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            String suffix \u003d String.format(\"Now you got a total of %s task%s in your list!\\n\", super.size(),"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                    super.size() \u003d\u003d 1 ? \"\" : \"s\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Ui.printWithLines(prefix + newTask + \"\\n\" + suffix);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Deletes a specific task from itself."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Task task \u003d super.get(index);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        super.remove(index);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String prefix \u003d \"Very well! I shall delete this task:\\n\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Ui.printWithLines(prefix + task + \"\\n\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Deletes a specific task from itself."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void lookFor(String query) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        TaskList results \u003d new TaskList();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        this.stream().filter(task -\u003e task.hasKeyword(query)).forEach(task -\u003e results.addTask(task, false));"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        StringBuilder prefix \u003d new StringBuilder(\"Here are the matches in your list:\\n\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Ui.printWithLines(prefix.append(results.listOut()).toString());"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private StringBuilder listOut() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        StringBuilder list \u003d new StringBuilder();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        int l \u003d size();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        for (int i \u003d 0; i \u003c l; i++) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            list.append(i + 1).append(\".\").append(super.get(i).toString()).append(\"\\n\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return \"Here are the tasks in your list:\\n\" + listOut();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        StringBuilder list \u003d new StringBuilder();"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        for (Task task: this) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            list.append(task.toData()).append(\"\\n\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return list.toString();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 77
    }
  },
  {
    "path": "src/main/java/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    EVENT"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 5
    }
  },
  {
    "path": "src/main/java/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public Todo(String name) throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        super(name, TaskType.TODO);"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 11
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static final String LINE \u003d \"-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\u003d-\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static final Scanner INPUT \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static final String LOGO \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static Image userPic;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static Image dukePic;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static VBox dialogContainer;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    private static Duke dukeApp;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Takes in inputs, and passes them to the Parser to perform actions."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void processInput(String nextInput, TaskList taskList) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String[] inputParts \u003d nextInput.split(\" \", 2);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String inputPrefix \u003d inputParts[0];"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String inputSuffix \u003d inputParts.length \u003d\u003d 1 ? \"\" : inputParts[1];"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            Parser.handleInput(inputPrefix, inputSuffix, taskList, dukeApp);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (DukeException dukeException) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            printWithLines(dukeException + \"\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void startInput(TaskList taskList) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        Label userText \u003d new Label(input);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getUserDialog(userText, new ImageView(userPic)));"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        processInput(input, taskList);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Prints the desired output with decorative lines."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void printWithLines(String output) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        System.out.println(LINE + \"\\n\" + output + LINE);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(new Label(LINE + \"\\n\" + output + LINE),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                new ImageView(dukePic)));"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     * Checks if a given string only has spaces, or if it\u0027s an empty string."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static boolean isBlankString(String string) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        if (string.length() !\u003d 0) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            for (char c : string.toCharArray()) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                if (c !\u003d \u0027 \u0027) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                    return false;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "            }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public static void initialise(TextField newUserInput,"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                                  VBox newDialogContainer,"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                                  Duke newDuke,"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                                  Image user,"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                                  Image duke) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        userInput \u003d newUserInput;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dialogContainer \u003d newDialogContainer;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dukeApp \u003d newDuke;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        userPic \u003d user;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        dukePic \u003d duke;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        printWithLines(\"Hello! My name is Duketh Puketh III, but you can call me\\n\" + LOGO"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                + \"\\n How may I help you today? :)\\n The date and time is now \""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                + LocalDateTime.now().format(Duke.dateTimeFormat) + \"\\n\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 87
    }
  },
  {
    "path": "src/test/java/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void listTest() throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        taskList.addTask(new Task(\"Hi\", TaskType.TODO, false), false);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        assertEquals(taskList.toString(), \"Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                \"1.[✘] Hi\\n\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void listTest2() throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        taskList.addTask(new Task(\"Hello\", TaskType.TODO, true), false);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        assertEquals(taskList.toData(),\"[✓] Hello\\n\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void listTest3() throws DukeException {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        taskList.addTask(new Task(\"Hi\", TaskType.TODO, false), false);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        taskList.addTask(new Deadline(\"Deadline\", \" 12-12-1212 1212\", false), false);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        assertEquals(taskList.toString(), \"Here are the tasks in your list:\\n\" +"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                \"1.[✘] Hi\\n\" +"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "                \"2.[D][✘] Deadline(by: 12-12-1212 1212)\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 34
    }
  },
  {
    "path": "src/test/java/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void descTest() throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        assertEquals(new Task(\"Hi\", TaskType.TODO, false).toString(), \"[✘] Hi\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    public void descTest2() throws DukeEmptyDescException {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "        assertEquals(new Task(\"Hello There!\", TaskType.TODO, true).toString(), \"[✓] Hello There!\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 16
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "EthanTheGoondu"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "EthanTheGoondu": 6
    }
  }
]
