[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 16,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "## General"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `clear` - clear all data"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`clear`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "nothing"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "## Task List"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `tasks` - View list of all tasks"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`tasks`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ 1. [T] [✓] read the bible ✰`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ 2. [D] [✗] 2103T homework (by: 25 Aug 2020 11.59pm) ✰`"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `done` - Complete a task"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Complete a certain task in the task list."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`done \u003cindex\u003e`"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ congrats on finishing your task :) it\u0027s marked as done:`"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    `[D] [✓] 2103T homework (by: 25 Aug 2020 11.59pm) ✰`"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `delete` - Delete a task"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Delete a certain task in the task list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`delete \u003cindex\u003e`"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ i\u0027ve removed the following task from the list:`"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    `[D] [✓] 2103T homework (by: 25 Aug 2020 11.59pm)`"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`now you have 2 items in your tasklist. ✰`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `todo`,`deadline`,`event` - Add a new task"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`todo \u003ctask name\u003e`"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`deadline \u003ctask name\u003e \u003ctask due date\u003e`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`event \u003ctask name\u003e \u003ctask date\u003e`"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ i\u0027ve added this task for you: `"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    `[D] [✗] 2103T homework (by: 25 Aug 2020 11.59pm)`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`now you have 2 items in your tasklist. ✰`"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `find` - Find tasks"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Search for tasks in the list"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`find \u003ckeyword\u003e`"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ 1. [T] [✓] read the bible ✰`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "## Notes"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `notes` - View list of all notes"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`notes`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ 1. book ideas ✰`"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ 2. hmm ✰`"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `view` - View a note"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "View a certain task in the notes list."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`view \u003cindex\u003e`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`✰ a book about a little man ✰`"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `new` - Add a new note"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Add a new note and starting writing to it."
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`new \u003cnote name\u003e`"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`add another line or type \u0027complete\u0027 to save your note`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "### `complete` - Finish writing note"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`complete`"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "`your note has been saved!`"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 114,
      "-": 15
    }
  },
  {
    "path": "duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "T | true | newtodo"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "E | true | hey | 04 Feb 2010 1900"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "T | true | hi"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "T | false | dfkjgdfg"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 4
    }
  },
  {
    "path": "notes.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: hey Content: no hey"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: dfjhgdfsg Content: efghsifdbv"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: dfjghdfg Content: jfgjdfskfjsdlkg"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: try Content: jfgjdfskfjsdlkgtryguy"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: guy Content: 555444333222"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: boy Content: hilolmowdkasdf"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "Name: note Content: ndjshgkfgh"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 7
    }
  },
  {
    "path": "src/main/java/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public enum Command {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    BLANK,"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    CLEAR,"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    NOTES,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    NEW,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    ADD,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    WRITE,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    VIEW,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    COMPLETE,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    ERROR,"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    LOL,"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    JUSTIN"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 17
    }
  },
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new Deadline Task with the input name and deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in Task name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param deadline Task deadline"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Deadline(String in, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        super(in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates the string version of this Deadline for display."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string formatting of this Deadline."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String doneStatus;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            doneStatus \u003d \"✓\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            doneStatus \u003d \"✗\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"[D] [\" + doneStatus + \"] \" + task + \" (by: \" + dateToString(deadline) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates the string version of this Deadline for the save file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string formatting of this Deadline."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"D | \" + super.saveText() + \" | \" + dateToSave(deadline);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 40
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Custom control using FXML."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 59
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static Storage taskStorage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static Storage notesStorage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static TaskList tasks;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static NoteList notes;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private boolean isWriting;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private StringBuilder tempWriting \u003d new StringBuilder();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Note tempNote;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new instance of Duke which stores information at the given path."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param filePathTasks the path where task information is stored."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param filePathNotes the path where notes information is stored."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Duke(String filePathTasks, String filePathNotes) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        taskStorage \u003d new Storage(filePathTasks);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        notesStorage \u003d new Storage(filePathNotes);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        tasks \u003d new TaskList(taskStorage.readTasks());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        notes \u003d new NoteList(notesStorage.readNotes());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Generates response to user input."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in the user input string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return response to user input."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    String getResponse(String in) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String result \u003d \"\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (in.equals(\"bye\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Ui.print(\"bye bye!\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Command cmd \u003d Parser.parse(in, isWriting);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (cmd \u003d\u003d Command.BLANK) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.BLANK;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.WRITE) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempWriting.append(in).append(\"\\n\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.WRITE;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.LOL) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.LOL;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.JUSTIN) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.JUSTIN;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.CLEAR) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            taskStorage.clear();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tasks \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.CLEAR;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.LIST) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            assert tasks !\u003d null : \"Tasks is null\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Ui.print(tasks.toString());"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.NOTES) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Ui.print(notes.toString());"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.NEW) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (in.length() \u003c\u003d Parser.NEW_LENGTH) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.NEW_ERROR;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                isWriting \u003d true;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                String noteName \u003d in.substring(Parser.NEW_LENGTH);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                tempNote \u003d new Note(noteName);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                notes.add(tempNote);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.NEW_SUCCESS;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.COMPLETE) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            isWriting \u003d false;"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempNote.updateContent(tempWriting.toString());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempWriting \u003d new StringBuilder();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.COMPLETE;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.VIEW) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int current;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current \u003d Integer.parseInt(in.substring(Parser.VIEW_LENGTH));"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current--;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d notes.viewNote(current);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.VIEW_NO_INDEX;"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.FIND) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (in.length() \u003c\u003d Parser.FIND_LENGTH) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.FIND_NO_KEYWORD;"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                String keyword \u003d in.substring(Parser.FIND_LENGTH);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                assert keyword.length() \u003e 0 : \"keyword does not exist\";"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.FIND_SUCCESS + Ui.print(tasks.findTasks(keyword).toString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.DONE) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int current;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current \u003d Integer.parseInt(in.substring(Parser.DONE_LENGTH));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current--;"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d tasks.completeTask(current);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.DONE_NO_INDEX;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.DELETE) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int current;"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current \u003d Integer.parseInt(in.substring(Parser.DELETE_LENGTH));"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                current--;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d tasks.deleteTask(current);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Responses.DELETE_NO_INDEX;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (cmd \u003d\u003d Command.ADD) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            Task temp \u003d Parser.getTask(in);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (temp !\u003d null) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                tasks.add(temp);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Ui.print(\"i\u0027ve added this task for you: \\n\\t\" + temp + \"\\nnow you have \" + tasks.size()"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                        + \" items in your tasklist.\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                assert Parser.getMsg() !\u003d null : \"parser error message is null\";"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Parser.getMsg();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.ERROR;"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        taskStorage.saveTasks(tasks.getTaskList());"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        notesStorage.saveNotes(notes.getNotesList());"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 120,
      "-": 3
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private LocalDateTime startDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new Event Task with the input name and start time."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in Task name"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param start Task timing"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Event(String in, LocalDateTime start) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        super(in);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.startDate \u003d start;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates the string version of this Event for display."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string formatting of this Event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String doneStatus;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            doneStatus \u003d \"✓\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            doneStatus \u003d \"✗\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"[E] [\" + doneStatus + \"] \" + task + \" (at: \" + dateToString(startDate) + \")\";"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates the string version of this Event for the save file."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string formatting of this Event."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"E | \" + super.saveText() + \" | \" + dateToSave(startDate);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 40
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * A launcher class to workaround classpath issues."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 10
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Duke duke \u003d new Duke(\"duke.txt\", \"notes.txt\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 29
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.jpg\"));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.jpg\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        );"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 49
    }
  },
  {
    "path": "src/main/java/Note.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Note {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static String nameSaveSeparator \u003d \"Name: \";"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static String contentSaveSeparator \u003d \" Content: \";"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private String content;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private String name;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new note with the given name and content."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param name The name of the note to be added."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param content The content of the note to be added."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Note(String name, String content) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new note with the given name and no content."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param name The name of the note to be added."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Note(String name) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.name \u003d name;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the name of the note."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return Name of the note."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String getName() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return name;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the content of the note."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return Content of the note."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String getContent() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return content;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Change the content of the note."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param content The new content."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void updateContent(String content) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.content \u003d content;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Generates the save text for the note."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string representation of the note."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return nameSaveSeparator + name + contentSaveSeparator + content;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Reads the save text and converts it back to a list of Notes."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param result The list that will contain the generated Notes."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param text The save text to be read."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static void readAllText(List\u003cNote\u003e result, String text) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String[] notes \u003d text.split(nameSaveSeparator);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        for (int i \u003d 1; i \u003c notes.length; i++) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            String s \u003d notes[i];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            String[] temp \u003d s.split(contentSaveSeparator);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result.add(new Note(temp[0], temp[1]));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 80
    }
  },
  {
    "path": "src/main/java/NoteList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Stores the list of notes."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class NoteList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private List\u003cNote\u003e notesList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new NoteList with the given pre-existing notes."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param read The list of notes read from the save file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public NoteList(List\u003cNote\u003e read) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.notesList \u003d read;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Checks if the note list is empty."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return Whether the list is empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return notesList.isEmpty();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Adds a note to the note list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param toAdd The Note to be added."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void add(Note toAdd) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        notesList.add(toAdd);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Deletes a note from the note list."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param toDelete The Note to be deleted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void delete(int toDelete) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        notesList.remove(toDelete);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the list of notes."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The list of notes."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public List\u003cNote\u003e getNotesList() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return notesList;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the size of the note list."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The size of the note list."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return notesList.size();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * View a specific note in the list."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param index"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The content of the note or an error message."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String viewNote(int index) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d notesList.size()) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.BAD_INDEX;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Ui.print(notesList.get(index).getContent());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Returns the list of notes, showing the name and index."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String representation of the names of the notes in list, or a message if it is empty."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d new StringBuilder(\"this list doesn\u0027t contain any notes!\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result.append(\"1. \").append(notesList.get(0).getName());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            for (int i \u003d 2; i \u003c\u003d notesList.size(); i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result.append(\" ✰\\n✰ \").append(i).append(\". \").append(notesList.get(i - 1).getName());"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 97
    }
  },
  {
    "path": "src/main/java/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    //constants used to parse user input"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String TODO \u003d \"todo\";"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String DEADLINE \u003d \"deadline\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String EVENT \u003d \"event\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String DONE \u003d \"done\";"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String DELETE \u003d \"delete\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String FIND \u003d \"find\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String LIST \u003d \"tasks\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String CLEAR \u003d \"clear\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String NEW \u003d \"new\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String NOTES \u003d \"notes\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String VIEW \u003d \"view\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String COMPLETE \u003d \"complete\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int TODO_LENGTH \u003d \"todo \".length();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int DEADLINE_LENGTH \u003d \"deadline \".length();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int EVENT_LENGTH \u003d \"event \".length();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int DONE_LENGTH \u003d \"done \".length();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int DELETE_LENGTH \u003d \"delete \".length();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int FIND_LENGTH \u003d \"find \".length();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int VIEW_LENGTH \u003d \"view \".length();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int NEW_LENGTH \u003d \"new \".length();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int AT_LENGTH \u003d \"/at \".length();"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final int BY_LENGTH \u003d \"/by \".length();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final DateTimeFormatter DATE_FORMAT \u003d DateTimeFormatter.ofPattern(\"d/M/yy HHmm\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static String msg;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Get the message returned when encountering a parsing error."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The message returned."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String getMsg() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return msg;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the string to a type of command."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The string to be parsed."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The command called by the input string."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static Command parse(String in, boolean isWriting) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (in.startsWith(COMPLETE)) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.COMPLETE;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (isWriting) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.WRITE;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.toLowerCase().equals(\"lol\")) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.LOL;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.toLowerCase().startsWith(\"justin gets attacked\")) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.JUSTIN;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (\"\".equals(in)) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.BLANK;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.equals(CLEAR)) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.CLEAR;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.equals(LIST)) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.LIST;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(DONE)) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.DONE;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(DELETE)) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.DELETE;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(FIND)) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.FIND;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(NEW)) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.NEW;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(NOTES)) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.NOTES;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(VIEW)) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.VIEW;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(TODO) || in.startsWith(DEADLINE) || in.startsWith(EVENT)) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.ADD;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            return Command.ERROR;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Handles reading add task commands and creating the task."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The string to be parsed."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The task required by the input string."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static Task getTask(String in) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String taskName;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Task temp \u003d null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (in.equals(TODO) | in.equals(EVENT) | in.equals(DEADLINE)) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            msg \u003d Responses.TASK_NO_DESCRIPTION;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"todo \")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            taskName \u003d in.substring(TODO_LENGTH);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (taskName.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                msg \u003d Responses.TASK_NO_DESCRIPTION;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"deadline \")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int ind \u003d in.indexOf(\"/by \");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (ind \u003c 0 || in.endsWith(\"/by \")) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                msg \u003d Responses.DEADLINE_INPUT_EG;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (ind - 1 \u003c\u003d DEADLINE_LENGTH) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                msg \u003d Responses.TASK_NO_DESCRIPTION;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                taskName \u003d in.substring(DEADLINE_LENGTH, ind - 1);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                LocalDateTime deadline \u003d LocalDateTime.parse(in.substring(ind + BY_LENGTH), DATE_FORMAT);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp \u003d new Deadline(taskName, deadline);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else if (in.startsWith(\"event \")) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            int ind \u003d in.indexOf(\"/at \");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (ind \u003c 0 || in.endsWith(\"/at \")) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                msg \u003d Responses.EVENT_INPUT_EG;"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (ind - 1 \u003c\u003d EVENT_LENGTH) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                msg \u003d Responses.TASK_NO_DESCRIPTION;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                taskName \u003d in.substring(EVENT_LENGTH, ind - 1);"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                LocalDateTime time \u003d LocalDateTime.parse(in.substring(ind + AT_LENGTH), DATE_FORMAT);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp \u003d new Event(taskName, time);"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return temp;"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "ramenmen": 124
    }
  },
  {
    "path": "src/main/java/Responses.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Responses {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String BLANK \u003d Ui.errorMsg(\"you haven\u0027t entered any command!\");"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String CLEAR \u003d Ui.print(\"cleared all tasks from the list!\");"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String NEW_ERROR \u003d Ui.errorMsg(\"enter a note name! e.g. note mynote\");"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String NEW_SUCCESS \u003d Ui.print(\"new note added! now type in the content of your note.\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String DONE_NO_INDEX \u003d Ui.errorMsg(\"you haven\u0027t entered a task number to complete!\");"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String DELETE_NO_INDEX \u003d Ui.errorMsg(\"you haven\u0027t entered a task number to delete!\");"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String TASK_NO_DESCRIPTION \u003d Ui.errorMsg(\"the task description cannot be nothing D:\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String EVENT_INPUT_EG \u003d Ui.errorMsg(\"you haven\u0027t entered a time that this task happens at. \""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            + \"you can do that by typing \\\"event xxx /at dd/mm/yy hhmm\\\". \\n\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            + \"e.g.: event read textbook /at 12/3/20 1500\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String DEADLINE_INPUT_EG \u003d Ui.errorMsg(\"you haven\u0027t entered a time that this task is due by. \""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            + \"you can do that by typing \\\"deadline xxx /by dd/mm/yy hhmm\\\". \\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            + \"e.g.: deadline read textbook /by 12/3/20 1500\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String WRITE \u003d Ui.print(\"add another line or type \u0027complete\u0027 to save your note\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String VIEW_NO_INDEX \u003d Ui.errorMsg(\"you haven\u0027t entered an index to view!\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String BAD_INDEX \u003d Ui.errorMsg(\"that is not the number of an item in the list!\");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String COMPLETE \u003d Ui.print(\"your note has been saved!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String FIND_NO_KEYWORD \u003d Ui.errorMsg(\"you haven\u0027t entered a search keyword!\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String FIND_SUCCESS \u003d Ui.print(\"here\u0027s the list of tasks that contain the keyword!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String ERROR \u003d Ui.errorMsg(\"i don\u0027t know what that means :(\");"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String LOL \u003d \"justin gets attacked.\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static final String JUSTIN \u003d \"LOL\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 24
    }
  },
  {
    "path": "src/main/java/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Handles storing and retrieving of task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new Storage with the given filepath."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param filePath The filepath of the storage to be created."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts all tasks in the list to a string and writes that to the save file."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param taskList The list of tasks."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            toWrite +\u003d t.saveText();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            toWrite +\u003d \"\\n\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            File tasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tasks.createNewFile();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(tasks);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myWriter.write(toWrite);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while saving the task list! D:\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts all notes in the list to a string and writes that to the save file."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param noteList The list of notes."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void saveNotes(List\u003cNote\u003e noteList) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        for (Note t : noteList) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            toWrite +\u003d t.saveText();"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            toWrite +\u003d \"\\n\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            File tasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tasks.createNewFile();"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            FileWriter myWriter \u003d new FileWriter(tasks);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myWriter.write(toWrite);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myWriter.close();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while saving the task list! D:\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the text in the save file back to Tasks."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return List of Tasks that is converted from text."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public List\u003cTask\u003e readTasks() {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        List\u003cTask\u003e result \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        File myObj \u003d new File(filePath);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (!myObj.exists()) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                createFile(myObj);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            readFileTasks(result, myObj);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while trying to read the task list save file!\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the text in the save file back to Notes."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return List of Notes that is converted from text."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public List\u003cNote\u003e readNotes() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        List\u003cNote\u003e result \u003d new ArrayList\u003cNote\u003e();"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        File myObj \u003d new File(filePath);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (!myObj.exists()) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                createFile(myObj);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            readFileNotes(result, myObj);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while trying to read the task list save file!\");"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Reads the text in the save file and converts it back to a list of Tasks."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private void readFileTasks(List\u003cTask\u003e result, File myObj) throws FileNotFoundException {"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Scanner myReader;"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result.add(Task.readText(data));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        myReader.close();"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Reads the text in the save file and converts it back to a list of Notes."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private void readFileNotes(List\u003cNote\u003e result, File myObj) throws FileNotFoundException {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Scanner myReader;"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        myReader \u003d new Scanner(myObj);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        StringBuilder text \u003d new StringBuilder();"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        while (myReader.hasNextLine()) {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            String data \u003d myReader.nextLine();"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            text.append(data);"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Note.readAllText(result, text.toString());"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        myReader.close();"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new save file."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param myObj The file to be created."
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private void createFile(File myObj) {"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            myObj.createNewFile();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } catch (IOException f) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            System.out.println(\"An error occurred while creating the task list file! D:\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            f.printStackTrace();"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Clears the save file of all text."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void clear() {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        saveTasks(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 160
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private static DateTimeFormatter dateFormat \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\");"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    protected String task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new instance of a Task with the given name."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The name of the Task to be created"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Task (String in) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        task \u003d in;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Completes the task."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void complete() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Generates the string version of the task for the save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string version of the task."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return isDone + \" | \" + task;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts a line of text in save file to a Task object."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in The string to be converted."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return Task represented by the input string."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static Task readText(String in) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        //constants used to parse save text"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String separator \u003d \" \\\\| \";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String[] result \u003d in.split(separator);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String taskType \u003d result[0];"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        boolean isComplete \u003d Boolean.parseBoolean(result[1]);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String taskName \u003d result[2];"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String taskTime;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Task tempTask;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (taskType.equals(\"T\")) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempTask \u003d new ToDo(taskName);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            taskTime \u003d result[3];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (taskType.equals(\"D\")) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                tempTask \u003d new Deadline(taskName, LocalDateTime.parse(taskTime, dateFormat));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else if (taskType.equals(\"E\")) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                tempTask \u003d new Event(taskName, LocalDateTime.parse(taskTime, dateFormat));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                System.out.println(\"error reading save file\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isComplete) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            tempTask.complete();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return tempTask;"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the date and time to the list display format."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param date Date to be converted"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String to be printed."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String dateToString (LocalDateTime date) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy h.mma\"));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts the date and time to the save file format."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param date Date to be converted"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String to be written to the save file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String dateToSave (LocalDateTime date) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return date.format(DateTimeFormatter.ofPattern(\"dd MMM yyyy HHmm\"));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 88
    }
  },
  {
    "path": "src/main/java/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Stores the list of tasks."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new TaskList with the given pre-existing tasks."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param read The list of tasks read from the save file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public TaskList(List\u003cTask\u003e read) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        this.taskList \u003d read;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Checks if the tasks list is empty."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return Whether the list is empty."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public boolean isEmpty() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList.isEmpty();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Adds a task to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param toAdd The Task to be added."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void add(Task toAdd) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        taskList.add(toAdd);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param toDelete The Task to be deleted."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void delete(int toDelete) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        taskList.remove(toDelete);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the task from the specified index in the task list."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param index The index of the task."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The task at index."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public Task get(int index) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList.get(index);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the list of tasks."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public List\u003cTask\u003e getTaskList() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Gets the size of the task list."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The size of the task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Completes a task in the task list."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The error or complete message."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String completeTask(int index) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.BAD_INDEX;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            assert task !\u003d null : \"task is null\";"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (task.isDone) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Ui.errorMsg(\"you have already completed \" + task.task + \"!\");"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                task.complete();"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result \u003d Ui.print(\"congrats on finishing your task :) it\u0027s marked as done:\\n\\t\" + task);"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Deletes a task from the task list."
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The error or deleted message."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String deleteTask(int index) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String result;"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (index \u003c 0 || index \u003e\u003d taskList.size()) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Responses.BAD_INDEX;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            task \u003d get(index);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            assert task !\u003d null : \"task is null\";"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            delete(index);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d Ui.print(\"i\u0027ve removed the following task from the list:\\n\\t\" + task"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                    + \"\\nnow you have \" + size() + \" items in your tasklist.\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Converts tasks in taskList to String format."
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return String representation of the tasks in list, or a message if it is empty."
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        StringBuilder result \u003d new StringBuilder();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isEmpty()) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result \u003d new StringBuilder(\"this list doesn\u0027t contain any tasks!\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            result.append(\"1. \").append(taskList.get(0));"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            for (int i \u003d 2; i \u003c\u003d taskList.size(); i++) {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                result.append(\" ✰\\n✰ \").append(i).append(\". \").append(taskList.get(i - 1));"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return result.toString();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Finds a task containing the given keyword."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param keyword The search keyword."
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The list of tasks matching this keyword."
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public TaskList findTasks(String keyword) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        List\u003cTask\u003e temp \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        for (Task t : taskList) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            if (t.task.contains(keyword)) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                temp.add(t);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return new TaskList(temp);"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 150
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates a new ToDo Task with the input name."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param in Task name"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public ToDo(String in) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        super(in);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates the string version of this ToDo for display."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string formatting of this ToDo."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        String doneStatus;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            doneStatus \u003d \"✓\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            doneStatus \u003d \"✗\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"[T] [\" + doneStatus + \"] \" + task;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Creates the string version of this ToDo for the save file."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @return The string formatting of this ToDo."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public String saveText() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"T | \" + super.saveText();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 35
    }
  },
  {
    "path": "src/main/java/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "/**"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " * Handles printing of messages."
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": " */"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Prints an error message with the associated formatting."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param msg The message to be printed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String errorMsg(String msg) {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"⚠ \" + msg + \" ⚠\\n\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * Prints a message with the associated formatting."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     *"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     * @param msg The message to be printed."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public static String print(String msg) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        return \"✰ \" + msg + \" ✰\\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 22
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 16
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 19
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void parserTestReturnError(){"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Parser.parse(\"dfgjdhg\"), Command.ERROR);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Parser.parse(\"blabla\"), Command.ERROR);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void taskTestDateToString() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        LocalDateTime temp \u003d LocalDateTime.parse(\"3/3/03 0300\", DateTimeFormatter.ofPattern(\"d/M/yy HHmm\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(Task.dateToString(temp), \"03 Mar 2003 3.00AM\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    public void taskListTestToStringEmpty() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        TaskList temp \u003d new TaskList(new ArrayList\u003cTask\u003e());"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "        assertEquals(temp.toString(),\"you haven\u0027t added any tasks to the list yet!\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 29
    }
  },
  {
    "path": "text-ui-test/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "T | true | read the bible"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "E | false | 2101 tutorial | 27 Aug 2020 1600"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 2
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "todo read the bible"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "todo "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline 2103T homework /by 25/8/20 2359"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event 2101 tutorial /at 27/8/20 1600"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "fgjdfgkjd"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "todo"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "done "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event /at "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline /by "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "event /at sljfhfg"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "deadline /by sdigdfg"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "delete "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "list"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "add"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find "
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find ke"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "find bible"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 32
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "ramenmen"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "ramenmen": 1,
      "-": 37
    }
  }
]
