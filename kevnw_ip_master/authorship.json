[
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class Main {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        duke.start();"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 8
    }
  },
  {
    "path": "src/main/java/duke/Commands.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public enum Commands {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    DELETE"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 11
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public Deadline(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return \"[D]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "import java.awt.color.CMMException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": "import java.sql.Array;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": "import exception.*;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    Scanner sc;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    ArrayList\u003cTask\u003e list;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    String input;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Duke.introduce();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        interact();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Duke.bye();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public static void buildChatSeparator() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\"____________________________________________________________\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public void interact() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            input \u003d sc.nextLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            String[] splitted \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            Commands command \u003d null;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                command \u003d Commands.valueOf(splitted[0].toUpperCase());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                this.processInput(command);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } catch (UnknownCommandException ex) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                System.out.println(ex);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            "
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            if (command.equals(Commands.BYE)) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else if (command.equals(Commands.LIST)) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                buildChatSeparator();"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                System.out.println(\" Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                for (int i \u003d 1; i \u003c\u003d list.size(); i++) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    System.out.println(\" \" + i + \". \" + list.get(i - 1));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                buildChatSeparator();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else if (command.equals(Commands.DONE)){"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    this.makeDone(Integer.parseInt(splitted[1]) - 1);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | DukeErrorException ex) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    System.out.println(ex);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else if (command.equals(Commands.DELETE)){"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    this.deleteTask(Integer.parseInt(splitted[1]) - 1);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | DukeErrorException ex) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    System.out.println(ex);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else if (command.equals(Commands.DEADLINE)) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    this.addDeadline(splitted[1]);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | InvalidDeadlineException ex) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    System.out.println(ex + \". ☹ Task deadline must be specified.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else if (command.equals(Commands.TODO)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    this.addTodo(splitted[1]);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | InvalidTodoException ex) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    System.out.println(ex + \". ☹ The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else if (command.equals(Commands.EVENT)) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    this.addEvent(splitted[1]);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                } catch (ArrayIndexOutOfBoundsException | InvalidEventException ex) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                    System.out.println(ex + \". ☹ The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                buildChatSeparator();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                System.out.println(\"added: \" + input);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                buildChatSeparator();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                list.add(new Task(input, false));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    private void deleteTask(int index) throws DukeErrorException {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (index \u003e\u003d list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new DukeErrorException(\"Operation: delete \" + (index + 1) + \" fails ☹.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Task deleted \u003d list.remove(index);"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" \" + deleted);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" Now you have \" + (list.size() \u003c\u003d 1"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                ? list.size() + \" task\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                : list.size() + \" tasks\")"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public void processInput(Commands cmd) throws UnknownCommandException {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (!cmd.equals(Commands.BYE) \u0026\u0026"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                !cmd.equals(Commands.EVENT) \u0026\u0026"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                !cmd.equals(Commands.DEADLINE) \u0026\u0026"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                !cmd.equals(Commands.DONE) \u0026\u0026"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                !cmd.equals(Commands.LIST) \u0026\u0026"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                !cmd.equals(Commands.TODO) \u0026\u0026"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                !cmd.equals(Commands.DELETE)) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new UnknownCommandException();"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public void makeDone(int index) throws DukeErrorException {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (index \u003e\u003d list.size() || index \u003c 0) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new DukeErrorException(\"Operation: done \" + (index + 1) + \" fails ☹.\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        list.set(index, list.get(index).completeTask());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" \" + list.get(index));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    private void addEvent(String str) throws InvalidEventException {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String[] deadline \u003d str.split(\"/at\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (deadline.length \u003e 2) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidEventException(\"☹ Event time must be written after `/at`.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (deadline[0].equals(\"\")) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidEventException(\"☹ Event description must be specified.\");"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (deadline[1].equals(\"\")) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidEventException(\"☹ Event time must be specified.\");"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String description \u003d deadline[0].trim() + \" (at: \" + deadline[1].trim() + \")\";"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Event curr \u003d new Event(description, false);"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        list.add(curr);"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        this.describeTask(curr);"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    private void addTodo(String str) throws InvalidTodoException {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String description \u003d str.trim();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (description.equals(\"\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidTodoException(\"☹ Todo description must be specified.\");"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Todo curr \u003d new Todo(description, false);"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        list.add(curr);"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        this.describeTask(curr);"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    private void addDeadline(String str) throws InvalidDeadlineException {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String[] deadline \u003d str.split(\"/by\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (deadline.length \u003e 2) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidDeadlineException(\"☹ Task deadline must be written after `/by`.\");"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (deadline[0].equals(\"\")) {"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidDeadlineException(\"☹ Task description must be specified.\");"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (deadline[1].equals(\"\")) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            throw new InvalidDeadlineException(\"☹ Task deadline must be specified.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String description \u003d deadline[0].trim() + \" (by: \" + deadline[1].trim() + \")\";"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        Deadline curr \u003d new Deadline(description, false);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        list.add(curr);"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        this.describeTask(curr);"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public void describeTask(Task curr) {"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" \" + curr);"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" Now you have \" + (list.size() \u003d\u003d 1"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                ? list.size() + \" task\""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                : list.size() + \" tasks\")"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \" in the list.\");"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public static void introduce() {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        String introduction \u003d \"____________________________________________________________\\n\""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"Hello! I\u0027m Duke\\n\""
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"What can I do for you?\\n\""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "kevnw"
        },
        "content": "                + \"____________________________________________________________\\n\";"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(introduction);"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public static void bye() {"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        System.out.println(\" Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        buildChatSeparator();"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 200,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public Event(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return \"[E]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public Task (String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public Task completeTask() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        if (this instanceof Deadline) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            return new Deadline(this.description, true);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        } else if (this instanceof Event) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            return new Event(this.description, true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevnw"
        },
        "content": "            return new Todo(this.description, true);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return (isDone ? \"[✓]\" : \"[✗]\")+ \" \" + description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 26
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/exception/DukeErrorException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class DukeErrorException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public DukeErrorException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return \"  Invalid use of Duke Chatbot!\\n\" + super.getMessage();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/exception/InvalidDeadlineException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class InvalidDeadlineException extends DukeErrorException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public InvalidDeadlineException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return super.getMessage() + \"\\n     Usage: deadline \u003cdeadline description\u003e /by \u003cdeadline date\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/exception/InvalidEventException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class InvalidEventException extends DukeErrorException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public InvalidEventException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return super.getMessage() + \"\\n     Usage: event \u003cevent description\u003e /at \u003cevent date\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/exception/InvalidTodoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class InvalidTodoException extends DukeErrorException {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public InvalidTodoException(String message) {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return super.getMessage() + \"\\n     Usage: todo \u003ctodo description\u003e\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 13
    }
  },
  {
    "path": "src/main/java/exception/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "package exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "public class UnknownCommandException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "        return \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kevnw"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kevnw": 9
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kevnw"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kevnw"
        },
        "content": "deadline do homework /by no idea :-p"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kevnw"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kevnw"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kevnw"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kevnw"
        },
        "content": "done 4"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kevnw"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kevnw"
        },
        "content": "list"
      }
    ],
    "authorContributionMap": {
      "kevnw": 8
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kevnw"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\Main.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kevnw"
        },
        "content": "java -classpath ..\\bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kevnw": 2,
      "-": 19
    }
  }
]
