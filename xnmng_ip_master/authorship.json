[
  {
    "path": "src/main/java/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "// partial solution copied from iP"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    protected String by;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        this.by \u003d by.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        return \"  [D]\" + super.toString() + \" (by: \" + by + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 15
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this field is used when Duke requires a horizontal line"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static final String LINE \u003d \"    ____________________________________________________________\";"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function greets the user when Duke is started"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void greeting(){"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Hello! I\u0027m Duke and I was designed by Xuan Ming!\\n\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     What can I do for you?\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function says bye to the user when Duke receives the input \"bye\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void goodbye() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // calling this function will cause Duke to echo what the user inputs to Duke"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function is only used in level 1 of the iP"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void echo(String s) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     \" + s);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function takes in the input from the user and adds it to the list of tasks Duke is tracking"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // helper function"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void addTask(Task t, ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        tasks.add(t);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     \" + t.toString());"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function lists the list of tasks Duke is tracking"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void list(ArrayList\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        int counter \u003d 1;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        for (Task task : tasks) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            System.out.println(\"     \" + counter + \".\" + task.toString());"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            counter++;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function prints the task that is completed"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void printDone(ArrayList\u003cTask\u003e tasks, int taskNumber) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        Task t \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        t.markAsDone();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    // this function deletes the task"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public static void deleteTask(ArrayList\u003cTask\u003e tasks, int taskNumber) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        Task t \u003d tasks.get(taskNumber);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        tasks.remove(taskNumber);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"       \" + t.toString());"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(\"     Now you have \" + tasks.size() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        System.out.println(LINE);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "-"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "-"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "-"
        },
        "content": "        System.out.println(\"Hello from\\n\" + logo);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        greeting();"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        // this field keeps track of the tasks given to Duke"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        ArrayList\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        Scanner sc \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            // if the user inputs a \"bye\" command, we simply break out of the Duke program"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"bye\")) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                goodbye();"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            // if the user inputs a \"list\" command, Duke will iterate through the added text and print them in the order"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            // they were given to Duke."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"list\")) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                list(tasks);"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                sc.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                continue;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            // if the user inputs a \"done\" command followed by a valid number, Duke will change the valid numbered"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            // task to done"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"done\")) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    sc.skip(\"done\");"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingNumberFromCommandException();"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new InvalidNumberFromDoneCommandException();"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    printDone(tasks, taskNumber - 1);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingNumberFromCommandException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! Please type in the \\\"done\\\" command followed by a valid task number.\");"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The \\\"done\\\" command must be followed by a valid task number.\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (InvalidNumberFromDoneCommandException e) {"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The \\\"done\\\" command must be followed by a valid task number.\");"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"event\")) {"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    sc.skip(\"event\");"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    } else if (!input.contains(\"/at\")) {"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingInfoException();"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        String[] split \u003d input.split(\"/at\");"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                            throw new MissingInfoException();"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        Event e \u003d new Event(split[0], split[1]);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        addTask(e, tasks);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        sc.reset();"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of a event cannot be empty.\");"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The event you keyed in needs to have a timing!\");"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     You can key in a timing by typing \\\"/at\\\", followed by the event timing!\");"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"deadline\")) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    sc.skip(\"deadline\");"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    } else if (!input.contains(\"/by\")) {"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingInfoException();"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        String[] split \u003d input.split(\"/by\");"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        if (split.length !\u003d 2) {"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                            throw new MissingInfoException();"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        Deadline e \u003d new Deadline(split[0], split[1]);"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        addTask(e, tasks);"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        sc.reset();"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        continue;"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingInfoException e) {"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The deadline you keyed in needs to have a deadline!\");"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     You can key in a timing by typing \\\"/by\\\", followed by the deadline\u0027s \" +"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                            \"deadline!\");"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"todo\")) {"
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    sc.skip(\"todo\");"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    String task \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (task.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingDescriptionException();"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    ToDo t \u003d new ToDo(task);"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    addTask(t, tasks);"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingDescriptionException e) {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            if (sc.hasNext(\"delete\")) {"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    sc.skip(\"delete\");"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    String input \u003d sc.nextLine().trim();"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (input.length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new MissingNumberFromCommandException();"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    int taskNumber \u003d Integer.parseInt(input);"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    if (taskNumber \u003c\u003d 0 || taskNumber \u003e tasks.size()) {"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                        throw new InvalidNumberFromDoneCommandException();"
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    deleteTask(tasks, taskNumber - 1);"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    continue;"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (MissingNumberFromCommandException e) {"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! Please type in the delete command followed by a task number.\");"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 257,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 258,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (InvalidNumberFromDoneCommandException e) {"
      },
      {
        "lineNumber": 259,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 260,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The delete command must be followed by a valid task number.\");"
      },
      {
        "lineNumber": 261,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 262,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 263,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 264,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 265,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! The delete command must be followed by a valid task number.\");"
      },
      {
        "lineNumber": 266,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 267,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 268,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 269,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 270,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            else {"
      },
      {
        "lineNumber": 271,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                try {"
      },
      {
        "lineNumber": 272,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    String command \u003d sc.nextLine();"
      },
      {
        "lineNumber": 273,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    throw new UnknownCommandException(command);"
      },
      {
        "lineNumber": 274,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 275,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 276,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                catch (UnknownCommandException e) {"
      },
      {
        "lineNumber": 277,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 278,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(\"     ☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what \\\"\" + e.command + \"\\\" means :-(\");"
      },
      {
        "lineNumber": 279,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                    System.out.println(LINE);"
      },
      {
        "lineNumber": 280,
        "author": {
          "gitId": "xnmng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 281,
        "author": {
          "gitId": "xnmng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 282,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 283,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 284,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 285,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "-": 10,
      "xnmng": 275
    }
  },
  {
    "path": "src/main/java/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "// partial solution copied from iP"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    protected String at;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        this.at \u003d at.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        return \"  [E]\" + super.toString() + \" (at: \" + at + \")\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 15
    }
  },
  {
    "path": "src/main/java/InvalidNumberFromDoneCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.lang.Throwable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class InvalidNumberFromDoneCommandException extends Throwable{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 5
    }
  },
  {
    "path": "src/main/java/MissingDescriptionException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.lang.Throwable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class MissingDescriptionException extends Throwable{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 5
    }
  },
  {
    "path": "src/main/java/MissingInfoException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.lang.Throwable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class MissingInfoException extends Throwable{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 5
    }
  },
  {
    "path": "src/main/java/MissingNumberFromCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.lang.Throwable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class MissingNumberFromCommandException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 4
    }
  },
  {
    "path": "src/main/java/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "// partial solution template copied from Extension: A-Classes"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        this.description \u003d description.trim();"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        return (isDone ? \"✓\" : \"✘\"); //return tick or X symbols"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 24
    }
  },
  {
    "path": "src/main/java/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "// partial solution copied from iP"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        super(description.trim());"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        return \"  [T]\" + super.toString();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 12
    }
  },
  {
    "path": "src/main/java/UnknownCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "import java.lang.Throwable;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "public class UnknownCommandException extends Throwable {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    public UnknownCommandException(String s) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": "        this.command \u003d s;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "xnmng": 11
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "xnmng"
        },
        "content": "list"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done a"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event 1"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event a"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event 1 /at"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event a /at"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event 1 /at 1"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "xnmng"
        },
        "content": "event a /at a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done -1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "xnmng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "xnmng"
        },
        "content": "delete -1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "xnmng"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "xnmng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "xnmng"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnmng"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnmng"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline a"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline 1"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline a /by"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline a /by a"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline 1 /by"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "xnmng"
        },
        "content": "deadline 1 /by 1"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "xnmng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "xnmng"
        },
        "content": "todo a"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "xnmng"
        },
        "content": "abc"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "xnmng"
        },
        "content": "123"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "xnmng"
        },
        "content": "hi"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "xnmng"
        },
        "content": "list"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "xnmng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "xnmng": 37
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "xnmng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003cinput.txt \u003eACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "xnmng"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "xnmng"
        },
        "content": "pause"
      }
    ],
    "authorContributionMap": {
      "-": 20,
      "xnmng": 3
    }
  }
]
