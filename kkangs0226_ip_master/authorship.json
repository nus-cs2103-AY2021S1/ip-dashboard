[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 2,
      "-": 24
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "D | 0 | ddfksj | 2020-02-02"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 2
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Child class of Task. Represents a type of task that has a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Constructor for Deadline class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description the description of Deadline object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param by the deadline of Deadline object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.date \u003d LocalDate.parse(by);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.dateString \u003d by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to convert the Deadline object to a string that is stored in the duke.txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string to be stored in the duke.txt file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String doneInteger \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"D | \" + doneInteger + \" | \" + this.description + \" | \" + this.dateString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 36
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class that represents the Personal assistant chat bot."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private  TaskList tasks;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private final Ui ui;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Constructor for Duke object."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param filePath path of file that stores data for Duke program"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            tasks \u003d new TaskList(storage.load());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            ui.loadingErrorMessage();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Runs the Duke program."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        ui.greet();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Scanner scanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        while (scanner.hasNext()) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            String input \u003d scanner.nextLine();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            String command \u003d input.split(\" \")[0];"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            InputCommand inputCommand;"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                inputCommand \u003d InputCommand.valueOf(command.toUpperCase());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                inputCommand \u003d InputCommand.INVALID;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                switch (inputCommand) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case BYE:"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.byeMessage();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    return;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case LIST:"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.showList(tasks.getList());"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case DONE:"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    if (Parser.isValidIndex(input, tasks.getListSize())) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        Task task \u003d tasks.getList().get(Parser.getIndex(input));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        task.markAsDone();"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        ui.doneMessage(task);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        storage.saveListToFile(tasks.getList());"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                        throw new DukeException(\"You don\u0027t have such task in your list...\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case DELETE:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    int index \u003d Parser.getIndex(input);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.deletedMessage(tasks.getList().get(index), tasks.getListSize());"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    tasks.deleteTask(index);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(tasks.getList());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case TODO:"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    tasks.addList(new Todo(Parser.getTodoDescription(input)));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.addedMessage(new Todo(Parser.getTodoDescription(input)), tasks.getListSize());"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(tasks.getList());"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case DEADLINE:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    tasks.addList(new Deadline(Parser.getDeadlineStrings(input)[0],"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                            Parser.getDeadlineStrings(input)[1]));"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.addedMessage(new Deadline(Parser.getDeadlineStrings(input)[0],"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                            Parser.getDeadlineStrings(input)[1]), tasks.getListSize());"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(tasks.getList());"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case EVENT:"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    tasks.addList(new Event(Parser.getEventTimeStrings(input)[0],"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                            Parser.getEventTimeStrings(input)[1]));"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.addedMessage(new Event(Parser.getEventTimeStrings(input)[0],"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                            Parser.getEventTimeStrings(input)[1]), tasks.getListSize());"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    storage.saveListToFile(tasks.getList());"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case GET_TASK:"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.findTask(Parser.parseDate(input.substring(9)), tasks.getList());"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                case FIND:"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    ui.findTaskByKeyword(input.substring(9), tasks.getList());"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    throw new DukeException(\"Give me a valid banana (input)!\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (DukeException e){"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                ui.wrapMessage(e.toString());"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        scanner.close();"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        new Duke(\"data/duke.txt\").run();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 108,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * A child class of Exception that represents an error specific to Duke."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    String message;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Constructor for DukeException class."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input string input to be printed out in error message"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DukeException(String input) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(input);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        message \u003d input;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"Apple Pineapple!! \" + message;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 24
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Child class of Task. Represents a type of task that starts at a time."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Constructor for Event class"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description the description of Event object"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param at the time of Event object"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Event(String description, String at) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.date \u003d LocalDate.parse(at);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.dateString \u003d at;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to convert the Event object to a string that is stored in the duke.txt file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string to be stored in the duke.txt file"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String doneInteger \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"E | \" + doneInteger + \" | \" + this.description + \" | \" + this.dateString;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(\"MMM dd yyyy\")) + \")\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 36
    }
  },
  {
    "path": "src/main/java/duke/InputCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public enum InputCommand {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    TODO,"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DEADLINE,"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    EVENT,"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    LIST,"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DONE,"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    DELETE,"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    INVALID,"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    BYE,"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    GET_TASK,"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    FIND,"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 14
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class containing methods to parse user input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to check if the input has a valid index."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input string input of user"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param listSize size of list of tasks"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return true if index is valid, false if invalid"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static boolean isValidIndex(String input, int listSize) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] stringArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            index \u003d Integer.parseInt(stringArray[1]);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch(Exception e) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return index \u003c\u003d listSize \u0026\u0026 index \u003e 0;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get index in the string."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input string input of the command"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return index contained in the command"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static int getIndex(String input) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] stringArray \u003d input.split(\" \");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return Integer.parseInt(stringArray[1]) - 1;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get description of a Todo object."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input string input of user"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string description of a Todo object"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException throws DukeException"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static String getTodoDescription(String input) throws DukeException{"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            return input.substring(5);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (Exception e){"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"Todo cannot be empty!\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get Deadline description and deadline date string."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input string input of user"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string array containing description and deadline of Deadline object"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static String[] getDeadlineStrings(String input) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] stringArray \u003d input.split(\" /by \");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        stringArray[0] \u003d stringArray[0].substring(9);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return stringArray;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get Event description and time of Event."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param input string input of user"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string array containing description and time of Event object"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static String[] getEventTimeStrings(String input) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] stringArray \u003d input.split(\" /at \");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        stringArray[0] \u003d stringArray[0].substring(6);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return stringArray;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to parse the date of the string."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param date string representation of the date"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return LocalDate object that corresponds to string representation"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public static LocalDate parseDate(String date) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return LocalDate.parse(date);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 82
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Path;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class that stores methods and fields involved in writing and storing data in a separate text file as well as"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * retrieving data from text file."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    String filePath;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    File dataFile;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to load data from text file into program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return List\u003cTask\u003e object containing list of tasks retrieved from the text file"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public List\u003cTask\u003e load() throws DukeException{"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Path directoryPath \u003d Paths.get(\"data\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        boolean directoryExists \u003d Files.exists(directoryPath);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        dataFile \u003d new File(filePath);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        boolean fileExists \u003d Files.exists(Paths.get(\"data\", \"duke.txt\"));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        if (!directoryExists) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            File directory \u003d new File(directoryPath.toString());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            directory.mkdir();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                dataFile.createNewFile();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"WHAT WHATS GOING ON\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } else if (!fileExists) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                dataFile.createNewFile();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                return null;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"WHAT WHATS GOING ON\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                BufferedReader reader \u003d new BufferedReader(new FileReader(filePath.toString()));"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                String line;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                while ((line \u003d reader.readLine()) !\u003d null) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                    convertLineToTasks(list, line);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                return list;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            } catch (IOException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                throw new DukeException(\"WHAT WHATS GOING ON\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private void convertLineToTasks(List\u003cTask\u003e list, String line) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String[] stringArray \u003d line.split(\" \\\\| \");"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String taskType \u003d stringArray[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        boolean isDone \u003d stringArray[1].equals(\"1\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task \u003d null;"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        switch (taskType) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case \"T\":"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d new Todo(stringArray[2]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case \"D\":"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d new Deadline(stringArray[2], stringArray[3]);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        case \"E\":"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d new Event(stringArray[2], stringArray[3]);"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            break;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task.markAsDone();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to save a list of tasks into the text file."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param list current list of tasks of user"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException throws DukeException"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void saveListToFile(List\u003cTask\u003e list) throws DukeException {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            FileWriter writer \u003d new FileWriter(dataFile, false);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            for (Task t : list) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                writer.write(t.toFileString() + \"\\n\");"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"Writing error\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 119
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class to represent task of user. Is the parent class of Event, Deadline, Todo classes."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    String dateString;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    LocalDate date;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Constructor for Task object."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param description description of Task object"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.dateString \u003d \"0001-01-01\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.date \u003d LocalDate.parse(\"0001-01-01\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get status icon of the task object."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return String representation of status icon"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get date of the task object"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return LocalDate object of task object"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public LocalDate getDate() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to mark the task as done"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"Error\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 57
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class to represent the list of tasks of user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static List\u003cTask\u003e list;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public TaskList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        this.list \u003d list;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Getter method to get list of tasks of user."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return list of tasks of user"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public List\u003cTask\u003e getList() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to add a task to the list of tasks of user."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task Task object that needs to be added to the list of tasks"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void addList(Task task) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        list.add(task);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to delete tasks from the list of tasks of user."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param i index of task that needs to be deleted from the list of tasks"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @throws DukeException throws DukeException when the index is not within range"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void deleteTask(int i) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            list.remove(i);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            throw new DukeException(\"You don\u0027t have such task in your list...\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to get number of list of tasks."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return size of list of tasks"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public int getListSize() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return list.size();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 56
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Todo extends Task{"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class to represent a Todo object."
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to convert the Todo object to a string that is stored in the duke.txt file."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @return string to be stored in the duke.txt file"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toFileString() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        String doneInteger \u003d isDone ? \"1\" : \"0\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"T | \" + doneInteger + \" | \" + this.description;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 26
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Class that contains data and methods that have to do with user interface."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static String divider \u003d \"______________________________________________________________________________\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    private static String logo \u003d \"             *\\n\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"      o  o  / \\\\  o  o\\n\""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"      |\\\\/ \\\\/   \\\\/ \\\\/|\\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"      |             |\\n\""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"      |ooooooooooooo|\\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \" __  _  ____  ____    ____      ____    ___   ____  \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"|  |/ ||    ||    \\\\  /    |    |    \\\\  /   \\\\ |    \\\\ \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"|  \u0027 /  |  | |  _  ||   __|    |  o  )|     ||  o  )\\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"|    \\\\  |  | |  |  ||  |  |    |     ||  O  ||     |\\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"|     | |  | |  |  ||  |_ |    |  O  ||     ||  O  |\\n\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"|  .  | |  | |  |  ||     |    |     ||     ||     |\\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            + \"|__|\\\\_||____||__|__||___,_|    |_____| \\\\___/ |_____|\\n\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print the list of tasks to user."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param list list of tasks of user"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void showList(List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(\"   Banana! So many tasks?\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        for (int i \u003d 0; i \u003c list.size(); i++) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            task \u003d list.get(i);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            System.out.println(\"   \" + (i + 1) + \". \" + task.toString());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print greeting message to user."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(\"Bello from the Majestic\\n\" + logo);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(\"Banana! What can King Bob do for you?\\n\" + divider + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to wrap message in a standardised message printing format and print message."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param message message to be printed together with dividers"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void wrapMessage(String message) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(\"   \" + message);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print out bye message."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void byeMessage() {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        wrapMessage(\"Banana! King Bob is sad to see you go. Farewell my friend!\");"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print out added message to user."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task task that had been added to the list"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param n number of tasks in the updated list"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void addedMessage(Task task, int n) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        wrapMessage(\"Banana! Banana has been added to your list!\\n\""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"      \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"   Now you have \" + n + \" banana(s) in your list! Nom nom..\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print our deleted message to user."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task task that has been deleted from list"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param n number of tasks in the updated list"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void deletedMessage(Task task, int n) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        wrapMessage(\"Banana! Banana has been eaten. Burp!\\n\""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"      \" + task.toString() + \"\\n\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"   Now you have \" + (n - 1) + \" banana(s) in your list! Nom nom..\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print out done message to user."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param task task that has been done by user"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void doneMessage(Task task) {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        wrapMessage(\"Banana! I\u0027ve marked this task as done:\\n\""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                + \"      \" + task.toString());"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to print out error message to user."
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void loadingErrorMessage() {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        wrapMessage(\"Banana! There is a loading error...\");"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * Method to find the task that is on the given date and print."
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param date date input of user"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     * @param list list of tasks of user"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "     */"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void findTask(LocalDate date, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            if (t.getDate().equals(date)) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                System.out.println(\"   \" + t.toString());"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void findTaskByKeyword(String keyword, List\u003cTask\u003e list) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        for (Task t : list) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            if (t.toString().contains(keyword)) {"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "                System.out.println(\"   \" + t.toString());"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "            }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        System.out.println(divider + \"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 130
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Todo;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Event;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import duke.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "import org.junit.jupiter.api.Assertions;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void newToDo_toFileString_stringReturned(){"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task \u003d new Todo(\"test\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Assertions.assertEquals(task.toFileString(), \"T | 0 | test\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void newDeadline_toFileString_stringReturned(){"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task \u003d new Deadline(\"test\", \"2020-02-02\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Assertions.assertEquals(task.toFileString(), \"D | 0 | test | 2020-02-02\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    public void newEvent_toFileString_stringReturned(){"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Task task \u003d new Event(\"test\", \"2020-02-02\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "        Assertions.assertEquals(task.toFileString(), \"E | 0 | test | 2020-02-02\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 28
    }
  },
  {
    "path": "text-ui-test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "T | 0 | read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "E | 1 | graduation | 2018-11-27"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "E | 0 | more graduation | 2018-11-27"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 3
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "event graduation /at 2018-11-27"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "deadline 2103 project /by 2020-08-26"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "list"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "get_task 2018-11-27"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "event more graduation /at 2018-11-27"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "list"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "get_task 2018-11-27"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 12
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "if ! javac -cp ../src/main/java -Xlint:none -d ../bin ../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "kkangs0226"
        },
        "content": "#dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "kkangs0226": 2,
      "-": 36
    }
  }
]
