[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 2,
      "-": 24
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.commands.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.parser.Parser;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents the chat bot Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        storage \u003d Storage.dbInstance();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        taskList \u003d storage.getTaskListFromDatabase();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Starts up the chat bot by welcoming and listing out saved tasks. Prompts the user to enter"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * valid commands until the bye command is issued."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void start() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        ui.printWelcomeMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        ui.printDatabaseTasks(taskList);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        while (!isExit) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                ui.printDivider();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                Command command \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                command.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                isExit \u003d command.getExitStatus();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        new Duke().start();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 45,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/commands/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Adds a task to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private Type type;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public enum Type {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        TODO, DEADLINE, EVENT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public AddCommand(Type type, String command) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super.init(taskList, ui, storage);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (type \u003d\u003d Type.TODO)"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            addTodo();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (type \u003d\u003d Type.DEADLINE)"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            addDeadline();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (type \u003d\u003d Type.EVENT)"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            addEvent();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private void addTodo() {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Todo todo \u003d new Todo(super.command);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            super.taskList.addTask(todo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            super.ui.printAddTaskMessage(super.taskList, todo);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private void addDeadline() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String detail \u003d formatTimingInput(\"/by\", super.command)[0];"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String timing \u003d formatTimingInput(\"/by\", super.command)[1].trim();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(timing, formatter);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Deadline deadline \u003d new Deadline(detail, dateTime);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            super.taskList.addTask(deadline);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            super.ui.printAddTaskMessage(super.taskList, deadline);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Please enter timing in \u0027/by 02-30-2020 23:59\u0027 format\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private void addEvent() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String detail \u003d formatTimingInput(\"/at\", super.command)[0];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String timing \u003d formatTimingInput(\"/at\", super.command)[1].trim();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            LocalDateTime dateTime \u003d LocalDateTime.parse(timing, formatter);"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Event event \u003d new Event(detail, dateTime);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            super.taskList.addTask(event);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            super.ui.printAddTaskMessage(super.taskList, event);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Please enter timing in \u0027/at 02-30-2020 23:59\u0027 format\");"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Returns a string array where the first item is the description of the task"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * and the next item is the timing of the task."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param format is to differentiate between a deadline and an event"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param input is the entire string to be split"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return a string array with first item description second item time"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @throws DukeException if the user does not include the timing in his/her input"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String[] formatTimingInput(String format, String input) throws DukeException {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (!input.contains(format)) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            String message \u003d \"Don\u0027t forget to add a timing in \u0027\""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    + format + \" 12-12-2020 23:59\u0027 format\";"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new DukeException(message);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return input.trim().split(format);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 107
    }
  },
  {
    "path": "src/main/java/duke/commands/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents the command given by the user."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected TaskList taskList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected String command;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected Ui ui;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected Storage storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected boolean isExit \u003d false;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Command(String command) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.command \u003d command;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void init(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.storage \u003d storage;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public boolean getExitStatus() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.isExit;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Executes the command given by the user depending on the type of command given."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param taskList the list of tasks to be operated on based on the command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param ui       the type of output for the UI depending on the command"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param storage  the database to store the user\u0027s task list when he/she exits the program"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public abstract void execute(TaskList taskList, Ui ui, Storage storage);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 40
    }
  },
  {
    "path": "src/main/java/duke/commands/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Deletes the specified task from the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public DeleteCommand(String command, String index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Please enter a valid task number\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Task selectedTask \u003d taskList.deleteTask(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            ui.printDeleteMessage(taskList, selectedTask);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            ui.displayErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 34
    }
  },
  {
    "path": "src/main/java/duke/commands/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Saves all current tasks to the database and exits the program."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public ExitCommand(String command) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super.isExit \u003d true;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        taskList.forEach(task -\u003e {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            stringBuilder.append(task.formatTaskForDatabase() + \"\\n\");"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        });"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(storage.getDirectory());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            fileWriter.write(stringBuilder.toString());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Error while updating database file\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 35
    }
  },
  {
    "path": "src/main/java/duke/commands/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Finds all tasks that contains the keyword the user specified."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public FindCommand(String command) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        ui.printFindMessage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int index \u003d 1;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                // Check if user input matches any task description in list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                if (taskList.getTask(i + 1).getDescription().contains(super.command)) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    String message \u003d (index) + \".\" + taskList.getTask(i + 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    System.out.println(message);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                    index++;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                e.getMessage();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 37
    }
  },
  {
    "path": "src/main/java/duke/commands/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Lists all tasks from the task list."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public ListCommand(String command) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        ui.printAllTasks(taskList);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 21
    }
  },
  {
    "path": "src/main/java/duke/commands/UpdateCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Marks the specified task to be done or not."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class UpdateCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private int index;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public UpdateCommand(String command, String index) {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(command);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            this.index \u003d Integer.parseInt(index);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Please enter a valid task number\");"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void execute(TaskList taskList, Ui ui, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Task selectedTask \u003d taskList.getTask(index);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            selectedTask.setDone();"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            ui.printDoneMessage(selectedTask);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            ui.displayErrorMessage(e.getMessage());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 35
    }
  },
  {
    "path": "src/main/java/duke/exceptions/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.exceptions;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "src/main/java/duke/parser/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.commands.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents the parser that parses the user\u0027s input."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Returns the respective Command object depending on the user input only if the input is a"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * valid command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param input the command given by the user"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return Command object that corresponds to the user\u0027s input"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @throws DukeException if the user inputs an unrecognisable command"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public static Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (input.startsWith(\"todo\")) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return prepareAddTodo(input);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (input.startsWith(\"deadline\")) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return prepareAddDeadline(input);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (input.startsWith(\"event\")) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return prepareAddEvent(input);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (\"list\".equals(input)) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return new ListCommand(input);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (input.startsWith(\"done\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return prepareUpdateTask(input);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (input.startsWith(\"delete\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return prepareDeleteTask(input);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (input.startsWith(\"find\")) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return prepareFindTask(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (\"bye\".equals(input)) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return new ExitCommand(input);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new DukeException(\"I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static Command prepareAddTodo(String command) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String description \u003d command.substring(4).trim();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new AddCommand(AddCommand.Type.TODO, description);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static Command prepareAddDeadline(String command) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String description \u003d command.substring(8).trim();"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new AddCommand(AddCommand.Type.DEADLINE, description);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static Command prepareAddEvent(String command) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String description \u003d command.substring(5).trim();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new AddCommand(AddCommand.Type.EVENT, description);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static Command prepareUpdateTask(String command) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String todoIndex \u003d command.substring(4).trim();"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new UpdateCommand(command, todoIndex);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static Command prepareDeleteTask(String command) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String todoIndex \u003d command.substring(6).trim();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new DeleteCommand(command, todoIndex);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static Command prepareFindTask(String command) {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String keyword \u003d command.substring(4).trim();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new FindCommand(keyword);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 71
    }
  },
  {
    "path": "src/main/java/duke/storage/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.storage;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.io.FileNotFoundException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents the database of tasks for the user."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private String directory;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private File db;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Creates an instance of the database that is linked to the user file path."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return the storage object to be used when the bot is running"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public static Storage dbInstance() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return new Storage().init();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private Storage init() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String projectRoot \u003d new File(System.getProperty(\"user.dir\"))"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                .getParentFile()"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                .getPath();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.directory \u003d String.format(\"%s/data/db.txt\", projectRoot);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            this.db \u003d new File(this.directory);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            this.db.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            this.db.createNewFile();"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Error creating file, file might already exist.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Scans the database file in the user\u0027s directory to return the task list stored."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return the task list that stores all tasks from the user\u0027s previous session"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public TaskList getTaskListFromDatabase() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            File file \u003d new File(this.directory);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            Scanner scanner \u003d new Scanner(file);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            while (scanner.hasNextLine()) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                taskList.addTask(createTaskFromDatabase(scanner.nextLine()));"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Database file does not exist in directory\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Uses the formatted string from the database to create a saved task."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param string the formatted string that has type, done status, description and time"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return the task stored in the database"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task createTaskFromDatabase(String string) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String[] parts \u003d string.split(\"\\\\|\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String typeOfTask \u003d parts[0];"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int doneStatus \u003d Integer.parseInt(parts[1]);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String details \u003d parts[2];"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (typeOfTask.equals(\"T\")) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return new Todo(doneStatus, details);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (typeOfTask.equals(\"D\")) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            LocalDateTime timing \u003d LocalDateTime.parse(parts[3]);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return new Deadline(doneStatus, details, timing);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else if (typeOfTask.equals(\"E\")) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            LocalDateTime timing \u003d LocalDateTime.parse(parts[3]);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return new Event(doneStatus, details, timing);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String getDirectory() {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.directory;"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 90
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents a Deadline object that has a task description and a deadline timing."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private LocalDateTime deadline;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Deadline(String detail, LocalDateTime deadline) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(detail);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Constructor that is overloaded to create a deadline object from the database."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param doneStatus the state of the task from the user\u0027s previous session"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param detail the description of the deadline"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param deadline the time of the deadline."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Deadline(int doneStatus, String detail, LocalDateTime deadline) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(doneStatus, detail);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.deadline \u003d deadline;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String formatTaskForDatabase() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int status \u003d super.getDoneStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"D|\" + status + \"|\" + super.description + \"|\" + this.deadline;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"[D]\" + super.toString() + \" \" + super.description + \" (by:\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + deadline.format(dateTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 43
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents an event object that has the event description and time of event."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private LocalDateTime timing;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Event(String detail, LocalDateTime timing) throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(detail);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Constructor that is overloaded to create a deadline object from the database."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param doneStatus the state of the task from the user\u0027s previous session"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param detail the description of the event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param timing the time of the event"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Event(int doneStatus, String detail, LocalDateTime timing) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(doneStatus, detail);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.timing \u003d timing;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String formatTaskForDatabase() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int status \u003d super.getDoneStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"E|\" + status + \"|\" + super.description + \"|\" + timing;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        DateTimeFormatter dateTimeFormatter \u003d DateTimeFormatter.ofPattern(\"MMM dd yyyy HH:mm\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"[E]\" + super.toString() + \" \" + super.description + \" (at:\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + timing.format(dateTimeFormatter) + \")\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 44
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents the task the user wants to do."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private boolean isDone;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param s the description of the task"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @throws DukeException if the the description of the task is left blank"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task(String s) throws DukeException {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (s.isBlank()) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            throw new DukeException(\"Please add a nice description to your duke.task :)\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.description \u003d s;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Overloaded constructor for tasks from the database."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param doneStatus whether the task is done from the previous session."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param s the description of the task stored in the database."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task(int doneStatus, String s) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (doneStatus \u003d\u003d 1) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            this.isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.description \u003d s;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Sets the done state of the task."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void setDone() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.isDone \u003d !isDone;"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public boolean getDoneStatus() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Returns a string that is formatted having the type, done status, description, and time"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * of the task to be stored in the database."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return formatted string that is used for the creation of a task object."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public abstract String formatTaskForDatabase();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String isChecked \u003d (isDone ? \"[\\u2713]\" : \"[\\u2718]\");"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return isChecked;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 65
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.util.function.Consumer;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents a list that stores all tasks."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Overloaded constructor that sets the user\u0027s task list as the task list from the database."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param taskList the list received from the database"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public TaskList(ArrayList\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.taskList.add(task);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task deleteTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (isIndexInRange(index)) {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return this.taskList.remove(index - 1);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        throw new DukeException(\"Oh no! Task number does not exist in task list.\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public int size() {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return this.taskList.size();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Task getTask(int index) throws DukeException {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (isIndexInRange(index)) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            return this.taskList.get(index - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        throw new DukeException(\"Oh no! Task number does not exist in task list.\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void forEach(Consumer\u003cTask\u003e consumer) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.taskList.forEach(consumer);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public boolean isIndexInRange(int index) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return index \u003c\u003d this.taskList.size() \u0026\u0026 index \u003e 0;"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 59
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Todo(String s) throws DukeException {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(s);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Constructor that is overloaded to create a deadline object from the database."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param doneStatus the state of the task from the user\u0027s previous session"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param s the description of the todo"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Todo(int doneStatus, String s) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        super(doneStatus, s);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String formatTaskForDatabase() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        int status \u003d super.getDoneStatus() ? 1 : 0;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"T|\" + status + \"|\" + super.description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return \"[T]\" + super.toString() + \" \" + super.description;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 31
    }
  },
  {
    "path": "src/main/java/duke/ui/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " * Represents the output shown to the user."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private static final String DIVIDER \u003d \"\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\u003d\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private final Scanner in;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        this.in \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Formats the welcome message shown to the user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printWelcomeMessage() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String logo \u003d \"      ____        _        \\n\""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"     |  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"     | | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"     | |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"     |____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String welcome \u003d logo + \"\\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + DIVIDER + \"\\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"Hello! I\u0027m Ray\\n\" + \"Machine learning and AI powers me\\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + DIVIDER + \"\\n\";"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(welcome);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Prompts the user to enter a command in the ui and returns the input as a String to be"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * parsed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @return the string the user input"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(\"Please enter a command\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        return in.nextLine().trim();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printDivider() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(DIVIDER);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Prints a formatted message that includes the task the user added and"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * the number of tasks in the list after the use adds a task."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param taskList the ArrayList that stores all of the user\u0027s tasks"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param task the task the user chooses to add"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printAddTaskMessage(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        String message \u003d \"Got it. I\u0027ve added this task:\\n \" + task + \"\\nNow you have \""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + taskList.size() + \" in the list\";"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Prints a formatted message that includes the task the user specified to mark as done."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param task the task the user chooses to mark as done"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printDoneMessage(Task task) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(\"Nice! I\u0027ve marked this task as done:\\n \" + task);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Prints a formatted message that includes the task the user chooses to delete and the"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * size of the task list after the user deletes the task."
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param taskList the ArrayList that stores all tasks of the user"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param task the task the user chooses to delete"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printDeleteMessage(TaskList taskList, Task task) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(\"Noted. I\u0027ve removed this duke.task:\\n \" + task"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                + \"\\nNow you have \" + taskList.size() + \" in the list.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Prints a formatted message that lists all tasks the user currently has"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param taskList the ArrayList that stores all tasks of the user."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(\"Here are the tasks in your list\");"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        listAllTasks(taskList);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * Prints a formatted message that list all tasks the user saved from his/her previous session."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     *"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     * @param taskList the ArrayList that stores all tasks from the user\u0027s previous session."
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "     */"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printDatabaseTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        if (taskList.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"You have no tasks currently\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            System.out.println(\"Here are the saved from your last session\");"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            listAllTasks(taskList);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void printFindMessage() {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    private void listAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                String output \u003d (i + 1) + \".\" + taskList.getTask(i + 1);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(output);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            } catch (DukeException e) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "            }"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void displayErrorMessage(String message) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        System.out.println(message + \":((((\");"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 134
    }
  },
  {
    "path": "src/test/java/duke/commands/CommandsTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.commands;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.storage.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.ui.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class CommandsTest {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void testAddCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        AddCommand addTodo \u003d new AddCommand(AddCommand.Type.TODO, \"read book\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        AddCommand addDeadline \u003d new AddCommand(AddCommand.Type.DEADLINE, \"read book /by 12-12-2020 23:54\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        AddCommand addEvent \u003d new AddCommand(AddCommand.Type.EVENT, \"read book /at 12-12-2020 23:54\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Storage storage \u003d new Storage();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        addTodo.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        addDeadline.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        addEvent.execute(taskList, ui, storage);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(3, taskList.size());"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 26
    }
  },
  {
    "path": "src/test/java/duke/task/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import duke.exceptions.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertThrows;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void testSetDone() throws DukeException {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Todo todo \u003d new Todo(\"task\");"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        todo.setDone();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(true, todo.getDoneStatus());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void testDeleteTask() throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Todo firstTodo \u003d new Todo(\"task\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Todo secondTodo \u003d new Todo(\"todo\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Todo thirdTodo \u003d new Todo(\"random\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        taskList.addTask(firstTodo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        taskList.addTask(secondTodo);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        taskList.addTask(thirdTodo);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Throwable exception \u003d assertThrows(DukeException.class, () -\u003e taskList.deleteTask(5));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(\"Oh no! Task number does not exist in task list.\","
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "                exception.getMessage());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(firstTodo, taskList.deleteTask(1));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(thirdTodo, taskList.deleteTask(2));"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(1, taskList.size());"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void testFormatTaskForDatabase() throws DukeException {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Todo todo \u003d new Todo(\"Task\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(\"04-21-2020 23:45\", formatter);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"read book\", dateTime);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(\"T|0|Task\", todo.formatTaskForDatabase());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(\"D|0|read book|2020-04-21T23:45\", deadline.formatTaskForDatabase());"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    public void testToStringForTimedTasks() throws DukeException {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(\"MM-dd-yyyy HH:mm\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        LocalDateTime dateTime \u003d LocalDateTime.parse(\"04-21-2020 23:45\", formatter);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Deadline deadline \u003d new Deadline(\"read book\", dateTime);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        Event event \u003d new Event(\"book read\", dateTime);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(\"[D][✘] read book (by:Apr 21 2020 23:45)\", deadline.toString());"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "        assertEquals(\"[E][✘] book read (at:Apr 21 2020 23:45)\", event.toString());"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 62
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "event project meeting /at Monday 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "list"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 7
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "RuiFengg"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "RuiFengg": 4,
      "-": 18
    }
  }
]
