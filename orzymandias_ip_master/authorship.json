[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    id \"com.github.johnrengelman.shadow\" version \"6.0.0\""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    testImplementation \u0027org.junit.jupiter:junit-jupiter-api:5.6.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    testRuntimeOnly \u0027org.junit.jupiter:junit-jupiter-engine\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    mainClassName \u003d \"duke.Duke\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "task(runMain, dependsOn: \u0027classes\u0027, type: JavaExec) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    main \u003d \u0027duke.Duke\u0027"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    classpath \u003d sourceSets.main.runtimeClasspath"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 11,
      "-": 41
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /** File path for storage object to write to. */"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private TaskList taskItems;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/duke.txt\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiates Duke Object which initializes variables needed throughout program. "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param filePath path for storage object to write to."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Duke(String filePath) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui \u003d new Ui();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        storage \u003d new Storage(filePath);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            taskItems \u003d new TaskList(storage.loadTasksFromMemory());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            ui.showError(e.getMessage());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            taskItems \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Greets the user upon execution of duke process."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Reads User input and execute appropriate command."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void run() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui.greetUser();"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        boolean isExit \u003d false;"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        while(!isExit) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String fullCommand \u003d ui.readCommand();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                Command c \u003d Parser.parse(fullCommand);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                c.execute(taskItems, ui, storage);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                isExit \u003d c.isExit();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (DukeException duked) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                ui.showError(duked.getMessage());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } finally {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Executes the Duke process."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param args command line argument it is a collection of variables in the string format."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        new Duke(FILE_PATH).run(); "
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 55
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the Exception object which would be thrown throughout the process of running Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 10
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.command.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents Parser Object which parses user reply and execute appropriate response."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Parses user input and returns appropriate Command Object for execution in Duke class."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply user message input into Intrubot."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return Command to be executed by Duke class."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException if invalid command or arguments specified."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    static Command parse(String reply) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String[] commandAndArguments \u003d reply.split(\" \");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String command \u003d commandAndArguments[0];"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (command.equals(\"bye\")) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else if (command.equals(\"list\")) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else if (command.equals(\"clear\")) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return new ClearCommand();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                switch (command) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"done\":"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new DoneCommand(reply);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"delete\":"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new DeleteCommand(reply);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"find\":"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String args \u003d reply.substring(5);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new FindCommand(args);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"todo\":"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newTodo \u003d new ToDo(reply.substring(5));"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new ToDoCommand(newTodo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"deadline\":"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String[] taskAndTimeByArray \u003d reply.split(\" /by \");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String deadlineDescription \u003d taskAndTimeByArray[0].substring(9);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String by \u003d taskAndTimeByArray[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newDeadline \u003d new Deadline(deadlineDescription, LocalDate.parse(by));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new DeadlineCommand(newDeadline);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"event\":"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String[] taskAndTimeAtArray \u003d reply.split(\" /at \");"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String eventDescription \u003d taskAndTimeAtArray[0].substring(6);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    String at \u003d taskAndTimeAtArray[1];"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    Task newEvent \u003d new Event(eventDescription, LocalDate.parse(at));"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    return new EventCommand(newEvent);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    throw new DukeException("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                            String.format(\"Invalid Command Exception: %s is not a valid command.\", command));"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                throw new DukeException(String.format("
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                        \"Time format has to be in the form: YYYY-MM-DD %s\", e.getMessage()));"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            } catch (StringIndexOutOfBoundsException | ArrayIndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                throw new DukeException(String.format(\"Invalid arguments specified for %s\", command));"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }   "
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 69
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the Storage Object containing logic to writing and storing task list to memory."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String filePath;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes Storage object to be used for saving and loading task list throughout Duke."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param filePath specified file for Storage object to read from and write to."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Storage(String filePath) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.filePath \u003d filePath;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Handles logic where ./data or duke.txt does not exists by creating them."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param savedTasks File Object for loading and saving tasks. "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws IOException if File object cannot create new file."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private void handleFileOrDirectoryDoesNotExist(File savedTasks) throws IOException {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if(savedTasks.getParentFile().mkdirs()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            System.out.println(\"./data directory created\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (savedTasks.createNewFile()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            System.out.println(\"duke.txt created in ./data\");"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves tasks list to memory."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems tasks list to be saved to memory."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException if task cannot be written to memory if file created in path."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void saveTaskToMemory(List\u003cTask\u003e taskItems) throws DukeException {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        File savedTasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (!savedTasks.exists()) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                handleFileOrDirectoryDoesNotExist(savedTasks);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // Once file path exists, instantiate FileWriter Object."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            String taskToWrite \u003d \"\";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            for (Task task: taskItems) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                if (task instanceof ToDo) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToWrite +\u003d String.format(\"T,%d,%s\\n\", task.getIsDone() ? 1 : 0, task.getDescription());"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else if (task instanceof Deadline) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToWrite +\u003d String.format(\"D,%d,%s,%s\\n\", task.getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                                                task.getDescription(), ((Deadline) task).getByWhen());"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else if (task instanceof Event) {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToWrite +\u003d String.format(\"E,%d,%s,%s\\n\", task.getIsDone() ? 1 : 0,"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                                                task.getDescription(), ((Event) task).getAtWhen());"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    throw new DukeException(\"Cannot save invalid task type\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fw.write(taskToWrite);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            fw.close();"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(String.format(\"task cannot be saved to memory %s\", exception.getMessage()));"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Loads Tasks array from memory, else returns an empty array."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return List Object containing tasks loaded from memory."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public List\u003cTask\u003e loadTasksFromMemory() throws DukeException {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        List\u003cTask\u003e storedTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            File savedTasks \u003d new File(filePath);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // file or directory does not exists, make parent directory and file"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (!savedTasks.exists()) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                handleFileOrDirectoryDoesNotExist(savedTasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                return storedTasks;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // read and return from saved file"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Scanner sc \u003d new Scanner(savedTasks);"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            while (sc.hasNextLine()) {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                Task taskToAdd;"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String savedTask \u003d sc.nextLine();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                // Array of task type, status, description and time"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String[] parsedTasks \u003d savedTask.split(\",\");"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String taskType \u003d parsedTasks[0];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                boolean isDone \u003d parsedTasks[1].equals(\"1\") ? true : false;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String description \u003d parsedTasks[2];"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                String time;"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                switch (taskType) {"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"T\":"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToAdd \u003d new ToDo(description, isDone);"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"D\":"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    time \u003d parsedTasks[3];"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToAdd \u003d new Deadline(description, isDone, LocalDate.parse(time));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                case \"E\":"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    time \u003d parsedTasks[3];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    taskToAdd \u003d new Event(description, isDone, LocalDate.parse(time));"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                   throw new DukeException(\"Task cannot be read from Duke.txt\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                storedTasks.add(taskToAdd);"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return storedTasks;"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IOException exception) {"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(String.format(\"File cannot be loaded %s\", exception.getMessage()));"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 129
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Representation of list of tasks added by user."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes task list object with an empty ArrayList."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes task list object with specified Task List."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds tasks to task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task to be added to task list."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Remove task from task list."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param index index of task to be removed."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return Task object which is removed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task removeTask(int index) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        // 1 index list"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskList.remove(index - 1);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Gets all the tasks in the task list."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return List Object with all tasks in the TaskList."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public List\u003cTask\u003e getAll() {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.taskList;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Get task from task list."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskIndex index of task to be retrieved."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return Task Object retrieved based on index."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task getTask(int taskIndex) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return taskList.get(taskIndex);"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Gets size of task list."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return number of items int taskList."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "       return taskList.size();"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Clears all tasks from taskList."
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void clearAll() {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskList.clear();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * String representation of taskList."
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String object representing taskList."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            String formattedListString \u003d \"\";"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            for (int i \u003d 0; i \u003c taskList.size(); i ++) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                formattedListString+\u003d String.format(\"%d. %s\\n\", i + 1, taskList.get(i));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return formattedListString;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 96
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents Ui Components for user interaction and displaying messages."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private static final Scanner SCANNER \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private final String GREETING_LOGO \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            \"8888888 888b    888 88888888888 8888888b.  888     888 888888b.    .d88888b. 88888888888 \\n\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"  888   8888b   888     888     888   Y88b 888     888 888  \\\"88b  d88P\\\" \\\"Y88b    888     \\n\" "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"  888   88888b  888     888     888    888 888     888 888  .88P  888     888    888     \\n\""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"  888   888Y88b 888     888     888   d88P 888     888 8888888K.  888     888    888     \\n\""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"  888   888 Y88b888     888     8888888P\\\"  888     888 888  \\\"Y88b 888     888    888     \\n\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"  888   888  Y88888     888     888 T88b   888     888 888    888 888     888    888     \\n\""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"  888   888   Y8888     888     888  T88b  Y88b. .d88P 888   d88P Y88b. .d88P    888     \\n\""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    + \"8888888 888    Y888     888     888   T88b  \\\"Y88888P\\\"  8888888P\\\"   \\\"Y88888P\\\"     888\";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sends a greeting to user."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void greetUser() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(formatReply(\"ITS ME: \\n\" + GREETING_LOGO + \"\\nI want to know EVERYTHING ABOUT YOU\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sends Goodbye message to user."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void sayGoodbye() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(\"SAYONARA!\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Wraps message in partitioning for clearer readability."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply to be wrapped in partition."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of reply."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static String formatReply(String reply) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String partition \u003d \"__________________________\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(partition + \"\\n%s\\n\" + partition, reply);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Formats list object to be String representation."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems taskItems to be converted to appropriate String representation."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of taskItems."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public static String listFormatter(List\u003cTask\u003e taskItems) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedListString \u003d \"\";"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        for (int i \u003d 0; i \u003c taskItems.size(); i ++) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            formattedListString+\u003d String.format(\"%d. %s\\n\", i + 1, taskItems.get(i));"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return formattedListString;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task error message with a wrapper."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param errorMessage custom error message."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void showError(String errorMessage) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.out.println(formatReply(String.format(\"Something is amiss `(OCO)/ !!: %s\", errorMessage)));"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task done message."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is mark complete."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void doneTaskReply(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(formatReply(\"Nice! I\u0027ve marked this task as done:\\n\" + task.toString()));"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task added message."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is added."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void addTaskReply(Task task, TaskList taskItems) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(formatReply(String.format(\"Got it. I\u0027ve added this task:\\n    %s\\nNow you have %d tasks in the list\""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                , task.toString(), taskItems.getSize())));"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Shows Task deleted message."
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task which is deleted."
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void deleteTaskReply(Task task, TaskList taskItems) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(formatReply(String.format(\"HAI. I\u0027ve deleted this task:\\n    %s\\nNow you have %d tasks in the list\""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                , task.toString(), taskItems.getSize())));"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void findTaskReply(List\u003cTask\u003e matchingTasks) { "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        printReply(formatReply(String.format(\"HAI. Here are matching tasks:\\n%s\",listFormatter(matchingTasks))));"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Prints String to console. "
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param reply String to be printed."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void printReply(String reply) {"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.out.println(reply);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Reads user input in the command line."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return String representation of user input."
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String readCommand() {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return SCANNER.nextLine();"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 122
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the Command where user exits the program."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders good bye message."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage)  {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui.sayGoodbye();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class to terminate programme."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return true to terminate program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ClearCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ClearCommand extends Command {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskItems.clearAll();"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 18
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the base command which all other command have to abide to."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "abstract public class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Contains a series of logic for the execution of Command specified by the user."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui ui component which user interacts with or sees."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public abstract void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to terminate or not terminate the program."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public abstract boolean isExit();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 28
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the command where user specifies adding deadline task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DeadlineCommand extends ToDoCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiates the DeadlineCommand Object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task Stores Deadline object associated with command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DeadlineCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds the task to task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders the Ui for feedback when user adds task successfully."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves task to storage across sessions."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if there is error saving task to storage. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super.execute(taskItems, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 37
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the command object where user executes deletion of task from TaskList."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes the DeleteCommand Object. "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param args task to delete."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DeleteCommand(String args) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Removes tasks from task list."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders delete message upon successful deletion."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Updates local storage with updated task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if task number specified by user does not exist."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // parse for argument - item number"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            int itemNumber \u003d Integer.parseInt(args.split(\" \")[1]);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Task task \u003d taskItems.removeTask(itemNumber);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            ui.deleteTaskReply(task, taskItems);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Cannot delete task that does not exist\");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 56
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the done command when user wants to mark task as complete from task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String args;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initializes the DoneCommand Object. "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param args task to mark as complete."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public DoneCommand(String args) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.args \u003d args;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Sets task status to complete."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders task complete message upon successful update."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Updates local storage with updated task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if task number specified by user does not exist."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            // parse for argument - item number"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            int itemNumber \u003d Integer.parseInt(args.split(\" \")[1]) - 1;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Task task \u003d taskItems.getTask(itemNumber);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            task.markDone();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            ui.doneTaskReply(task);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            throw new DukeException(\"Task number does not exist\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 57
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the command where user specifies adding Event task."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class EventCommand extends ToDoCommand {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Instantiates the Event Object."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task Stores Event object associated with command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public EventCommand(Task task) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(task);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds the task to task list."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders the Ui for feedback when user adds task successfully."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves task to storage across sessions."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if there is error saving task to storage. "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super.execute(taskItems, ui, storage);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 36
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private String arg;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public FindCommand(String arg) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.arg \u003d arg;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        List\u003cTask\u003e tasksItems \u003d taskItems.getAll();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        for (Task task: tasksItems) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (task.getDescription().contains(arg)) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                matchingTasks.add(task);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui.findTaskReply(matchingTasks);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 34
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the list command when user wants to list all task in TaskList."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders view of all tasks in task list."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if task number specified by user does not exist."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui.printReply(ui.formatReply(taskItems.toString()));"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 35
    }
  },
  {
    "path": "src/main/java/duke/command/ToDoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " * Represents the ToDo Command when user adds tasks to the task list."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDoCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /** Stores ToDo associated with ToDoCommand. */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private Task task;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Initialzes TodoCommand Object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param task ToDo associated with Command."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDoCommand(Task task) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Adds the task to task list."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Renders the Ui for feedback when user adds task successfully."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Saves task to storage across sessions."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param taskItems represents the tasks which is added to the task list."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param ui        ui component which user interacts with or sees."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @param storage   Object for saving and loading tasks list to hard disk."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @throws duke.DukeException if there is error saving task to storage. "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void execute(TaskList taskItems, Ui ui, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        taskItems.addTask(task);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui.addTaskReply(task, taskItems);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        storage.saveTaskToMemory(taskItems.getAll());"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * Returns instruction to Duke class whether to terminate program."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     * @return bool value to not terminate the program."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 51
    }
  },
  {
    "path": "src/main/java/duke/stubs/ToDoStub.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.stubs;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDoStub extends ToDo {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDoStub(String description) {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 9
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected LocalDate by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Deadline(String description, LocalDate by) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Deadline(String description, boolean isDone,  LocalDate time) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.by \u003d time;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public LocalDate getByWhen() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.by;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedTimeBy \u003d by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"[D]\" + super.toString() + \" (by: %s)\", formattedTimeBy);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 28
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected LocalDate at;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Event(String description, LocalDate at) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public LocalDate getAtWhen() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.at;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Event(String description, boolean isDone, LocalDate time) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.at \u003d time;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        String formattedTimeAt \u003d at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy\"));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return String.format(\"[E]\" + super.toString() + \" (at: %s)\", formattedTimeAt);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 27
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void markDone() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean getIsDone() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.isDone;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String getDescription() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return this.description;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"[\" + getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      }
    ],
    "authorContributionMap": {
      "orzymandias": 38
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public ToDo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public boolean equals(Object obj) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        if (super.equals(obj) || obj instanceof ToDo) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            ToDo todoObj \u003d (ToDo) obj;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return todoObj.isDone \u003d\u003d this.isDone \u0026\u0026 todoObj.description.equals(this.description);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 24
    }
  },
  {
    "path": "src/test/java/duke/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void dummyTest() {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "//        featureUnderTest_testScenario_expectedBehavior "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Duke duke \u003d new Duke(Duke.FILE_PATH);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 11
    }
  },
  {
    "path": "src/test/java/duke/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.stubs.ToDoStub;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.nio.file.Files;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.nio.file.NoSuchFileException;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.nio.file.Paths;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void testLoadFileFromMemory_todoStub_success() throws DukeException, IOException {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        // clear file from previous session if it exists"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Files.delete(Paths.get(Duke.FILE_PATH));"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "           "
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } catch (NoSuchFileException exception) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            System.out.println(\"File path does not originally exist\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        } finally {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            Storage store \u003d new Storage(Duke.FILE_PATH);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            List\u003cTask\u003e expected \u003d new ArrayList\u003cTask\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            expected.add(new ToDoStub(\"test description\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            store.saveTaskToMemory(expected);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            store.saveTaskToMemory(expected);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            List\u003cTask\u003e actual \u003d store.loadTasksFromMemory();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            if (expected.size() \u003d\u003d actual.size()) {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                for (int i \u003d 0; i \u003c expected.size(); i++) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    // compare if expected equals to Task retrieved from memory"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                    assertEquals(true, expected.get(i).equals(actual.get(i)));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "            }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "   "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 46
    }
  },
  {
    "path": "src/test/java/duke/TaskTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class TaskTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void testTaskMarkDone_success() throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Task task \u003d new Task(\"description\");"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        task.markDone();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        assertEquals(task.getIsDone(), true);"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 19
    }
  },
  {
    "path": "src/test/java/duke/UiTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.AfterEach;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.BeforeEach;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.ByteArrayOutputStream;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "public class UiTest {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private final ByteArrayOutputStream outContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private final ByteArrayOutputStream errContent \u003d new ByteArrayOutputStream();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private final PrintStream originalOut \u003d System.out;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    private final PrintStream originalErr \u003d System.err;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @BeforeEach"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void setUpStreams() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.setOut(new PrintStream(outContent));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.setErr(new PrintStream(errContent));"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @AfterEach"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void restoreStreams() {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.setOut(originalOut);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        System.setErr(originalErr);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    public void greetingMessage_messageSuccess() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        ui.sayGoodbye();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "        assertEquals(\"SAYONARA!\", "
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                     outContent.toString()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                             .replaceAll(\"\\n\", \"\").replaceAll(\"\\r\", \"\"));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "                     "
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 37
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "clear"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "deadline return book /by 2020-12-02"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event project meeting /at 2012-11-03"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "find book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "sayonara"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "bye"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "event project meeting /at 2012-11-4"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 16
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "javac  -cp ..\\src\\main\\java -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke\\*.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "set JAVA_TOOL_OPTIONS\u003d-Dfile.encoding\u003dUTF-8"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "orzymandias"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "orzymandias": 3,
      "-": 19
    }
  }
]
