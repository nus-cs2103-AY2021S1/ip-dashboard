[
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "tasks.withType(JavaCompile) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    options.encoding \u003d \u0027UTF-8\u0027"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "applicationDefaultJvmArgs \u003d [\"-Dfile.encoding\u003dutf-8\"]"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    mainClassName \u003d \"duke.Launcher\""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    enableAssertions \u003d true"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 24,
      "-": 44
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "![User Interface](Ui.png)"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Features "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 1: Help command"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays a help manual for the application."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 2: Add command"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Adds a task (can be a to-do, deadline or an event) to the task list."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 3: List command"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "List all tasks in the task list with information such as type, status, and (possibly) date."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 4: Done command"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Marks a specified task as done."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 5: Delete command"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Deletes a specified task from the list."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 6: Find command"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays all tasks associated with a specified keyword."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 7: Completed command"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays all past tasks that have been marked as completed."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 8: Pending command"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays all tasks that have yet to be completed."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 9: Show command"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays all tasks happening / due on a certain date."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### Feature 10: Exit command"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Exits the bot by issuing a command."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `help` - Displays the help manual"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays a manual that shows all the available commands."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`help`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Welcome to Duke\u0027s help utility!"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To list all tasks on your agenda, type `list`."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To terminate the application, type `bye`."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To add a new ToDo, type `todo {description}`."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To add a new Event, type `event {description} /at {yyyy-mm-dd}."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To add a new Deadline, type `deadline {description} /by {yyyy-mm-dd}."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To mark a task as completed, type `done {index}`."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To delete a task, type `delete {index}`."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To find all tasks containing certain keywords, type `find {keywords}`."
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To list all completed tasks, type `completed`."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To list all pending tasks, type `pending`."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "To list all tasks that happen or due on a certain date, type `show {yyyy-mm-dd}`."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `todo \u003cdescription\u003e` - Adds a new to-do"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Adds a new task of type to-do to the list of tasks."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`todo Submit iP final product`"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "[T][✘] Submit iP final product"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Now you have 1 task in the list."
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `event \u003cdescription\u003e /at \u003cdate in yyyy-mm-dd\u003e` - Adds a new event"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Adds a new task of type event at the specified date to the list of tasks."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`event Intelligence Expo /at 2020-09-17`"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "[E][✘] Intelligence Expo (at: September 17 2020)"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `deadline \u003cdescription\u003e /by \u003cdate in yyyy-mm-dd\u003e` - Adds a new deadline"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Adds a new task of type deadline due on the specified date to the list of tasks."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`deadline iP final submission /by 2020-09-18`"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Got it. I\u0027ve added this task:"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "[D][✘] iP final submission (by: September 18 2020)"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Now you have 3 tasks in the list."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `list` - Displays all your tasks"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Display a full list of all the tasks you have added so far."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`list`"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Here are the task(s) in your agenda:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "1.[T][✓] Do laundry "
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "2.[D][✘] CS2103T iP final submission (by September 18 2020)"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "3.[E][✘] Intelligence Expo (at September 17 2020)"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `bye` - Exits the application"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Terminates the application."
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "-"
        },
        "content": "Example of usage: "
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`bye`"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `done \u003ctask index\u003e` - Marks a task as done"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Marks the task at the specified index as done. The index follows from the output of the list command."
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`done 1`"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Nice! I\u0027ve marked this task as done:"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "[T][✓] Submit iP final product"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `delete \u003ctask index\u003e` - Deletes a task"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Deletes a task at the given index from the task list. The index follows from the output of the list command."
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`delete 1`"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Noted. I\u0027ve removed this task:"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "[T][✓] Submit iP final product"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Now you have 2 tasks in the list."
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `find \u003c1st keyword\u003e \u003c2nd keyword\u003e ...` - Finds all tasks associated with keyword(s)"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Finds and displays all tasks associated with any of the specified keyword(s)."
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`find iP CS2103T`"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "-"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Here are the task(s) containing keyword(s): [iP, CS2103T]"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "1.[D][✘] CS2103T iP final submission (by September 18 2020)"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `completed` - Displays all completed tasks"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays a list of all tasks that have been completed so far."
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`completed`"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Here are the task(s) that have been completed:"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "1.[D][✓] CS2105 lab 2 (by September 23 2020)"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `pending` - Displays all pending tasks"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays a list of all tasks that have yet to be completed so far."
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`pending`"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Here are the task(s) that have been completed:"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "1.[D][✘] CS2103T iP final submission (by September 18 2020)"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "2.[T][✘] Email Trump"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `show \u003cdate in yyyy-mm-dd\u003e` - Displays all tasks on the given date"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Displays a list of tasks happening on or due on the given date."
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`show 2020-09-17`"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Expected outcome:"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Here are the task(s)/deadline(s) happening on: 2020-09-17"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "1.[E][✘] Intelligence Expo (at: September 17 2020)"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "2.[T][✘] Fix nginx server"
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "```"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "### `bye` - Terminates the application"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Exits the application."
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "Example of usage:"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "`bye`"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 217,
      "-": 20
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * The main class for the project. Initialises the Duke class and runs it."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String FILE_PATH \u003d \"data/data.txt\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String GREETING \u003d \"Hello! This is Duke\\nWhat can I do for you?\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final Storage storage;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private TaskList tasks;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a Duke object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        storage \u003d new Storage(FILE_PATH);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            tasks \u003d new TaskList(storage.processStorage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Generates the Duke\u0027s response to the given input."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param input The input by the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The {@link Response} given by Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Response getResponse(String input) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(input);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (c.isExit()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                Platform.exit();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new Response(c.execute(tasks, storage), false);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new Response(e.getMessage(), true);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static String greetUser() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return GREETING;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 51,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Entry point to GUI."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Launches the application."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param args Command-Line arguments."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 17
    }
  },
  {
    "path": "src/main/java/duke/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.ui.MainWindow;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * A GUI for Duke using FXML."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String RESOURCE_PATH \u003d \"/view/MainWindow.fxml\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String STYLESHEETS_PATH \u003d \"/styles/stylesheets.css\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides start method, starts the GUI."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param stage {@link Stage} to be displayed."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(RESOURCE_PATH));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            scene.getStylesheets().add(STYLESHEETS_PATH);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            stage.setResizable(false);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            stage.setTitle(\"Duke\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            MainWindow mainWindow \u003d fxmlLoader.getController();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            mainWindow.setDuke(duke);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 45
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeParseException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.CompletedCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.HelpCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.PendingCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.ShowCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.InvalidCommandException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.InvalidTaskTypeException;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.CommandType;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskType;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * The Parser class parses and processes user input."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String INVALID_DATE_FORMAT_MESSAGE \u003d"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! Please enter a date in yyyy-mm-dd format.\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String EVENT_EMPTY_DATE_MESSAGE \u003d"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! Please specify a date for the event.\";"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String DEADLINE_EMPTY_DATE_MESSAGE \u003d"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! Please specify a due date for the deadline.\";"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String SHOW_EMPTY_DATE_MESSAGE \u003d"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The show command requires a date in yyyy-mm-dd.\";"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String UNKNOWN_COMMAND_MESSAGE \u003d"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\";"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String EMPTY_TASK_TYPE_MESSAGE \u003d"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The type of a task cannot be empty.\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String FIND_EMPTY_KEYWORDS_MESSAGE \u003d"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The find command requires keyword.\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String DELETE_EMPTY_INDEX_MESSAGE \u003d"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The delete command requires the index of a task.\";"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String DONE_EMPTY_INDEX_MESSAGE \u003d"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The done command requires the index of a task.\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String LIST_EXTRA_ARGUMENTS_MESSAGE \u003d"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The list command does not take any additional argument(s).\";"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String BYE_EXTRA_ARGUMENTS_MESSAGE \u003d"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The bye command does not take any additional argument(s).\";"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String PENDING_EXTRA_ARGUMENTS_MESSAGE \u003d"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The pending command does not take any additional argument(s).\";"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String COMPLETED_EXTRA_ARGUMENTS_MESSAGE \u003d"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The completed command does not take any additional argument(s).\";"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String HELP_EXTRA_ARGUMENTS_MESSAGE \u003d"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The help command does not take any additional argument(s).\";"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Parses the given command based on different keywords."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the appropriate {@link Command} to execute next."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param fullCommand A String read from user input."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The corresponding {@link Command} for the input."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @throws DukeException Exception when parsing the input."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static Command parse(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        fullCommand \u003d fullCommand.toLowerCase();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String[] fullCommandArray \u003d fullCommand.split(\" \");"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        fullCommand \u003d fullCommand.strip();"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        /*"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Returns the correct command based on user input."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Invalid input will cause respective Exceptions to be thrown."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "         */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (fullCommand.equals(CommandType.BYE.getType())) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new ByeCommand();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.LIST.getType())) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.PENDING.getType())) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new PendingCommand();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.COMPLETED.getType())) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new CompletedCommand();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.HELP.getType())) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new HelpCommand();"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.SHOW.getType())) {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(SHOW_EMPTY_DATE_MESSAGE);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.FIND.getType())) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(FIND_EMPTY_KEYWORDS_MESSAGE);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.DELETE.getType())) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidCommandException(DELETE_EMPTY_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommand.equals(CommandType.DONE.getType())) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidCommandException(DONE_EMPTY_INDEX_MESSAGE);"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.LIST.getType())) {"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(LIST_EXTRA_ARGUMENTS_MESSAGE);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.BYE.getType())) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(BYE_EXTRA_ARGUMENTS_MESSAGE);"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.PENDING.getType())) {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(PENDING_EXTRA_ARGUMENTS_MESSAGE);"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.COMPLETED.getType())) {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(COMPLETED_EXTRA_ARGUMENTS_MESSAGE);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.HELP.getType())) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException(HELP_EXTRA_ARGUMENTS_MESSAGE);"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.SHOW.getType())) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                LocalDate date \u003d LocalDate.parse(fullCommandArray[1]);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return new ShowCommand(date);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(SHOW_EMPTY_DATE_MESSAGE);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.DONE.getType())) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new DoneCommand(Integer.parseInt(fullCommandArray[1]));"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.DELETE.getType())) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new DeleteCommand(Integer.parseInt(fullCommandArray[1]));"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (fullCommandArray[0].equals(CommandType.FIND.getType())) {"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String findKeywords \u003d fullCommand.replaceFirst(\"^find\", \"\");"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            findKeywords \u003d findKeywords.strip();"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new FindCommand(findKeywords.split(\" \"));"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return Parser.parseTasks(fullCommand);"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * A helper method to parse specifically a {@link ToDo}, an {@link Event} or a {@link Deadline}."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param fullCommand A String representing user input."
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The corresponding {@link Command}."
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @throws DukeException Thrown if there is error parsing the user input."
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static Command parseTasks(String fullCommand) throws DukeException {"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String type \u003d fullCommand.split(\" \")[0];"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String temp \u003d fullCommand.strip();"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (temp.equals(TaskType.TODO.getType())"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                || temp.equals(TaskType.DEADLINE.getType())"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                || temp.equals(TaskType.EVENT.getType())) {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidArgumentException("
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    \"☹ OOPS!!! The description of \""
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                            + (temp.equals(TaskType.EVENT.getType()) ? \"an \" : \"a \")"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                            + temp"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                            + \" cannot be empty.\");"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (temp.equals(\"\")) {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidTaskTypeException(EMPTY_TASK_TYPE_MESSAGE);"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (type \u003d\u003d null"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                || (!type.equals(TaskType.TODO.getType())"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \u0026\u0026 !type.equals(TaskType.DEADLINE.getType())"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                \u0026\u0026 !type.equals(TaskType.EVENT.getType()))) {"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new InvalidTaskTypeException(UNKNOWN_COMMAND_MESSAGE);"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String details \u003d fullCommand.substring(type.length());"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (type.equals(TaskType.TODO.getType())) {"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            ToDo t \u003d new ToDo(details.strip());"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new AddCommand(t);"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else if (type.equals(TaskType.DEADLINE.getType())) {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String[] detailsArray \u003d details.split(\"/by\");"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (detailsArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(DEADLINE_EMPTY_DATE_MESSAGE);"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                date \u003d LocalDate.parse(detailsArray[1].strip());"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(INVALID_DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Deadline d \u003d new Deadline(detailsArray[0].strip(), date);"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new AddCommand(d);"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String[] detailsArray \u003d details.split(\"/at\");"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (detailsArray.length \u003c\u003d 1) {"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(EVENT_EMPTY_DATE_MESSAGE);"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            LocalDate date;"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                date \u003d LocalDate.parse(detailsArray[1].strip());"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } catch (DateTimeParseException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(INVALID_DATE_FORMAT_MESSAGE);"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Event e \u003d new Event(detailsArray[0].strip(), date);"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return new AddCommand(e);"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 184
    }
  },
  {
    "path": "src/main/java/duke/Response.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * The Response class encapsulates the Response given by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Response {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private String message;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private boolean isError;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a Response object with the given message and isError flag."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param message Message of Duke\u0027s response."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param isError Flag to indicate if the input is invalid."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Response(String message, Boolean isError) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.message \u003d message;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.isError \u003d isError;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the message associated with this Response."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Message of the Response."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String getMessage() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the error status of the Response."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Whether the Response indicates an error."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean isErroneous() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return isError;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 38
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.ToDo;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * The Storage class handles the read and write of data from and to the local disk."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String STORAGE_INIT_MESSAGE \u003d"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"Storage space for you tasks has been initialized successfully.\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static final String STORAGE_ERROR_MESSAGE \u003d"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"Oops! Something went wrong when loading your tasks from storage.\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Data file path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final String filePath;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a Storage object with a file path."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param path File path to read from and write to."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Storage(String path) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        filePath \u003d path;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (!f.exists()) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                if (f.getParentFile().mkdirs() \u0026\u0026 f.createNewFile()) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    System.out.println(STORAGE_INIT_MESSAGE);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            System.out.println(STORAGE_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Reads saved data from the storage file and returns a list of {@link Task}s."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A list of {@link Task}s."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @throws IOException Exception when reading from storage file."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public List\u003cTask\u003e processStorage() throws IOException {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        File f \u003d new File(filePath);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Scanner sc \u003d new Scanner(f);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        List\u003cTask\u003e list \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        while (sc.hasNext()) {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String data \u003d sc.nextLine();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String[] dataArray \u003d data.split(\" \\\\| \");"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            switch (dataArray[1]) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            case \"T\":"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                list.add(new ToDo(dataArray[3], dataArray[2]));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            case \"E\":"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                list.add(new Event(dataArray[3], LocalDate.parse(dataArray[4]), dataArray[2]));"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            case \"D\":"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                list.add(new Deadline(dataArray[3], LocalDate.parse(dataArray[4]), dataArray[2]));"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            default:"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new IOException(\"Invalid data\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return list;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Writes a list of {@link Task}s to the storage file."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param list A list of {@link Task}s."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @throws IOException Exception when writing to storage file."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void writeData(List\u003cTask\u003e list) throws IOException {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        FileWriter fw \u003d new FileWriter(filePath);"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (Task t: list) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String toWrite \u003d \"\";"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            toWrite +\u003d (t.encode() + \"\\n\");"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fw.write(toWrite);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        fw.close();"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 97
    }
  },
  {
    "path": "src/main/java/duke/command/AddCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.StorageAccessException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Command} that will add a {@link Task} to the {@link TaskList}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class AddCommand extends Command {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String ADD_MESSAGE \u003d \"Got it. I\u0027ve added this task:\\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String STORAGE_EXCEPTION \u003d \"☹ OOPS!!! Something went wrong when saving the new task.\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The Task to be added."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final Task task;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new AddCommand object."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param task The {@link Task} to be added."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public AddCommand(Task task) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.task \u003d task;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to add the {@link Task} and save it to storage."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @throws DukeException Exception when writing data to storage."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String output \u003d ADD_MESSAGE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output +\u003d (task.toString() + \"\\n\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output +\u003d (\"Now you have \" + tasks.getSize() + (tasks.getSize() \u003e 1 ? \" tasks\" : \" task\") + \" in the list.\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            storage.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new StorageAccessException(STORAGE_EXCEPTION);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 53
    }
  },
  {
    "path": "src/main/java/duke/command/ByeCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ByeCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String BYE_MESSAGE \u003d \"Bye. Hope to see you again soon\";"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to print an exiting message."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return BYE_MESSAGE;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides isExit in {@link Command}."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return true to indicate an exiting instruction."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 31
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents the command that will be executed by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @throws DukeException Exception when the execution encounters an error at any stage."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public abstract String execute(TaskList tasks, Storage storage) throws DukeException;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a boolean to indicate if the Command is an exit command."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Boolean flag that is false by default."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 29
    }
  },
  {
    "path": "src/main/java/duke/command/CompletedCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Command} that will display all completed tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class CompletedCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to display all completed tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return tasks.showCompletedTasks();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 22
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.StorageAccessException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String ARGUMENT_EXCEPTION \u003d"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! The task index you give is not found.\";"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String DELETE_MESSAGE \u003d"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"Noted. I\u0027ve removed this task:\\n\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String STORAGE_EXCEPTION \u003d"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \"☹ OOPS!!! Something went wrong when removing the task from storage.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Index of {@link Task} to be deleted."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new DeleteCommand object."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param index The index of the {@link Task} to be deleted."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public DeleteCommand(int index) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to delete the {@link Task} and save the changes to storage."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) throws DukeException {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(ARGUMENT_EXCEPTION);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            String output \u003d DELETE_MESSAGE;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output +\u003d (\"\" + tasks.getTask(index) + \"\\n\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output +\u003d (\"Now you have \" + (tasks.getSize() - 1) + \" tasks in the list.\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            tasks.deleteTask(index);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            storage.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return output;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (InvalidArgumentException e) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            throw new StorageAccessException(STORAGE_EXCEPTION);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 59
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.InvalidArgumentException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String DONE_MESSAGE \u003d \"Nice! I\u0027ve marked this task as done:\\n\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String ALREADY_DONE_MESSAGE \u003d \"This task is already done!\\n\";"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Index of {@link Task} to be marked as completed."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final int index;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new DoneCommand object."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param index The index of the {@link Task} to be marked as completed."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public DoneCommand(int index) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.index \u003d index;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to mark the {@link Task} as completed and save the changes to storage."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (index \u003e tasks.getSize()) {"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                throw new InvalidArgumentException(\"☹ OOPS!!! The task index you give is not found.\");"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            if (tasks.markDone(index)) {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                String msg \u003d DONE_MESSAGE;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                msg +\u003d (tasks.getTask(index));"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                storage.writeData(tasks.getTasks());"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return msg;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                String msg \u003d ALREADY_DONE_MESSAGE;"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                msg +\u003d (tasks.getTask(index));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                return msg;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException | IOException e) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return e.getMessage();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 56
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Command} that will find all tasks containing a specific keyword."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The keyword to search for."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final String[] keywords;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a FindCommand with the provided keyword."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param keywords Provided keyword."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public FindCommand(String... keywords) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.keywords \u003d keywords;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to display all tasks containing the given keyword(s)."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return tasks.showMatchingTasks(keywords);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 36
    }
  },
  {
    "path": "src/main/java/duke/command/HelpCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class HelpCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final List\u003cString\u003e helpList;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public HelpCommand() {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Displays a simple user guide on the different commands."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String representing the user guide."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"Welcome to Duke\u0027s help utility!\\n\\n\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To list all tasks on your agenda, type `list`.\\n\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To terminate the application, type `bye`.\\n\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To add a new ToDo, type `todo {description}`.\\n\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To add a new Event, type `event {description} /at {yyyy-mm-dd}.\\n\");"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To add a new Deadline, type `deadline {description} /by {yyyy-mm-dd}.\\n\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To mark a task as completed, type `done {index}`.\\n\");"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To delete a task, type `delete {index}`.\\n\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To find all tasks containing certain keywords, type `find {keywords}`.\\n\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To list all completed tasks, type `completed`.\\n\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To list all pending tasks, type `pending`.\\n\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        helpList.add(\"To list all tasks that happen or due on a certain date, type `show {yyyy-mm-dd}`.\\n\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (String s : helpList) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(s);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 45
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Command} that will display all tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String NO_TASKS_MESSAGE \u003d \"No tasks on your agenda.\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String LIST_TASKS_MESSAGE \u003d \"Here are the tasks in your agenda:\";"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to display all tasks."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (tasks.getSize() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return NO_TASKS_MESSAGE;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return String.format(LIST_TASKS_MESSAGE + \"\\n%s\", tasks.listTasks());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 29
    }
  },
  {
    "path": "src/main/java/duke/command/PendingCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Encapsulates a {@link Command} that will display all pending tasks."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class PendingCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides execute in {@link Command}."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Executes the command to display all pending tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String of all pending tasks."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return tasks.showPendingTasks();"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 23
    }
  },
  {
    "path": "src/main/java/duke/command/ShowCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.task.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Encapsulates a {@link Command} that displays tasks happening on a particular date."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ShowCommand extends Command {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The date filter for the {@link Task}s."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final LocalDate date;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new ShowCommand object."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param date The date to query for."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public ShowCommand(LocalDate date) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Lists all the {@link Task}s that happen on or due at a certain date."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks The list of {@link Task}s."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param storage The Storage object of Duke."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String execute(TaskList tasks, Storage storage) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return tasks.showTasksOnDate(date);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 37
    }
  },
  {
    "path": "src/main/java/duke/exception/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents the possible exceptions that can be thrown from the {@link duke.Duke} package."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new DukeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param errorMessage The detail error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidArgumentException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents the possible exceptions that can be thrown when the arguments of a command are invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class InvalidArgumentException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new InvalidArgumentException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param errorMessage The detail error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public InvalidArgumentException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidCommandException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents the possible exceptions that can be thrown when the user input invalid commands."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class InvalidCommandException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new InvalidCommandException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param errorMessage The detail error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public InvalidCommandException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/InvalidTaskTypeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents the possible exceptions that can be thrown when the type of task in invalid."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class InvalidTaskTypeException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new InvalidTaskTypeException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param errorMessage The detail error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public InvalidTaskTypeException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 14
    }
  },
  {
    "path": "src/main/java/duke/exception/StorageAccessException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.exception;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents the possible exceptions that can be thrown when the programme fails to write to / read from storage."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class StorageAccessException extends DukeException {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new StorageAccessException object."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param errorMessage The detail error message."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public StorageAccessException(String errorMessage) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 14
    }
  },
  {
    "path": "src/main/java/duke/task/CommandType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public enum CommandType {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LIST(\"list\"),"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    SHOW(\"show\"),"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    BYE(\"bye\"),"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    DELETE(\"delete\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    DONE(\"done\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    ADD(\"add\"),"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    FIND(\"find\"),"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    PENDING(\"pending\"),"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    COMPLETED(\"completed\"),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    HELP(\"help\");"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Type of Command."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private CommandType(String type) {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a String representation of the {@link duke.command.Command} type."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String of the {@link duke.command.Command} type."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 32
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Task} that has a deadline."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"MMMM dd yyyy\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The date on which the {@link Task} is due."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private LocalDate endDate;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new Deadline object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The new Deadline is not completed by default."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the Deadline."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param endDate The due date of the Deadline."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Deadline(String description, LocalDate endDate) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new Deadline object based on completion status provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the Deadline."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param endDate The due date of the Deadline."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param completionStatus The completion status of the Deadline."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Deadline(String description, LocalDate endDate, String completionStatus) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description, completionStatus);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.endDate \u003d endDate;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides getType method in {@link Task}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Type of Deadline."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"D\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides getDate method in {@link Task}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The date of the Deadline."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LocalDate getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return endDate;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a String representation of a Deadline."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides toString in {@link Task}."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String representation of a Deadline."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + endDate.format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Task} that happens on a particular date."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String DATE_FORMAT \u003d \"MMMM dd yyyy\";"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The date on which the Event is happening."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private LocalDate date;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new Event object."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The new Event is not completed by default."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the Event."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param date The date on which the Event is happening."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Event(String description, LocalDate date) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new Event object based on completion status provided."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the Event."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param date The date on which the Event is happening."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param completionStatus The completion status of the Event."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Event(String description, LocalDate date, String completionStatus) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description, completionStatus);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.date \u003d date;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides getType method in {@link Task}."
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Type of Event."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"E\";"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides getDate method in {@link Task}."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The date of the Event."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LocalDate getDate() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return date;"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a String representation of the Event."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides toString in {@link Task}."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String representation of the Event."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + date.format(DateTimeFormatter.ofPattern(DATE_FORMAT)) + \")\";"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 71
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * The class that represents a task."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Keeps track of how many tasks have been created."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    protected static int numOfTasks;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The description of the Task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * A boolean value to indicate if the task is completed."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    protected boolean isCompleted;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * The id of a Task."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    protected final int id;"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new Task."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Assigns its id to be the current number of Tasks + 1."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description fo the task."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Task(String description) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.isCompleted \u003d false;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.id \u003d numOfTasks++;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new Task based on the completion status given."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Assigns its id to be the current number of Tasks + 1."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the Task."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param completionStatus The completion status of the Task."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    Task(String description, String completionStatus) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.isCompleted \u003d completionStatus.equals(\"1\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.id \u003d numOfTasks++;"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a tick: \u003ccode\u003e✓\u003c/code\u003e if the Task is completed, else a cross \u003ccode\u003e✘\u003c/code\u003e"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return An icon to indicate whether the Task is completed."
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getStatusIcon() {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return (isCompleted ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns if the Task is completed."
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Boolean to indicate if the Task is completed."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    boolean isTaskDone() {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return isCompleted;"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the type of the Task."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The type of the Task."
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    String getType() {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the date of the Task."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The date of the Task."
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    LocalDate getDate() {"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return null;"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the id of the Task."
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The id of the Task."
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    int getId() {"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return id;"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Marks the Task as completed."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void markAsDone() {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        isCompleted \u003d true;"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Encodes the Task to a String that will be saved in the storage."
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String encoding of the Task."
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String encode() {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return (getId()"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + getType()"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + (isCompleted ? \"1\" : \"0\")"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + \" | \""
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + description"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + (getDate() !\u003d null ? (\" | \" + getDate()) : \"\"));"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Checks if the Task contains any one of the keywords provided."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param keywords The keywords provided."
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return True if there is at least one keyword that is contained in the description."
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean includeKeywords(String... keywords) {"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return Arrays.stream(keywords).anyMatch(keyword -\u003e description.toLowerCase().contains(keyword));"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a String representation of the Task."
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String representation of the Task."
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + this.description;"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 142
    }
  },
  {
    "path": "src/main/java/duke/task/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.stream.Collectors;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * The TaskList class is a list of {@link Task}s."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * It supports the basic operations of manipulating tasks and answering queries."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String COMPLETED_TASKS_MESSAGE \u003d \"Here are the task(s) that have been completed: \\n\";"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String ALL_TASKS_COMPLETED_MESSAGE \u003d \"Congratulations! You have completed all your tasks!\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String MATCHING_TASKS_MESSAGE \u003d \"Here are the task(s) containing keyword(s): \";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String NO_TASKS_COMPLETED_MESSAGE \u003d \"☹ OOPS!!! You have not completed any task yet.\";"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String NO_MATCHING_TASKS_MESSAGE \u003d \"There are no tasks containing keyword: \";"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String PENDING_TASKS_MESSAGE \u003d \"Here are the task(s) that are pending: \\n\";"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String SHOW_TASKS_MESSAGE \u003d \"Here are the task(s)/deadline(s) happening on: \";"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String NO_TASKS_ON_DATE_MESSAGE \u003d \"There are no task/deadline happening on: \";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private List\u003cTask\u003e tasks;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates an empty list of {@link Task}s."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a new TaskList with a provided list of {@link Task}s."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param tasks A list of {@link Task}s."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public TaskList(List\u003cTask\u003e tasks) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.tasks \u003d tasks;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Adds a {@link Task} to the end of the list."
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param task A task to be added to the list."
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.add(task);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Marks a {@link Task} at a certain index (starting from 1) as completed."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param index The index of the task to be marked as completed."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public boolean markDone(int index) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        // Asserts that the index should not be out of bound."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assert index \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (tasks.get(index - 1).isTaskDone()) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.get(index - 1).markAsDone();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a {@link Task} in the list based on the given index."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param index Index of the task in the list."
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The task at the provided index."
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        // Asserts that the index should not be out of bound."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assert index \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return tasks.get(index - 1);"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the current number of {@link Task}s in the list."
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The current size of the list."
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public int getSize() {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return tasks.size();"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns the list of all the {@link Task}s in the current list."
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return The list of tasks."
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public List\u003cTask\u003e getTasks() {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return new ArrayList\u003c\u003e(tasks);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns all the {@link Task}s formatted properly."
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A formatted String of all the {@link Task}s."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String listTasks() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (int i \u003d 0; i \u003c tasks.size(); i++) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(i + 1)"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    .append(\".\")"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    .append(tasks.get(i))"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    .append(i \u003d\u003d tasks.size() - 1 ? \"\" : \"\\n\");"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns all the {@link Task}s that happen on or due at a specific date."
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param date The date to search for."
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A formatted String of all the tasks that happen on or due at the provided date."
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String showTasksOnDate(LocalDate date) {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        // Asserts that a date object is passed in."
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assert date !\u003d null;"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        List\u003cTask\u003e filteredTasks \u003d tasks.stream()"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                .filter(task -\u003e task.getDate() !\u003d null \u0026\u0026 task.getDate().equals(date)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (filteredTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return NO_TASKS_ON_DATE_MESSAGE"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    + date.format(DateTimeFormatter.ofPattern(\"MMMM d yyyy\"));"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output.append(SHOW_TASKS_MESSAGE).append(date).append(\"\\n\");"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(String.format(\"%d. %s\" + (i \u003d\u003d filteredTasks.size() - 1 ? \"\" : \"\\n\"),"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    i + 1, filteredTasks.get(i)));"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns all the {@link Task}s that have not been completed."
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A formatted String of all pending {@link Task}s."
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String showPendingTasks() {"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        List\u003cTask\u003e pendingTasks \u003d tasks.stream()"
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                .filter(task -\u003e !task.isTaskDone()).collect(Collectors.toList());"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return getFilteredTasksString(pendingTasks, ALL_TASKS_COMPLETED_MESSAGE, PENDING_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns all the {@link Task}s that have been completed."
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A formatted String of all completed {@link Task}s."
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String showCompletedTasks() {"
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        List\u003cTask\u003e completedTasks \u003d tasks.stream().filter(Task::isTaskDone).collect(Collectors.toList());"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return getFilteredTasksString(completedTasks, NO_TASKS_COMPLETED_MESSAGE, COMPLETED_TASKS_MESSAGE);"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private String getFilteredTasksString(List\u003cTask\u003e filteredTasks, String noTasksMessage, String returnMessage) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (filteredTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return noTasksMessage;"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output.append(returnMessage);"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (int i \u003d 0; i \u003c filteredTasks.size(); i++) {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(String.format(\"%d. %s\" + (i \u003d\u003d filteredTasks.size() - 1 ? \"\" : \"\\n\"),"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    i + 1, filteredTasks.get(i)));"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns all the {@link Task}s that contains the keyword."
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param keywords A variable number of Strings to search for."
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A formatted String of {@link Task}s with description that includes the given keywords."
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String showMatchingTasks(String... keywords) {"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        List\u003cTask\u003e matchingTasks \u003d tasks.stream()"
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                .filter(task -\u003e task.includeKeywords(keywords)).collect(Collectors.toList());"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (matchingTasks.size() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            return NO_MATCHING_TASKS_MESSAGE + Arrays.toString(keywords);"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        StringBuilder output \u003d new StringBuilder();"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        output.append(MATCHING_TASKS_MESSAGE).append(Arrays.toString(keywords)).append(\"\\n\");"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        for (int i \u003d 0; i \u003c matchingTasks.size(); i++) {"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            output.append(String.format(\"%d. %s\" + (i \u003d\u003d matchingTasks.size() - 1 ? \"\" : \"\\n\"),"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                    i + 1, matchingTasks.get(i)));"
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return output.toString();"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Delete a {@link Task} at a given index."
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param index The index of the {@link Task} to be deleted."
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        // Asserts that the index should not be out of bound."
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assert index \u003c\u003d tasks.size();"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.remove(index - 1);"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 207
    }
  },
  {
    "path": "src/main/java/duke/task/TaskType.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents all the possible types of a {@link Task}."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public enum TaskType {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    TODO(\"todo\"),"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    EVENT(\"event\"),"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    DEADLINE(\"deadline\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Type of task."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private String type;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a TaskType object."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param type Type of a {@link Task}."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private TaskType(String type) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.type \u003d type;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a String representation of the {@link Task} type."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String of the {@link Task} type."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return type;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 33
    }
  },
  {
    "path": "src/main/java/duke/task/ToDo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Represents a {@link Task} that needs to be done."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ToDo extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a ToDo that is by default not completed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the ToDo."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public ToDo(String description) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Instantiates a ToDo based on completion Status."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param description The description of the ToDo."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @param completionStatus The completion status of the ToDo."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public ToDo(String description, String completionStatus) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        super(description, completionStatus);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides getType method in {@link Task}."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return Type of ToDo."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String getType() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"T\";"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Returns a String representation of the ToDo."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Overrides toString in {@link Task}."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     *"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * @return A String representation of the ToDo."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 46
    }
  },
  {
    "path": "src/main/java/duke/ui/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.paint.Color;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * An example of a custom control using FXML."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * This control represents a dialog box consisting of an ImageView to represent the speaker\u0027s face and a label"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * containing text from the speaker."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String DUKE_DIALOG_COLOUR \u003d \"#D9D9D9\";"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String USER_DIALOG_COLOUR \u003d \"#95EC69\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private static final String DUKE_EXCEPTION_DIALOG_COLOUR \u003d \"#FFA199\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private ImageView displayPicture;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        dialog.setWrapText(true);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        displayPicture.setImage(img);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Circle circle \u003d new Circle(40);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        circle.setStroke(Color.WHITE);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        circle.setCenterX(displayPicture.getFitWidth() / 2);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        circle.setCenterY(displayPicture.getFitHeight() / 2);"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        displayPicture.setClip(circle);"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        setAlignment(Pos.CENTER_LEFT);"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private void setDialogColour(String colour) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String existingStyle \u003d this.dialog.styleProperty().getValue();"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        this.dialog.setStyle(String.format(\"%s -fx-background-color: %s;\", existingStyle, colour));"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        db.setAlignment(Pos.CENTER_RIGHT);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        db.setDialogColour(USER_DIALOG_COLOUR);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img, boolean isError) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        if (isError) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            db.setDialogColour(DUKE_EXCEPTION_DIALOG_COLOUR);"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            db.setDialogColour(DUKE_DIALOG_COLOUR);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        db.setFillHeight(true);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 87
    }
  },
  {
    "path": "src/main/java/duke/ui/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.ui;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.Response;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "/**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " * Controller for MainWindow. Provides the layout for the other controls."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": " */"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final String userImagePath \u003d \"/images/Judy.jpg\";"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private final String dukeImagePath \u003d \"/images/Nick.png\";"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(userImagePath));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(dukeImagePath));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Initialize the main window."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        dialogContainer.getChildren().add(DialogBox.getDukeDialog(Duke.greetUser(), dukeImage, false));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "     */"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Response response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                DialogBox.getDukeDialog(response.getMessage(), dukeImage, response.isErroneous())"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        );"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 60
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"Infinity\" maxWidth\u003d\"1.7976931348623157E308\" minHeight\u003d\"-Infinity\" prefWidth\u003d\"350.0\""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "         type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        \u003cInsets bottom\u003d\"10.0\" left\u003d\"10.0\" right\u003d\"5.0\" top\u003d\"10.0\"/\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003cLabel fx:id\u003d\"dialog\" styleClass\u003d\"dialog\" text\u003d\"Label\" textOverrun\u003d\"CLIP\"\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        \u003cpadding\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            \u003cInsets top\u003d\"5.0\" left\u003d\"5.0\" right\u003d\"5.0\" bottom\u003d\"5.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        \u003c/padding\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003c/Label\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003cImageView fx:id\u003d\"displayPicture\" fitHeight\u003d\"99.0\" fitWidth\u003d\"99.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\"/\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 19
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"640.0\""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/8.0.171\" xmlns:fx\u003d\"http://javafx.com/fxml/1\""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fx:controller\u003d\"duke.ui.MainWindow\"\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "               AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"597.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" AnchorPane.bottomAnchor\u003d\"1.0\"/\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 19
    }
  },
  {
    "path": "src/test/java/duke/ParserTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertTrue;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.fail;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.AddCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.ByeCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.CompletedCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.PendingCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.command.ShowCommand;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import duke.exception.DukeException;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class ParserTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseListCommand_lowercaseTest() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof ListCommand);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseListCommand_nonLowercaseTest() {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"list\");"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof ListCommand);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseListCommand_invalidArgumentExceptionThrow() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"list blah\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The list command does not take any additional argument(s).\", e.getMessage());"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseByeCommand() {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"bye\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof ByeCommand);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseByeCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"bye blah\");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The bye command does not take any additional argument(s).\", e.getMessage());"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDoneCommandTest() {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"done 1\");"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof DoneCommand);"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDoneCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"done\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The done command requires the index of a task.\", e.getMessage());"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseShowCommandTest() {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"show 2020-08-25\");"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof ShowCommand);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseShowCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"show\");"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The show command requires a date in yyyy-mm-dd.\", e.getMessage());"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDeleteCommandTest() {"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"delete 1\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof DeleteCommand);"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDeleteCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"delete\");"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The delete command requires the index of a task.\", e.getMessage());"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseTodoCommandTest() {"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"todo reading\");"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof AddCommand);"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 136,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 137,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseTodoCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 138,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 139,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"todo\");"
      },
      {
        "lineNumber": 140,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 141,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a todo cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 142,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 143,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 144,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 145,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 146,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseEventCommandTest() {"
      },
      {
        "lineNumber": 147,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 148,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"event reading /at 2020-08-24\");"
      },
      {
        "lineNumber": 149,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof AddCommand);"
      },
      {
        "lineNumber": 150,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 151,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 152,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 153,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 154,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 155,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 156,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseEventCommand_invalidArgumentExceptionThrown1() {"
      },
      {
        "lineNumber": 157,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 158,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"event\");"
      },
      {
        "lineNumber": 159,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 160,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of an event cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 161,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 162,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 163,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 164,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 165,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseEventCommand_invalidArgumentExceptionThrown2() {"
      },
      {
        "lineNumber": 166,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 167,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"event reading\");"
      },
      {
        "lineNumber": 168,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 169,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a date for the event.\", e.getMessage());"
      },
      {
        "lineNumber": 170,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 171,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 172,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 173,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 174,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseEventCommand_invalidArgumentExceptionThrown3() {"
      },
      {
        "lineNumber": 175,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 176,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"event reading /at\");"
      },
      {
        "lineNumber": 177,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 178,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a date for the event.\", e.getMessage());"
      },
      {
        "lineNumber": 179,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 180,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 181,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 182,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 183,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDeadlineCommandTest() {"
      },
      {
        "lineNumber": 184,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 185,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"deadline reading /by 2020-08-24\");"
      },
      {
        "lineNumber": 186,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof AddCommand);"
      },
      {
        "lineNumber": 187,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 188,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 189,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 190,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 191,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 192,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 193,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDeadlineCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 194,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 195,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"deadline\");"
      },
      {
        "lineNumber": 196,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 197,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The description of a deadline cannot be empty.\", e.getMessage());"
      },
      {
        "lineNumber": 198,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 199,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 200,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 201,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 202,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDeadlineCommand_invalidArgumentExceptionThrown2() {"
      },
      {
        "lineNumber": 203,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 204,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"deadline reading\");"
      },
      {
        "lineNumber": 205,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 206,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a due date for the deadline.\", e.getMessage());"
      },
      {
        "lineNumber": 207,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 208,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 209,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 210,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 211,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseDeadlineCommand_invalidArgumentExceptionThrown3() {"
      },
      {
        "lineNumber": 212,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 213,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"deadline reading /by\");"
      },
      {
        "lineNumber": 214,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 215,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! Please specify a due date for the deadline.\", e.getMessage());"
      },
      {
        "lineNumber": 216,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 217,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 218,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 219,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 220,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parsePendingCommandTest() {"
      },
      {
        "lineNumber": 221,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 222,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"pending\");"
      },
      {
        "lineNumber": 223,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof PendingCommand);"
      },
      {
        "lineNumber": 224,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 225,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 226,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 227,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 228,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 229,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 230,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parsePendingCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 231,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 232,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"pending 123\");"
      },
      {
        "lineNumber": 233,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 234,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The pending command does not take any additional argument(s).\", e.getMessage());"
      },
      {
        "lineNumber": 235,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 236,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 237,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 238,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 239,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseCompletedCommandTest() {"
      },
      {
        "lineNumber": 240,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 241,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"completed\");"
      },
      {
        "lineNumber": 242,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertTrue(c instanceof CompletedCommand);"
      },
      {
        "lineNumber": 243,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 244,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            fail();"
      },
      {
        "lineNumber": 245,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 246,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 247,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 248,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 249,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void parseCompletedCommand_invalidArgumentExceptionThrown() {"
      },
      {
        "lineNumber": 250,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 251,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            Command c \u003d Parser.parse(\"completed 123\");"
      },
      {
        "lineNumber": 252,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 253,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "            assertEquals(\"☹ OOPS!!! The completed command does not take any additional argument(s).\", e.getMessage());"
      },
      {
        "lineNumber": 254,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        }"
      },
      {
        "lineNumber": 255,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 256,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 256
    }
  },
  {
    "path": "src/test/java/duke/task/DeadlineTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class DeadlineTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void create_validDeadline_test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Deadline d \u003d new Deadline(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(\"[D][✘] iP Week 3 (by: August 27 2020)\", d.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void encode_incompleteDeadline_test() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Deadline d \u003d new Deadline(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(d.getId() + \" | D | 0 | iP Week 3 | 2020-08-27\", d.encode());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void encode_completedDeadline_test() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Deadline d \u003d new Deadline(\"iP Week 3\", date, \"1\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(d.getId() + \" | D | 1 | iP Week 3 | 2020-08-27\", d.encode());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 30
    }
  },
  {
    "path": "src/test/java/duke/task/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void create_validEvent_test() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event e \u003d new Event(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(\"[E][✘] iP Week 3 (at: August 27 2020)\", e.toString());"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void encode_incompleteEvent_test() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event e \u003d new Event(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(e.getId() + \" | E | 0 | iP Week 3 | 2020-08-27\", e.encode());"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void encode_completedEvent_test() {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event e \u003d new Event(\"iP Week 3\", date, \"1\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(e.getId() + \" | E | 1 | iP Week 3 | 2020-08-27\", e.encode());"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 30
    }
  },
  {
    "path": "src/test/java/duke/task/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void emptyTaskList_zeroSize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(0, tasks.getSize());"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void addTaskTest() {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event event \u003d new Event(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(1, tasks.getSize());"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(\"[E][✘] iP Week 3 (at: August 27 2020)\", tasks.getTask(1).toString());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void deleteTaskTest() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event event \u003d new Event(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(event);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.deleteTask(1);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(0, tasks.getSize());"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void showTasksOnDateTest() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        LocalDate date \u003d LocalDate.parse(\"2020-08-27\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event event1 \u003d new Event(\"iP Week 3\", date);"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event event2 \u003d new Event(\"Reading\", date);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        Event event3 \u003d new Event(\"Finals\", date);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        TaskList tasks \u003d new TaskList();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(event1);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(event2);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        tasks.addTask(event3);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(\"Here are the task(s)/deadline(s) happening on: 2020-08-27\\n\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + \"1. [E][✘] iP Week 3 (at: August 27 2020)\\n\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + \"2. [E][✘] Reading (at: August 27 2020)\\n\""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "                + \"3. [E][✘] Finals (at: August 27 2020)\", tasks.showTasksOnDate(date));"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 51
    }
  },
  {
    "path": "src/test/java/duke/task/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void encode_incompleteToDo_test() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Reading\");"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(todo.getId() + \" | T | 0 | Reading\", todo.encode());"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    void encode_completedToDo_test() {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        ToDo todo \u003d new ToDo(\"Reading\", \"1\");"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "        assertEquals(todo.getId() + \" | T | 1 | Reading\", todo.encode());"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 19
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline return book /by Sunday"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "event project meeting /at Mon 2-4pm"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline project 1 /by Thursday"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "delete 5"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "delete"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "blah"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "event project meeting /at 2020-08-24"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline iP week 3 /by 2020-08-27"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "deadline reading /by 2020-08-27"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "show 2020-08-27"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "todo reading book"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "find reading"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "list"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "pending"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "completed"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 27
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "# delete saved data from previous run"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "if [ -e \"./data/\" ]"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "  rm -rf data/"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "fi"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "if"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "  ! ("
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    find ../src/main/java -name \"*.java\" \u003e sources.txt"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "    javac -cp ../src -Xlint:none -d ../bin @sources.txt"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "  )"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "java -classpath ../bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 12,
      "-": 36
    }
  },
  {
    "path": "text-ui-test/sources.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/ui/DialogBox.java"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/ui/MainWindow.java"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/Storage.java"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/Parser.java"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/Main.java"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/TaskList.java"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/TaskType.java"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/Event.java"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/Task.java"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/CommandType.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/Deadline.java"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/task/ToDo.java"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/ByeCommand.java"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/DeleteCommand.java"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/ListCommand.java"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/PendingCommand.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/Command.java"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/AddCommand.java"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/FindCommand.java"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/CompletedCommand.java"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/DoneCommand.java"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/command/ShowCommand.java"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/Duke.java"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/Launcher.java"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/exception/InvalidTaskTypeException.java"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/exception/InvalidArgumentException.java"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/exception/InvalidCommandException.java"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/exception/StorageAccessException.java"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "Asthenosphere"
        },
        "content": "../src/main/java/duke/exception/DukeException.java"
      }
    ],
    "authorContributionMap": {
      "Asthenosphere": 29
    }
  }
]
