[
  {
    "path": "README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "# duke.Duke project template"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "This is a project template for a greenfield Java project. It\u0027s named after the Java mascot _Duke_. Given below are instructions on how to use it."
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "## Setting up in Intellij"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "Prerequisites: JDK 11, update Intellij to the most recent version."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "1. Open Intellij (if you are not in the welcome screen, click `File` \u003e `Close Project` to close the existing project dialog first)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "1. Set up the correct JDK version, as follows:"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Configure` \u003e `Structure for New Projects` and then `Project Settings` \u003e `Project` \u003e `Project SDK`"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If JDK 11 is listed in the drop down, select it. If it is not, click `New...` and select the directory where you installed JDK 11"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `OK`"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "1. Import the project into Intellij as follows:"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Click `Open or Import`."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": "   1. Select the project directory, and click `OK`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "   1. If there are any further prompts, accept the defaults."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "1. After the importing is complete, locate the `src/main/java/duke.Duke.java` file, right-click it, and choose `Run duke.Duke.main()`. If the setup is correct, you should see something like the below:"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "   Hello from"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "    ____        _        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "   |  _ \\ _   _| | _____ "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "   | | | | | | | |/ / _ \\"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": "   | |_| | |_| |   \u003c  __/"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "   |____/ \\__,_|_|\\_\\___|"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "   ```"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 2,
      "-": 24
    }
  },
  {
    "path": "build.gradle",
    "fileType": "gradle",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "plugins {"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027java\u0027"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027application\u0027"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027checkstyle\u0027"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "    id \u0027com.github.johnrengelman.shadow\u0027 version \u00275.1.0\u0027"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "repositories {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "    mavenCentral()"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "dependencies {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    testImplementation group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-api\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    testRuntimeOnly group: \u0027org.junit.jupiter\u0027, name: \u0027junit-jupiter-engine\u0027, version: \u00275.5.0\u0027"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    String javaFxVersion \u003d \u002711\u0027"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-base\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-controls\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-fxml\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027win\u0027"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027mac\u0027"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    implementation group: \u0027org.openjfx\u0027, name: \u0027javafx-graphics\u0027, version: javaFxVersion, classifier: \u0027linux\u0027"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "test {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    useJUnitPlatform()"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "    testLogging {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "        events \"passed\", \"skipped\", \"failed\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "        showExceptions true"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "-"
        },
        "content": "        exceptionFormat \"full\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "-"
        },
        "content": "        showCauses true"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "-"
        },
        "content": "        showStackTraces true"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "-"
        },
        "content": "        showStandardStreams \u003d false"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "application {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    mainClassName \u003d \"Launcher\""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "-"
        },
        "content": "shadowJar {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveBaseName \u003d \"duke\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "-"
        },
        "content": "    archiveClassifier \u003d null"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "-"
        },
        "content": "checkstyle {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    toolVersion \u003d \u00278.29\u0027"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "run{"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "-"
        },
        "content": "    standardInput \u003d System.in"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 17,
      "-": 44
    }
  },
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "T | 1 | eat | 2020-09-14"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "T | 0 | sleep"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "T | 1 | repeat | 2020-09-14"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 3
    }
  },
  {
    "path": "docs/README.md",
    "fileType": "md",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "# User Guide"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "## Features"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Listing all tasks: `list`](#list)"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Adding a todo task: `todo`](#todo)"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Adding a deadline task: `deadline`](#deadline)"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Adding an event task: `event`](#event)"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Deleting a task by index: `delete`](#delete)"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Locating tasks by name: `find`](#find)"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Marking a task as completed by index: `done`](#done)"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Displaying the statistics of recent activities: `stats`](#stats)"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### [Exiting the program: `bye`](#bye)"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "## Usage"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"list\"\u003e\u003c/a\u003e Listing all tasks: `list`"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Shows a list of all tasks in Dude."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `list`"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Shows a list of all tasks in Dude and their respective indexes."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"todo\"\u003e\u003c/a\u003e Adding a todo task: `list`"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Adds a todo task to Dude."
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `todo NAME`"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Adds a todo task with the given `NAME`."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `todo eat`"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `todo sleep`"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"deadline\"\u003e\u003c/a\u003e Adding a deadline task: `deadline`"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Adds a deadline task to Dude."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `deadline NAME /by DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Adds a deadline with the given `NAME`."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* The day and month can be single digits (Example: `1/5/2020`)."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `deadline lose weight /by 01/01/2021 0000`"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `deadline celebrate christmas /by 25/12/2020 0000`"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"event\"\u003e\u003c/a\u003e Adding an event task: `event`"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Adds an event task to Dude."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `event NAME /at DD/MM/YYYY HHMM`"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Adds an event with the given `NAME`."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* The day and month can be single digits (Example: `1/5/2020`)."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `event new year celebration /at 01/01/2021 0000`"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `event exams /at 01/02/2021 0800`"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"delete\"\u003e\u003c/a\u003e Deleting a task by index: `delete`"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Deletes the specific task from Dude."
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `delete INDEX`"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Deletes the task at the specified `INDEX`."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* The index of a task can be found by using the [`list`](#list) command."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `delete 1`"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `delete 2`"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"find\"\u003e\u003c/a\u003e Locating tasks by name: `find`"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Finds tasks whose names contains any of the given keywords in Dude."
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `find KEYWORD`"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Finds tasks whose names contains `KEYWORD`."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `find homework`"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `find meaning in life`"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"done\"\u003e\u003c/a\u003e Marking a task as completed by index: `done`"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Marks the specific task as completed in Dude."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `done INDEX`"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* Marks the task at the specified `INDEX` as completed."
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* The index of a task can be found by using the [`list`](#list) command."
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Examples:"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `done 1`"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "* `done 2`"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"stats\"\u003e\u003c/a\u003e Displaying the statistics of recent activities: `stats`"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Displays the number of tasks completed in the past 7 days."
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `stats`"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "### \u003ca id\u003d\"bye\"\u003e\u003c/a\u003e Exiting the program: `bye`"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Exits the program."
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "Format: `bye`"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 89,
      "-": 14
    }
  },
  {
    "path": "src/main/java/DialogBox.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.Collections;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.collections.FXCollections;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.collections.ObservableList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.geometry.Pos;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.Node;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.control.Label;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.layout.HBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.paint.ImagePattern;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.shape.Circle;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.text.Font;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.text.FontWeight;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class DialogBox extends HBox {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Label dialog;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Circle displayPicture;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private DialogBox(String text, Image img) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(MainWindow.class.getResource(\"/view/DialogBox.fxml\"));"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fxmlLoader.setController(this);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fxmlLoader.setRoot(this);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fxmlLoader.load();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        dialog.setText(text);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        dialog.setStyle(\"-fx-border-radius: 10 10 0 10;\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"-fx-background-radius: 10 10 0 10;\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"-fx-background-color: tomato;\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"-fx-padding:  5\");"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        dialog.setFont(Font.font(\"Courier New\", FontWeight.BOLD, 12));"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        displayPicture.setFill(new ImagePattern(img));"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Flips the dialog box such that the ImageView is on the left and text on the right."
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void flip() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        ObservableList\u003cNode\u003e tmp \u003d FXCollections.observableArrayList(this.getChildren());"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Collections.reverse(tmp);"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        getChildren().setAll(tmp);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        getChildren().get(1).setStyle(\"-fx-border-radius: 10 10 10 0;\""
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"-fx-background-radius: 10 10 10 0;\""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"-fx-background-color: tomato;\""
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"-fx-padding:  5\");"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        setAlignment(Pos.TOP_LEFT);"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static DialogBox getUserDialog(String text, Image img) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return new DialogBox(text, img);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static DialogBox getDukeDialog(String text, Image img) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        var db \u003d new DialogBox(text, img);"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        db.flip();"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return db;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 66
    }
  },
  {
    "path": "src/main/java/Launcher.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Launcher {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Application.launch(Main.class, args);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 7
    }
  },
  {
    "path": "src/main/java/Main.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.application.Application;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.fxml.FXMLLoader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.Scene;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.stage.Stage;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Program to initialise Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Main extends Application {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Duke duke \u003d new Duke();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void start(Stage stage) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FXMLLoader fxmlLoader \u003d new FXMLLoader(Main.class.getResource(\"/view/MainWindow.fxml\"));"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            AnchorPane ap \u003d fxmlLoader.load();"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Scene scene \u003d new Scene(ap);"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            stage.setScene(scene);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().setDuke(duke);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fxmlLoader.\u003cMainWindow\u003egetController().greet();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            stage.show();"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            e.printStackTrace();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 30
    }
  },
  {
    "path": "src/main/java/MainWindow.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.animation.KeyFrame;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.animation.Timeline;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.application.Platform;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.fxml.FXML;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.control.Button;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.control.ScrollPane;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.control.TextField;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.image.Image;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.image.ImageView;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.layout.AnchorPane;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.scene.layout.VBox;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import javafx.util.Duration;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class MainWindow extends AnchorPane {"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private ScrollPane scrollPane;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private VBox dialogContainer;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private TextField userInput;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Button sendButton;"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private ImageView background;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Duke duke;"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Image userImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaUser.png\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Image dukeImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DaDuke.png\"));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Image posterImage \u003d new Image(this.getClass().getResourceAsStream(\"/images/DukeBackground.png\"));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Timeline exitWithDelay \u003d new Timeline(new KeyFrame(Duration.millis(2000), ae -\u003e Platform.exit()));"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates the initial dialog box that greets the user."
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Sets the background."
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void initialize() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        background.setImage(posterImage);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        scrollPane.setStyle(\"-fx-background: transparent; -fx-background-color: transparent; \");"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        scrollPane.vvalueProperty().bind(dialogContainer.heightProperty());"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void setDuke(Duke d) {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        duke \u003d d;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates two dialog boxes, one echoing user input and the other containing Duke\u0027s reply and then appends them to"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * the dialog container. Clears the user input after processing."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @FXML"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private void handleUserInput() {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String input \u003d userInput.getText();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String response \u003d duke.getResponse(input);"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                DialogBox.getUserDialog(input, userImage),"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                DialogBox.getDukeDialog(response, dukeImage)"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        userInput.clear();"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (duke.isExit()) {"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            exitWithDelay.play();"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            userInput.setDisable(true);"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            sendButton.setDisable(true);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates one dialog box that contains Duke\u0027s greeting message."
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void greet() {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String greeting \u003d duke.getGreeting();"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        dialogContainer.getChildren().addAll("
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                DialogBox.getDukeDialog(greeting, dukeImage)"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        );"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 79
    }
  },
  {
    "path": "src/main/java/duke/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a friendly personal assistant that helps keep track of tasks to be done."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Duke has been renamed to Dude."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private final String path \u003d \"./data/duke.txt\";"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Storage storage;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private Parser parser;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private boolean isExit;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Initializes duke."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Duke() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            taskList \u003d new TaskList(storage.getTasks());"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            parser \u003d new Parser();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            isExit \u003d false;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(e.getMessage());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String listen(String input) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Command command \u003d parser.parse(input);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (command instanceof ExitCommand) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                isExit \u003d true;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            command.execute(storage, taskList);"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String response \u003d Ui.getMessages();"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String response \u003d e.getMessage();"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return response;"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String getGreeting() {"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Hello! My name is Dude.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"What can I do for you?\");"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return Ui.getMessages();"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String getResponse(String input) {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return listen(input);"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isExit() {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return isExit;"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 56,
      "-": 3
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates an exception that is thrown by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public DukeException(String message) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(message);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 10
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.Command;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.DeadlineCommand;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.DeleteCommand;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.DoneCommand;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.EventCommand;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.ExitCommand;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.FindCommand;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.ListCommand;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.StatsCommand;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.TodoCommand;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.command.UnknownCommand;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a parser that breaks down user inputs to generate commands to be executed by Dude."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String FIND_SYNTAX_ERROR_MESSAGE \u003d \"Error! Note the syntax: find [keyword]\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String DONE_SYNTAX_ERROR_MESSAGE \u003d \"Error! Note the syntax: done [task number]\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String TODO_SYNTAX_ERROR_MESSAGE \u003d \"Error! Note the syntax: todo [description]\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String DEADLINE_SYNTAX_ERROR_MESSAGE \u003d \"Error! Note the syntax:\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                                                                + \"deadline [description] /by [date]\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String EVENT_SYNTAX_ERROR_MESSAGE \u003d \"Error! Note the syntax: event [description] /at [date]\";"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static final String DELETE_SYNTAX_ERROR_MESSAGE \u003d \"Error! Note the syntax: delete [task number]\";"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Parses user inputs to generate commands."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param input Input by user."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return A command object that will be executed by Duke."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Command parse(String input) throws DukeException {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String[] inputBreakdown \u003d input.split(\" \", 2);"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String command \u003d inputBreakdown[0];"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        switch (command) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"list\"):"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new ListCommand();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"stats\"):"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new StatsCommand();"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"find\"):"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (inputBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(FIND_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert inputBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String keyword \u003d inputBreakdown[1];"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new FindCommand(keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"done\"):"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (inputBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(DONE_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert inputBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String doneTaskNumber \u003d inputBreakdown[1];"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new DoneCommand(doneTaskNumber);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"todo\"):"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (inputBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(TODO_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert inputBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String todoDescription \u003d inputBreakdown[1];"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new TodoCommand(todoDescription);"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"deadline\"):"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (inputBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(DEADLINE_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert inputBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String[] deadlineBreakdown \u003d inputBreakdown[1].split(\" /by \", 2);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (deadlineBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(DEADLINE_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert deadlineBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String deadlineDescription \u003d deadlineBreakdown[0];"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String by \u003d deadlineBreakdown[1];"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new DeadlineCommand(deadlineDescription, parseDateTime(by));"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"event\"):"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (inputBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(EVENT_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert inputBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String[] eventBreakdown \u003d inputBreakdown[1].split(\" /at \", 2);"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (eventBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(EVENT_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert eventBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String eventDescription \u003d eventBreakdown[0];"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String at \u003d eventBreakdown[1];"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new EventCommand(eventDescription, parseDateTime(at));"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"delete\"):"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (inputBreakdown.length \u003c 2) {"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                throw new DukeException(DELETE_SYNTAX_ERROR_MESSAGE);"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assert inputBreakdown.length \u003e 1;"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String deleteTaskNumber \u003d inputBreakdown[1];"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new DeleteCommand(deleteTaskNumber);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        case (\"bye\"):"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new ExitCommand();"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        default:"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return new UnknownCommand();"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private LocalDateTime parseDateTime(String input) throws DukeException {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String pattern \u003d \"d/M/yyyy HHmm\";"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            DateTimeFormatter formatter \u003d DateTimeFormatter.ofPattern(pattern);"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return LocalDateTime.parse(input, formatter);"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (Exception e) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error! Note the date format: \" + pattern);"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 113
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a storage that manages the database used by Duke."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * It is initialised using a path that leads to a .txt file."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * A task is saved as a string with various data separated by the \u0027|\u0027 character."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * It supports the uploading and retrieval of tasks to and from the database."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private File file;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Locates the .txt file at the given path."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates the file if it does not exists."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param path Path to locate or create the .txt file."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Storage(String path) throws DukeException {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.file \u003d new File(path);"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (file.getParentFile() !\u003d null) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                file.getParentFile().mkdirs();"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            file.createNewFile();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error creating or locating storage.\");"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Saves all tasks in a list of tasks to the database."
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param tasks A list of tasks to be saved to the database."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveTasks(List\u003cTask\u003e tasks) throws DukeException {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            for (Task task : tasks) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                fileWriter.write(task.toData() + \"\\n\");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error saving tasks to storage.\");"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Retrieves all tasks that is being stored in the database as a list of tasks."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return A list of all tasks that is being stored in the database."
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public List\u003cTask\u003e getTasks() throws DukeException {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            while (input !\u003d null) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                String[] entryBreakdown \u003d input.split(\" \\\\| \");"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                if (entryBreakdown.length \u003c 3) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    throw new DukeException(\"File corrupted\");"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                if (!(entryBreakdown[1].equals(\"0\") || entryBreakdown[1].equals(\"1\"))) {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    throw new DukeException(\"File corrupted\");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                String type \u003d entryBreakdown[0];"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                boolean isDone \u003d entryBreakdown[1].equals(\"1\");"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                String description \u003d entryBreakdown[2];"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                Task task;"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                switch (type) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                case (\"T\"):"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        assert entryBreakdown.length \u003e 3;"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String doneDate \u003d entryBreakdown[3];"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        task \u003d new Todo(description, LocalDate.parse(doneDate));"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        task \u003d new Todo(description);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                case (\"D\"):"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    if (entryBreakdown.length \u003c 4) {"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        throw new DukeException(\"File corrupted\");"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        assert entryBreakdown.length \u003e 4;"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String doneDate \u003d entryBreakdown[3];"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String by \u003d entryBreakdown[4];"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        task \u003d new Deadline(description, LocalDateTime.parse(by), LocalDate.parse(doneDate));"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String by \u003d entryBreakdown[3];"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        task \u003d new Deadline(description, LocalDateTime.parse(by));"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                case (\"E\"):"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    if (entryBreakdown.length \u003c 4) {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        throw new DukeException(\"File corrupted\");"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    if (isDone) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        assert entryBreakdown.length \u003e 4;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String doneDate \u003d entryBreakdown[3];"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String at \u003d entryBreakdown[4];"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        task \u003d new Event(description, LocalDateTime.parse(at), LocalDate.parse(doneDate));"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        String at \u003d entryBreakdown[3];"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                        task \u003d new Event(description, LocalDateTime.parse(at));"
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    break;"
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                default:"
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                    throw new DukeException(\"File corrupted.\");"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                }"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 130,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return tasks;"
      },
      {
        "lineNumber": 131,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 132,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error retrieving tasks from storage.\");"
      },
      {
        "lineNumber": 133,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 134,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 135,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 135
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a list of tasks."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * It generates messages to inform users of its operations."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private List\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public TaskList(List\u003cTask\u003e taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Displays all the tasks in the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void listAllTasks() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int size \u003d taskList.size();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Ui.addMessage(\"There are no tasks in your list.\");"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Ui.addMessage(\"Here are the tasks in your list:\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                String task \u003d String.format(\"%d. %s\", taskNumber, taskList.get(i));"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                Ui.addMessage(task);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param task Task to be added."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int size \u003d taskList.size();"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String taskWord \u003d (size \u003e 1 ? \"tasks\" : \"task\");"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Got it. I\u0027ve added this task:\");"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"  \" + task);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Now you have \" + size + \" \" + taskWord + \" in the list.\");"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Deletes a task with the given index in the list of tasks."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param index Index of task to be deleted."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.remove(index);"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Got it. I\u0027ve removed this task:\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"  \" + task);"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Marks a task with the given index in the list of tasks as done."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param index Index of task to be marked as done."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void doneTask(int index) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Task task \u003d taskList.get(index);"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        task.markAsDone();"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Nice! I\u0027ve marked this task as done:\");"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"  \" + task);"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Finds and displays tasks whose description contains the given keywords."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param keyword Keyword to be used as for searching."
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void findTasks(String keyword) {"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Task task : taskList) {"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (task.contains(keyword)) {"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                tasks.add(task);"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int size \u003d tasks.size();"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Ui.addMessage(\"Sorry, I couldn\u0027t find any matching tasks.\");"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Ui.addMessage(\"Here are the matching tasks in your list:\");"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                String task \u003d String.format(\"%d. %s\", taskNumber, tasks.get(i));"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                Ui.addMessage(task);"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Displays all tasks that were completed in the past 7 days."
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void displayStatistics() {"
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        List\u003cTask\u003e doneTasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (Task task: taskList) {"
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (task.isDoneThisWeek(LocalDate.now())) {"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                doneTasks.add(task);"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        int size \u003d doneTasks.size();"
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (size \u003d\u003d 0) {"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Ui.addMessage(\"You did not complete any task in the past 7 days.\");"
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String taskWord \u003d size \u003c\u003d 1 ? \"task\" : \"tasks\";"
      },
      {
        "lineNumber": 113,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Ui.addMessage(\"You completed \" + size + \" \" + taskWord + \" in the past 7 days:\");"
      },
      {
        "lineNumber": 114,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            for (int i \u003d 0; i \u003c size; i++) {"
      },
      {
        "lineNumber": 115,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                int taskNumber \u003d i + 1;"
      },
      {
        "lineNumber": 116,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                String task \u003d String.format(\"%d. %s\", taskNumber, doneTasks.get(i));"
      },
      {
        "lineNumber": 117,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                Ui.addMessage(task);"
      },
      {
        "lineNumber": 118,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 119,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 120,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 121,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 122,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 123,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Retrieves the list of tasks."
      },
      {
        "lineNumber": 124,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return List of task."
      },
      {
        "lineNumber": 125,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 126,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public List\u003cTask\u003e getTask() {"
      },
      {
        "lineNumber": 127,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 128,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 129,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 129
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a messenger that displays messages on the user interface."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private static List\u003cString\u003e messages \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static void addMessage(String message) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        messages.add(message);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static String getMessages() {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        StringBuilder stringBuilder \u003d new StringBuilder();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        for (String message : messages) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            stringBuilder.append(message).append(\"\\n\");"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        messages \u003d new ArrayList\u003c\u003e(); // clear all messages"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String message \u003d stringBuilder.toString();"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        System.out.println(message);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return message;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Prints the logo."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public static void printLogo() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String logo \u003d \"\\t    ,---,                                       \\n\""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t  .\u0027  .\u0027 `\\\\                     ,---,              \\n\""
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t,---.\u0027     \\\\          ,--,    ,---.\u0027|              \\n\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t|   |  .`\\\\  |       ,\u0027_ /|    |   | :              \\n\""
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t:   : |  \u0027  |  .--. |  | :    |   | |   ,---.       \\n\""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t|   \u0027 \u0027  ;  :,\u0027_ /| :  . |  ,--.__| |  /     \\\\     \\n\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t\u0027   | ;  .  ||  \u0027 | |  . . /   ,\u0027   | /    /  |     \\n\""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t|   | :  |  \u0027|  | \u0027 |  | |.   \u0027  /  |.    \u0027 / |     \\n\""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t\u0027   : | /  ; :  | : ;  ; |\u0027   ; |:  |\u0027   ;   /|     \\n\""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t|   | \u0027` ,/  \u0027  :  `--\u0027   \\\\   | \u0027/  \u0027\u0027   |  / |    \\n\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t;   :  .\u0027    :  ,      .-./   :    :||   :    |     \\n\""
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t|   ,.\u0027       `--`----\u0027    \\\\   \\\\  /   \\\\   \\\\  /  \\n\""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                + \"\\t\u0027---\u0027                       `----\u0027     `----\u0027       \\n\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        System.out.println(logo);"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 46
    }
  },
  {
    "path": "src/main/java/duke/command/Command.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a command to be executed by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public abstract class Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Executes the command."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param storage Storage where data will be uploaded and retrieved to and from."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param taskList List of tasks to be manipulated."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @throws DukeException"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public abstract void execute(Storage storage, TaskList taskList) throws DukeException;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 18
    }
  },
  {
    "path": "src/main/java/duke/command/DeadlineCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Deadline;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a deadline command to be executed by Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class DeadlineCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deadline task to be added to both the TaskList and Storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public DeadlineCommand(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.addTask(new Deadline(description, by));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        storage.saveTasks(taskList.getTask());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 33
    }
  },
  {
    "path": "src/main/java/duke/command/DeleteCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a delete command to be executed by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class DeleteCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Deletes the task with the given task number in the TaskList and updates the changes in the Storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param taskNumber"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public DeleteCommand(String taskNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            int index \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            taskList.deleteTask(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            storage.saveTasks(taskList.getTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error! The task number you entered does not exist.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error! Please enter a valid task number.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 34
    }
  },
  {
    "path": "src/main/java/duke/command/DoneCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a done command to be executed by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class DoneCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String taskNumber;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Marks the task with the given task number in the TaskList as done and updates the changes in the Storage."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param taskNumber Task number of the task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public DoneCommand(String taskNumber) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.taskNumber \u003d taskNumber;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            int index \u003d Integer.parseInt(taskNumber) - 1;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            taskList.doneTask(index);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            storage.saveTasks(taskList.getTask());"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IndexOutOfBoundsException e) {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error! The task number you entered does not exist.\");"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            throw new DukeException(\"Error! Please enter a valid task number.\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 34
    }
  },
  {
    "path": "src/main/java/duke/command/EventCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Event;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates an event command to be executed by Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class EventCommand extends Command {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a event task to be added to both the TaskList and Storage."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param at Date of the event."
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public EventCommand(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.addTask(new Event(description, at));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        storage.saveTasks(taskList.getTask());"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 33
    }
  },
  {
    "path": "src/main/java/duke/command/ExitCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a exit command to be executed by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Exits the application."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ExitCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ExitCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Bye. Hope to see you again soon!\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 20
    }
  },
  {
    "path": "src/main/java/duke/command/FindCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a find command to be executed by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class FindCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String keyword;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Finds and displays tasks containing the specific keywords from the TaskList."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param keyword Keyword to be used as reference for searching."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public FindCommand(String keyword) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.keyword \u003d keyword;"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.findTasks(keyword);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 26
    }
  },
  {
    "path": "src/main/java/duke/command/ListCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a list command to be executed by Duke."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Prints all the tasks that is in the TaskList."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class ListCommand extends Command {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public ListCommand() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.listAllTasks();"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 19
    }
  },
  {
    "path": "src/main/java/duke/command/StatsCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class StatsCommand extends Command {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public StatsCommand() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.displayStatistics();"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 16
    }
  },
  {
    "path": "src/main/java/duke/command/TodoCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a todo command to be executed by Duke."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class TodoCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String description;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a todo task to be added to both the TaskList and Storage."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public TodoCommand(String description) {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) throws DukeException {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        taskList.addTask(new Todo(description));"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        storage.saveTasks(taskList.getTask());"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 28
    }
  },
  {
    "path": "src/main/java/duke/command/UnknownCommand.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates an unknown command to be executed by Duke."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Displays a message to inform the user that the input is unrecognised."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class UnknownCommand extends Command {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public UnknownCommand() {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super();"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute(Storage storage, TaskList taskList) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        Ui.addMessage(\"Sorry, but I don\u0027t know what that means \\u2639\");"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 20
    }
  },
  {
    "path": "src/main/java/duke/task/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a task that has a deadline."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * The deadline is denoted by a LocalDateTime object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private LocalDateTime by;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deadline task object with the given description and deadline."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Deadline(String description, LocalDateTime by) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a deadline task object that has been completed on the given done date"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * with the given description and deadline."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param by Deadline of the task."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param doneDate Date of completion."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Deadline(String description, LocalDateTime by, LocalDate doneDate) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(description, doneDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.by \u003d by;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return \"D | \" + super.toData() + \" | \" + by;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \"h)\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates an event that has a date."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * The date is denoted by a LocalDateTime object."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private LocalDateTime at;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a event task object with the given description and date."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param at Date of the event."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Event(String description, LocalDateTime at) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a event task object that has been completed on the given done date"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * with the given description and date."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the event."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param at Date of the event."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param doneDate Date of completion."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Event(String description, LocalDateTime at, LocalDate doneDate) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(description, doneDate);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.at \u003d at;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return \"E | \" + super.toData() + \" | \" + at;"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + at.format(DateTimeFormatter.ofPattern(\"MMM d yyyy HHmm\")) + \"h)\";"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 45
    }
  },
  {
    "path": "src/main/java/duke/task/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.temporal.ChronoUnit;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a task to be completed by the user."
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Contains a string description and a boolean representation of whether the task has been completed."
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public abstract class Task {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    protected LocalDate doneDate;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a task with the given description."
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        isDone \u003d false;"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        doneDate \u003d null;"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Creates a task that has been completed on the given doneDate with the given description."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param description Description of the task."
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param doneDate Date of completion."
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Task(String description, LocalDate doneDate) {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        this.doneDate \u003d doneDate;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    private String getStatusIcon() {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Marks a task as done by setting the boolean isDone to true."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        isDone \u003d true;"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        doneDate \u003d LocalDate.now();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean contains(String keyword) {"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return description.contains(keyword);"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns the string representation of the task that is recognised by the Storage class."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * It is used to represent a task in the database."
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return String representation of the task."
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return 1 + \" | \" + description + \" | \" + doneDate;"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } else {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            return 0 + \" | \" + description;"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * Returns true if the task has been completed within 7 days before the given date."
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @param date Date of reference."
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     * @return True if the task has been completed within 7 days before the given date."
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "     */"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public boolean isDoneThisWeek(LocalDate date) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        if (isDone) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            long daysApart \u003d ChronoUnit.DAYS.between(doneDate, date);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            if (daysApart \u003c\u003d 7) {"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                return true;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return false;"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        String statusIcon \u003d getStatusIcon();"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return String.format(\"[%s] %s\", statusIcon, description);"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 85
    }
  },
  {
    "path": "src/main/java/duke/task/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.task;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDate;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "/**"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " * Encapsulates a todo task."
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": " */"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public Todo(String description, LocalDate doneDate) {"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        super(description, doneDate);"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toData() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return \"T | \" + super.toData();"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 26
    }
  },
  {
    "path": "src/main/resources/view/DialogBox.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.geometry.Insets?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.control.Label?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.layout.HBox?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.shape.Circle?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cfx:root alignment\u003d\"TOP_RIGHT\" maxHeight\u003d\"1.7976931348623157E308\" maxWidth\u003d\"1.7976931348623157E308\" prefWidth\u003d\"400.0\" type\u003d\"javafx.scene.layout.HBox\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\"\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cLabel fx:id\u003d\"dialog\" text\u003d\"Label\" wrapText\u003d\"true\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \u003cInsets left\u003d\"10.0\" right\u003d\"10.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "         \u003c/HBox.margin\u003e\u003c/Label\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "      \u003cCircle fx:id\u003d\"displayPicture\" fill\u003d\"#1f93ff00\" radius\u003d\"50.0\" stroke\u003d\"TRANSPARENT\" strokeType\u003d\"INSIDE\"\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "         \u003cHBox.margin\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \u003cInsets /\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "         \u003c/HBox.margin\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "      \u003c/Circle\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cpadding\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cInsets bottom\u003d\"15.0\" left\u003d\"5.0\" right\u003d\"5.0\" top\u003d\"15.0\" /\u003e"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003c/padding\u003e"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c/fx:root\u003e"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 23
    }
  },
  {
    "path": "src/main/resources/view/MainWindow.fxml",
    "fileType": "fxml",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?xml version\u003d\"1.0\" encoding\u003d\"UTF-8\"?\u003e"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.control.Button?\u003e"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.control.ScrollPane?\u003e"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.control.TextField?\u003e"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.image.ImageView?\u003e"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.layout.AnchorPane?\u003e"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c?import javafx.scene.layout.VBox?\u003e"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003cAnchorPane maxHeight\u003d\"-Infinity\" maxWidth\u003d\"-Infinity\" minHeight\u003d\"-Infinity\" minWidth\u003d\"-Infinity\" prefHeight\u003d\"600.0\" prefWidth\u003d\"400.0\" xmlns\u003d\"http://javafx.com/javafx/11.0.1\" xmlns:fx\u003d\"http://javafx.com/fxml/1\" fx:controller\u003d\"MainWindow\"\u003e"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003cchildren\u003e"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cTextField fx:id\u003d\"userInput\" layoutY\u003d\"558.0\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"324.0\" AnchorPane.bottomAnchor\u003d\"1.0\" /\u003e"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cButton fx:id\u003d\"sendButton\" layoutX\u003d\"324.0\" layoutY\u003d\"558.0\" mnemonicParsing\u003d\"false\" onAction\u003d\"#handleUserInput\" prefHeight\u003d\"41.0\" prefWidth\u003d\"76.0\" text\u003d\"Send\" /\u003e"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "      \u003cImageView fx:id\u003d\"background\" fitHeight\u003d\"554.0\" fitWidth\u003d\"400.0\" pickOnBounds\u003d\"true\" preserveRatio\u003d\"true\" /\u003e"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003cScrollPane fx:id\u003d\"scrollPane\" hbarPolicy\u003d\"NEVER\" hvalue\u003d\"1.0\" prefHeight\u003d\"557.0\" prefWidth\u003d\"400.0\" vvalue\u003d\"1.0\"\u003e"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \u003ccontent\u003e"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "                \u003cVBox fx:id\u003d\"dialogContainer\" prefHeight\u003d\"552.0\" prefWidth\u003d\"388.0\" /\u003e"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            \u003c/content\u003e"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        \u003c/ScrollPane\u003e"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    \u003c/children\u003e"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "\u003c/AnchorPane\u003e"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 21
    }
  },
  {
    "path": "src/test/data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "D | 0 | test | 2007-12-03T10:15:30"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 1
    }
  },
  {
    "path": "src/test/java/StorageTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.FileWriter;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Todo;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class StorageTest {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void saveTasks_normalInput_savedCorrectly() {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String path \u003d \"../data/duke.txt\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Storage storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            tasks.add(new Todo(\"test\"));"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            storage.saveTasks(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assertEquals(input, \"T | 0 | test\");"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(\"Error creating test case.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(\"Error creating test case.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void getTasks_normalFile_getCorrectly() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String path \u003d \"../data/duke.txt\";"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Storage storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FileWriter fileWriter \u003d new FileWriter(file);"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fileWriter.write(\"T | 0 | test\\n\");"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            fileWriter.close();"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            List\u003cTask\u003e tasks \u003d storage.getTasks();"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String task \u003d tasks.get(0).toString();"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assertEquals(task, \"[T][\\u2718] test\");"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(\"Error creating test case.\");"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(\"Error creating test case.\");"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 62
    }
  },
  {
    "path": "src/test/java/duke/command/DeadlineCommandTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "package duke.command;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.BufferedReader;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.File;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.FileReader;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.io.IOException;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import java.util.List;"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.DukeException;"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "import duke.task.Task;"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "public class DeadlineCommandTest {"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    public void execute_normalInput_executedCorrectly() {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String path \u003d \"../data/duke.txt\";"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            Storage storage \u003d new Storage(path);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            File file \u003d new File(path);"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            FileReader fileReader \u003d new FileReader(file);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            BufferedReader bufferedReader \u003d new BufferedReader(fileReader);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            List\u003cTask\u003e tasks \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            TaskList taskList \u003d new TaskList(tasks);"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            LocalDateTime localDateTime \u003d LocalDateTime.parse(\"2007-12-03T10:15:30\");"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            DeadlineCommand deadlineCommand \u003d new DeadlineCommand(\"test\", localDateTime);"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            deadlineCommand.execute(storage, taskList);"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            String input \u003d bufferedReader.readLine();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            assertEquals(input, \"D | 0 | test | 2007-12-03T10:15:30\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(\"Error creating test case.\");"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "            System.out.println(\"Error creating test case.\");"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "        }"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "    }"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 42
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "test"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "todo read book"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "todo"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deadline homework /by 2/12/2012 1000"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deadline homework /by 12.12.2012 1000"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deadline homework /by"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deadline homework"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "event lesson /at 2/12/2012 1000"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "event lesson /at 12.12.2012 1000"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "event lesson /at"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "event lesson"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "event"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "done 2"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "done a"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "done 0"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "done -3"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "find hello"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "find home"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "find"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "delete a"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "delete 0"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "delete -3"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "delete 2"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "delete 1"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "list"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 30
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\duke.Duke.java"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "java -classpath ..\\bin duke.Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 2,
      "-": 19
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/duke/task/*.java ../src/main/java/duke/command/*.java ../src/main/java/duke/*.java ../src/main/java/*.java"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "wenhaogoh"
        },
        "content": "java -classpath ../bin Main \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "wenhaogoh": 2,
      "-": 36
    }
  }
]
