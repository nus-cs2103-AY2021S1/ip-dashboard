[
  {
    "path": "data/duke.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Event | kappachuu | 2010-02-01T18:00 | "
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Deadline | chuu | 2018-09-10T21:00 | "
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "0 | Event | projekt | 2020-09-10T22:30 | "
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "0 | Event | test | 2008-02-01T12:00 | "
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "1 | Deadline | testy | 2020-08-05T15:00 | "
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "0 | Todo | kappa | "
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 6
    }
  },
  {
    "path": "src/main/java/Duke.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.Parser;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.TaskList;"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.Ui;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import duke.Storage;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": "public class Duke {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Entry point to the Duke programme."
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * When run, this function will load all the necessary classes required to start Duke."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param args Input arguments to the programme."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": "    public static void main(String[] args) {"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        TaskList taskList \u003d new TaskList();"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Ui ui \u003d new Ui();"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Parser parser \u003d new Parser(taskList, ui);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // Initialise TaskList"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Storage.loadTasksFrom(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        ui.showWelcomeScreen(); "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // Initialise booleans and scanners"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Scanner inputScanner \u003d new Scanner(System.in);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        while (true) {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            // blocks program until input is received"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            String newInput \u003d inputScanner.nextLine();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            "
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            //trim the input to remove leading and ending whitespace"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            newInput \u003d newInput.trim();"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (!parser.parse(newInput)) { "
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                break;"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // quit"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        inputScanner.close();"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // Save tasks to file"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        Storage.saveTasksTo(\"data/duke.txt\", taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        ui.showGoodbyeScreen();"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "-"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "-"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 43,
      "-": 4
    }
  },
  {
    "path": "src/main/java/duke/Deadline.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Deadline extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected LocalDateTime by;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Deadline(String description, String by) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by, dateTimeInputFormatter);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Deadline(String description, boolean isDone, String by) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.by \u003d LocalDateTime.parse(by);  //  use default formatter that leaves no whitespace to trim"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[4];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                : \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Deadline\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[3] \u003d by.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[D]\" + super.toString() + \" (by: \" + by.format(dateTimeOutputFormatter) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 43
    }
  },
  {
    "path": "src/main/java/duke/DukeException.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "/**"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " * Used to represent common exceptions or erroneous situations encountered by Duke."
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " */"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class DukeException extends Exception {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public DukeException(String errorMessage) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(errorMessage);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 10
    }
  },
  {
    "path": "src/main/java/duke/Event.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.LocalDateTime;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.time.format.DateTimeFormatter;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Event extends Task {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected LocalDateTime timeOfEvent;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeInputFormatter \u003d DateTimeFormatter.ofPattern(\"yyyy-MM-dd HHmm\");"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected static DateTimeFormatter dateTimeOutputFormatter \u003d DateTimeFormatter.ofPattern(\"dd MMM yyyy HH:mm\");"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Event(String description, String timeOfEvent) {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.timeOfEvent \u003d LocalDateTime.parse(timeOfEvent, dateTimeInputFormatter);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Event(String description, boolean isDone, String timeOfEvent) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.timeOfEvent \u003d LocalDateTime.parse(timeOfEvent);"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to "
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[4];"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                : \"0\";"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Event\";"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[3] \u003d timeOfEvent.toString();"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[E]\" + super.toString() + \" (at: \" + timeOfEvent.format(dateTimeOutputFormatter) + \")\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 43
    }
  },
  {
    "path": "src/main/java/duke/Parser.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Parser {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private TaskList taskList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private Ui ui;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Parser(TaskList taskList, Ui ui) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.taskList \u003d taskList;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.ui \u003d ui;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Parses a string and performs the necessary actions based on the input."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param input The input String typed in by the user."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return False if the command to terminate the programme is encountered, true otherwise."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public boolean parse(String input) {"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (input.equals(\"bye\")) {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                return false;"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.equals(\"list\")) {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ui.printAllTasks(taskList);"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"done\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    throw new DukeException(\"OOPS!!! Please specify a task to mark as complete.\");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    int taskIndex \u003d Integer.parseInt(input.substring(5));    // this is not corrected for 0 index"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    Task completedTask \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    completedTask.markAsDone();"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    ui.printMarkTaskCompleteConfirmation(completedTask);"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"delete\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (input.length() \u003d\u003d 6) {"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    throw new DukeException(\" OOPS!!! Please specify a task to delete.\");"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    try {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        int taskIndex \u003d Integer.parseInt(input.substring(7));"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        Task removedTask \u003d taskList.getTask(taskIndex);"
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.deleteTask(taskIndex);"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        ui.printRemoveTaskConfirmation(removedTask, taskList);"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } catch (NumberFormatException e) {"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\" OOPS!!! Please specify a valid task to delete.\");"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else if (input.indexOf(\"find\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (input.length() \u003d\u003d 4) {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    throw new DukeException(\" OOPS!!! Please specify a keyword to search for.\");"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    ui.printMessage(taskList.find(input.substring(5)));"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            } else {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                // use indexOf() method to find substring"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Task newTask \u003d new Task(\"\");    // this is to make the compiler happy"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (input.indexOf(\"event\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (input.length() \u003c\u003d 5) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\" OOPS!!! The description of an event cannot be empty.\");"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        int indexOfAtKeyword \u003d input.indexOf(\" /at \");"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        if (indexOfAtKeyword \u003d\u003d -1) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            throw new DukeException(\" OOPS!!! Please specify the event time.\");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            String eventDesc \u003d input.substring(6, indexOfAtKeyword);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            String eventTime \u003d input.substring(indexOfAtKeyword + 5);"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            newTask \u003d new Event(eventDesc, eventTime);"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else if (input.indexOf(\"deadline\") \u003d\u003d 0) {"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (input.length() \u003c\u003d 8) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\" OOPS!!! The description of a deadline cannot be empty.\");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        int indexOfByKeyword \u003d input.indexOf(\" /by \");"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        if (indexOfByKeyword \u003d\u003d -1) {"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            throw new DukeException(\" OOPS!!! Please specify the deadline time.\");"
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        } else {"
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            String deadlineDesc \u003d input.substring(9, indexOfByKeyword);"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            String deadlineTime \u003d input.substring(indexOfByKeyword + 5);"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            newTask \u003d new Deadline(deadlineDesc, deadlineTime);"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                            taskList.addTask(newTask);"
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        }"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else if (input.indexOf(\"todo\") \u003d\u003d 0){"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (input.length() \u003c\u003d 4 || input.substring(5).trim().length() \u003d\u003d 0) {"
      },
      {
        "lineNumber": 93,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        throw new DukeException(\" OOPS!!! The description of a todo cannot be empty.\");"
      },
      {
        "lineNumber": 94,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else {"
      },
      {
        "lineNumber": 95,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        newTask \u003d new Todo(input.substring(5));"
      },
      {
        "lineNumber": 96,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(newTask);"
      },
      {
        "lineNumber": 97,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 98,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                } else {"
      },
      {
        "lineNumber": 99,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    throw new DukeException(\" OOPS!!! I\u0027m sorry, but I don\u0027t know what that means :-(\");"
      },
      {
        "lineNumber": 100,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 101,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 102,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ui.printAddTaskConfirmation(newTask, taskList);"
      },
      {
        "lineNumber": 103,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                "
      },
      {
        "lineNumber": 104,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 105,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (DukeException e) {"
      },
      {
        "lineNumber": 106,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            ui.printExceptionMessage(e);"
      },
      {
        "lineNumber": 107,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 108,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 109,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 110,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 111,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 112,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 112
    }
  },
  {
    "path": "src/main/java/duke/Storage.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.*;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Scanner;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Storage {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Used to load tasks from a storage file."
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Parses the file specified at the filepath and adds Tasks to the tasklist "
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * according to the contents of the file."
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param filepath The relative path where the file is stored."
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The task list to which the new Tasks should be added to."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return true if the file is loaded successfully, false otherwise."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static boolean loadTasksFrom(String filepath, TaskList taskList) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        File dataFile \u003d new File(filepath);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            Scanner fileScanner \u003d new Scanner(dataFile);"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            while (fileScanner.hasNextLine()) {"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                String nextLine \u003d fileScanner.nextLine();"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                if (!nextLine.isEmpty()) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    String[] tokens \u003d nextLine.split(\" [|] \");"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    boolean isDone \u003d !tokens[0].equals(\"0\");"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    if (tokens[1].equals(\"Todo\")) {"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(new Todo(tokens[2], isDone));"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else if (tokens[1].equals(\"Event\")) {"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(new Event(tokens[2], isDone, tokens[3]));"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    } else if (tokens[1].equals(\"Deadline\")) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                        taskList.addTask(new Deadline(tokens[2], isDone, tokens[3]));"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    }"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            "
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fileScanner.close();"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (FileNotFoundException e) {"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            // No need to do anything if file not found as file will be created later anyway"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Stores all tasks in the specified tasklist to the file specified in the filepath."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param filepath The relative path where the file is stored."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The task list which contains the Tasks to be stored."
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return true if the Tasks have been successfully stored to the file, false otherwise."
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public static boolean saveTasksTo(String filepath, TaskList taskList) {"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        ArrayList\u003cTask\u003e tasksArray \u003d taskList.getAllTasks();"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String fileOutput \u003d \"\";"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (Task task: tasksArray) {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            for (String string: task.serialize()) {"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                fileOutput \u003d fileOutput + string + \" | \";"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            fileOutput \u003d fileOutput + \"\\n\";"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            BufferedWriter writer \u003d new BufferedWriter(new FileWriter(filepath));"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            writer.write(fileOutput);"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            writer.close();"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            "
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (IOException e) {"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            return false;"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return true;"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 77
    }
  },
  {
    "path": "src/main/java/duke/Task.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected String description;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    protected boolean isDone;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task(String description) {"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d false;"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task(String description, boolean isDone) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.description \u003d description;"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d isDone;"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns unicode symbols (tick or cross) corresponding to the completion state of the task."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Tick if the task is complete, cross otherwise."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String getStatusIcon() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return (isDone ? \"\\u2713\" : \"\\u2718\"); //return tick or X symbols"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Marks the task as complete."
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void markAsDone() {"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        this.isDone \u003d true;"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to "
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[3];"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    ? \"1\""
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                    : \"0\";"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Task\";"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        "
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[\" + this.getStatusIcon() + \"] \" + description;"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 52
    }
  },
  {
    "path": "src/main/java/duke/TaskList.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.ArrayList;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TaskList {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private final ArrayList\u003cTask\u003e taskList;"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public TaskList() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList \u003d new ArrayList\u003c\u003e();"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Adds a task to the list of tasks."
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The task to be added to the list of tasks."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void addTask(Task task) {"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.add(task);"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Removes the specified task from the list of tasks."
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param index The index of the task to be deleted."
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void deleteTask(int index) {"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        taskList.remove(index - 1);"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the Task object corresponding to the task at the specified index."
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param index The index of the task to be obtained."
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Task object corresponding to the task at the specified index."
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Task getTask(int index) {"
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        // index is bounded from 1 to len, so -1 to convert to array index"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.get(index - 1);"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the entire list of tasks as an ArrayList."
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return ArrayList containing the current tasks stored so far."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public ArrayList\u003cTask\u003e getAllTasks() {"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList;"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns the number of Tasks stored in the TaskList."
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return The number of elements in the data structure which stores the Tasks."
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public int numTasks() {"
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return taskList.size();"
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns a String object containing all the tasks, that is to be passed to the UI for "
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * pretty printing."
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Formatted String enumerating all the tasks in the task list."
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String getAllTasksAsString() {"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String output \u003d \"Here are the tasks in your list: \\n\";"
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            output \u003d output + ((i + 1) + \". \" + taskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String find(String keyword) {"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String output \u003d \"Here are the matching tasks in your list: \\n\";"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        for (int i \u003d 0; i \u003c taskList.size(); i++) {"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            if (taskList.get(i).toString().contains(keyword)) {"
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                output \u003d output + ((i + 1) + \". \" + taskList.get(i)) + \"\\n\";"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            }"
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 76
    }
  },
  {
    "path": "src/main/java/duke/Todo.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Todo extends Task {"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Todo(String description) {"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description);"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Todo(String description, boolean isDone) {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        super(description, isDone);"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Returns an array of Strings representing the state of the task, to be passed to Storage to "
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * be formatted and written to a file."
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @return Array of Strings representing the current state of the Task."
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String[] serialize() {"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String[] output \u003d new String[3];"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[0] \u003d this.isDone"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                ? \"1\""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                : \"0\";"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[1] \u003d \"Todo\";"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        output[2] \u003d description;"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return output;"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Override"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public String toString() {"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        return \"[T]\" + super.toString();"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 33
    }
  },
  {
    "path": "src/main/java/duke/Ui.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.PrintStream;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.io.UnsupportedEncodingException;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class Ui {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    private PrintStream out;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public Ui() {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        try {"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            out \u003d new PrintStream(System.out, true, \"UTF-8\");"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        } catch (UnsupportedEncodingException e) {"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "            out \u003d new PrintStream(System.out, true);"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders the welcome message onto the console."
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * To be called on programme startup."
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void showWelcomeScreen() {"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        String logo \u003d \" ____        _        \\n\""
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + \"|  _ \\\\ _   _| | _____ \\n\""
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + \"| | | | | | | |/ / _ \\\\\\n\""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + \"| |_| | |_| |   \u003c  __/\\n\""
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                + \"|____/ \\\\__,_|_|\\\\_\\\\___|\\n\";"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Hello, my name is\\n\" + logo);"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"What can I do for you?\");"
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders the goodbye message onto the console."
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * To be called on programme exit."
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void showGoodbyeScreen() {"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"See you space cowboy!\");"
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 39,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 40,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Prints the error message from an exception."
      },
      {
        "lineNumber": 41,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param e the exception that contains the error message to be printed."
      },
      {
        "lineNumber": 42,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 43,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printExceptionMessage(Exception e) {"
      },
      {
        "lineNumber": 44,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(e.getMessage());"
      },
      {
        "lineNumber": 45,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 46,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 47,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 48,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders a confirmation message to the console to notify the user of the successful "
      },
      {
        "lineNumber": 49,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * addition of a Task to the TaskList, and displays all lists in the TaskList."
      },
      {
        "lineNumber": 50,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The Task that has been added to the task list."
      },
      {
        "lineNumber": 51,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The TaskList which the task has been added to."
      },
      {
        "lineNumber": 52,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 53,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printAddTaskConfirmation(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 54,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Got it. I\u0027ve added this task: \");"
      },
      {
        "lineNumber": 55,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(task);"
      },
      {
        "lineNumber": 56,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Now you have \" + taskList.numTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 57,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 58,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 59,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 60,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders a confirmation message to the console to notify the user of the successful "
      },
      {
        "lineNumber": 61,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * addition of a Task to the TaskList, and displays all lists in the TaskList."
      },
      {
        "lineNumber": 62,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The Task that has been removed from the task list."
      },
      {
        "lineNumber": 63,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The TaskList which the task has been removed from."
      },
      {
        "lineNumber": 64,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 65,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printRemoveTaskConfirmation(Task task, TaskList taskList) {"
      },
      {
        "lineNumber": 66,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Noted. I\u0027ve removed this task: \");"
      },
      {
        "lineNumber": 67,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(task);"
      },
      {
        "lineNumber": 68,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Now you have \" + taskList.numTasks() + \" tasks in the list.\");"
      },
      {
        "lineNumber": 69,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 70,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 71,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 72,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders a confirmation message to the console to notify the user that the specified "
      },
      {
        "lineNumber": 73,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * task has been successfully marked as complete."
      },
      {
        "lineNumber": 74,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param task The Task that has been marked as complete."
      },
      {
        "lineNumber": 75,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 76,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printMarkTaskCompleteConfirmation(Task task) {"
      },
      {
        "lineNumber": 77,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(\"Nice! I\u0027ve marked this task as done: \");"
      },
      {
        "lineNumber": 78,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(task);"
      },
      {
        "lineNumber": 79,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 80,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 81,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    /**"
      },
      {
        "lineNumber": 82,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * Renders the all tasks from the TaskList onto the console."
      },
      {
        "lineNumber": 83,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     * @param taskList The TaskList which contains all the tasks to be displayed on the console."
      },
      {
        "lineNumber": 84,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "     */"
      },
      {
        "lineNumber": 85,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printAllTasks(TaskList taskList) {"
      },
      {
        "lineNumber": 86,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(taskList.getAllTasksAsString());"
      },
      {
        "lineNumber": 87,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 88,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    "
      },
      {
        "lineNumber": 89,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void printMessage(String message) {"
      },
      {
        "lineNumber": 90,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        out.println(message);"
      },
      {
        "lineNumber": 91,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 92,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 92
    }
  },
  {
    "path": "src/test/java/DukeTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class DukeTest {"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void dummyTest(){"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(2, 2);"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 10
    }
  },
  {
    "path": "src/test/java/duke/EventTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class EventTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void testSerialize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(Arrays.toString(new String[]{\"0\", \"Event\", \"kappa\", \"2018-02-01T12:00\"}),"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Arrays.toString(new Event(\"kappa\", \"2018-02-01 1200\").serialize()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(Arrays.toString(new String[]{\"1\", \"Event\", \"kappa\", \"2018-02-01T15:00\"}),"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Arrays.toString(new Event(\"kappa\", true, \"2018-02-01T15:00\").serialize()));"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 17
    }
  },
  {
    "path": "src/test/java/duke/TaskListTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TaskListTest {"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void testEmptyListDisplay() {"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(\"Here are the tasks in your list: \\n\", "
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                new TaskList().getAllTasksAsString());"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 12
    }
  },
  {
    "path": "src/test/java/duke/TodoTest.java",
    "fileType": "java",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "package duke;"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import org.junit.jupiter.api.Test;"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import java.util.Arrays;"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "import static org.junit.jupiter.api.Assertions.assertEquals;"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "public class TodoTest {"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    @Test"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    public void testSerialize() {"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "        assertEquals(Arrays.toString(new String[]{\"1\", \"Todo\", \"kappa\"}), "
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "                Arrays.toString(new Todo(\"kappa\", true).serialize()));"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "    }"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "}"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 15
    }
  },
  {
    "path": "text-ui-test/input.txt",
    "fileType": "txt",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "deadline return book /by June 6th"
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "event project meeting /at Aug 6th 2-4pm"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo join sports club"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo borrow book"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 1"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 3"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done 5"
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "todo"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " todo"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "blah"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "delete 3"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "list"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "delete"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " delete "
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "done "
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " done "
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "deadline"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " deadline"
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "event"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": " event"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "lalala"
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "bye"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 25
    }
  },
  {
    "path": "text-ui-test/runtest.bat",
    "fileType": "bat",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "@ECHO OFF"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "REM create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if not exist ..\\bin mkdir ..\\bin"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "REM delete output from previous run"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "del ACTUAL.TXT"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "REM compile the code into the bin folder"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "javac  -cp ..\\src -Xlint:none -d ..\\bin ..\\src\\main\\java\\*"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "IF ERRORLEVEL 1 ("
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    echo ********** BUILD FAILURE **********"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "    exit /b 1"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ")"
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "REM no error here, errorlevel \u003d\u003d 0"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "REM run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ..\\bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "REM compare the output to the expected output"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": "FC ACTUAL.TXT EXPECTED.TXT"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 1,
      "-": 20
    }
  },
  {
    "path": "text-ui-test/runtest.sh",
    "fileType": "sh",
    "lines": [
      {
        "lineNumber": 1,
        "author": {
          "gitId": "-"
        },
        "content": "#!/usr/bin/env bash"
      },
      {
        "lineNumber": 2,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 3,
        "author": {
          "gitId": "-"
        },
        "content": "# create bin directory if it doesn\u0027t exist"
      },
      {
        "lineNumber": 4,
        "author": {
          "gitId": "-"
        },
        "content": "if [ ! -d \"../bin\" ]"
      },
      {
        "lineNumber": 5,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 6,
        "author": {
          "gitId": "-"
        },
        "content": "    mkdir ../bin"
      },
      {
        "lineNumber": 7,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 8,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 9,
        "author": {
          "gitId": "-"
        },
        "content": "# delete output from previous run"
      },
      {
        "lineNumber": 10,
        "author": {
          "gitId": "-"
        },
        "content": "if [ -e \"./ACTUAL.TXT\" ]"
      },
      {
        "lineNumber": 11,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 12,
        "author": {
          "gitId": "-"
        },
        "content": "    rm ACTUAL.TXT"
      },
      {
        "lineNumber": 13,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 14,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 15,
        "author": {
          "gitId": "-"
        },
        "content": "# compile the code into the bin folder, terminates if error occurred"
      },
      {
        "lineNumber": 16,
        "author": {
          "gitId": "youyingfeng"
        },
        "content": "if ! javac -cp ../src -Xlint:none -d ../bin ../src/main/java/*"
      },
      {
        "lineNumber": 17,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 18,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"********** BUILD FAILURE **********\""
      },
      {
        "lineNumber": 19,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 20,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      },
      {
        "lineNumber": 21,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 22,
        "author": {
          "gitId": "-"
        },
        "content": "# run the program, feed commands from input.txt file and redirect the output to the ACTUAL.TXT"
      },
      {
        "lineNumber": 23,
        "author": {
          "gitId": "-"
        },
        "content": "java -classpath ../bin Duke \u003c input.txt \u003e ACTUAL.TXT"
      },
      {
        "lineNumber": 24,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 25,
        "author": {
          "gitId": "-"
        },
        "content": "# convert to UNIX format"
      },
      {
        "lineNumber": 26,
        "author": {
          "gitId": "-"
        },
        "content": "cp EXPECTED.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 27,
        "author": {
          "gitId": "-"
        },
        "content": "dos2unix ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 28,
        "author": {
          "gitId": "-"
        },
        "content": ""
      },
      {
        "lineNumber": 29,
        "author": {
          "gitId": "-"
        },
        "content": "# compare the output to the expected output"
      },
      {
        "lineNumber": 30,
        "author": {
          "gitId": "-"
        },
        "content": "diff ACTUAL.TXT EXPECTED-UNIX.TXT"
      },
      {
        "lineNumber": 31,
        "author": {
          "gitId": "-"
        },
        "content": "if [ $? -eq 0 ]"
      },
      {
        "lineNumber": 32,
        "author": {
          "gitId": "-"
        },
        "content": "then"
      },
      {
        "lineNumber": 33,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: PASSED\""
      },
      {
        "lineNumber": 34,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 0"
      },
      {
        "lineNumber": 35,
        "author": {
          "gitId": "-"
        },
        "content": "else"
      },
      {
        "lineNumber": 36,
        "author": {
          "gitId": "-"
        },
        "content": "    echo \"Test result: FAILED\""
      },
      {
        "lineNumber": 37,
        "author": {
          "gitId": "-"
        },
        "content": "    exit 1"
      },
      {
        "lineNumber": 38,
        "author": {
          "gitId": "-"
        },
        "content": "fi"
      }
    ],
    "authorContributionMap": {
      "youyingfeng": 1,
      "-": 37
    }
  }
]
